Directory structure:
└── python-cpython/
    ├── LICENSE
    ├── Makefile.pre.in
    ├── README.rst
    ├── aclocal.m4
    ├── config.guess
    ├── config.sub
    ├── configure
    ├── configure.ac
    ├── install-sh
    ├── pyconfig.h.in
    ├── .coveragerc
    ├── .editorconfig
    ├── .mailmap
    ├── .pre-commit-config.yaml
    ├── .readthedocs.yml
    ├── Android/
    │   ├── README.md
    │   ├── android-env.sh
    │   ├── android.py
    │   └── testbed/
    │       ├── build.gradle.kts
    │       ├── gradle.properties
    │       ├── settings.gradle.kts
    │       ├── .gitignore
    │       ├── app/
    │       │   ├── build.gradle.kts
    │       │   ├── .gitignore
    │       │   └── src/
    │       │       ├── androidTest/
    │       │       │   └── java/
    │       │       │       └── org/
    │       │       │           └── python/
    │       │       │               └── testbed/
    │       │       │                   └── PythonSuite.kt
    │       │       └── main/
    │       │           ├── AndroidManifest.xml
    │       │           ├── c/
    │       │           │   ├── CMakeLists.txt
    │       │           │   └── main_activity.c
    │       │           ├── java/
    │       │           │   └── org/
    │       │           │       └── python/
    │       │           │           └── testbed/
    │       │           │               └── MainActivity.kt
    │       │           ├── python/
    │       │           │   └── main.py
    │       │           └── res/
    │       │               ├── drawable-xxhdpi/
    │       │               ├── layout/
    │       │               │   └── activity_main.xml
    │       │               └── values/
    │       │                   └── strings.xml
    │       └── gradle/
    │           └── wrapper/
    │               └── gradle-wrapper.properties
    ├── Doc/
    │   ├── Makefile
    │   ├── README.rst
    │   ├── about.rst
    │   ├── bugs.rst
    │   ├── conf.py
    │   ├── constraints.txt
    │   ├── contents.rst
    │   ├── copyright.rst
    │   ├── glossary.rst
    │   ├── license.rst
    │   ├── make.bat
    │   ├── requirements-oldest-sphinx.txt
    │   ├── requirements.txt
    │   ├── .ruff.toml
    │   ├── _static/
    │   ├── c-api/
    │   │   ├── abstract.rst
    │   │   ├── allocation.rst
    │   │   ├── apiabiversion.rst
    │   │   ├── arg.rst
    │   │   ├── bool.rst
    │   │   ├── buffer.rst
    │   │   ├── bytearray.rst
    │   │   ├── bytes.rst
    │   │   ├── call.rst
    │   │   ├── capsule.rst
    │   │   ├── cell.rst
    │   │   ├── code.rst
    │   │   ├── codec.rst
    │   │   ├── complex.rst
    │   │   ├── concrete.rst
    │   │   ├── contextvars.rst
    │   │   ├── conversion.rst
    │   │   ├── coro.rst
    │   │   ├── datetime.rst
    │   │   ├── descriptor.rst
    │   │   ├── dict.rst
    │   │   ├── exceptions.rst
    │   │   ├── file.rst
    │   │   ├── float.rst
    │   │   ├── frame.rst
    │   │   ├── function.rst
    │   │   ├── gcsupport.rst
    │   │   ├── gen.rst
    │   │   ├── hash.rst
    │   │   ├── import.rst
    │   │   ├── index.rst
    │   │   ├── init.rst
    │   │   ├── init_config.rst
    │   │   ├── intro.rst
    │   │   ├── iter.rst
    │   │   ├── iterator.rst
    │   │   ├── list.rst
    │   │   ├── long.rst
    │   │   ├── mapping.rst
    │   │   ├── marshal.rst
    │   │   ├── memory.rst
    │   │   ├── memoryview.rst
    │   │   ├── method.rst
    │   │   ├── module.rst
    │   │   ├── monitoring.rst
    │   │   ├── none.rst
    │   │   ├── number.rst
    │   │   ├── object.rst
    │   │   ├── objimpl.rst
    │   │   ├── perfmaps.rst
    │   │   ├── refcounting.rst
    │   │   ├── reflection.rst
    │   │   ├── sequence.rst
    │   │   ├── set.rst
    │   │   ├── slice.rst
    │   │   ├── stable.rst
    │   │   ├── structures.rst
    │   │   ├── sys.rst
    │   │   ├── time.rst
    │   │   ├── tuple.rst
    │   │   ├── type.rst
    │   │   ├── typehints.rst
    │   │   ├── typeobj.rst
    │   │   ├── unicode.rst
    │   │   ├── utilities.rst
    │   │   ├── veryhigh.rst
    │   │   └── weakref.rst
    │   ├── data/
    │   │   ├── refcounts.dat
    │   │   └── stable_abi.dat
    │   ├── deprecations/
    │   │   ├── c-api-pending-removal-in-3.14.rst
    │   │   ├── c-api-pending-removal-in-3.15.rst
    │   │   ├── c-api-pending-removal-in-future.rst
    │   │   ├── index.rst
    │   │   ├── pending-removal-in-3.13.rst
    │   │   ├── pending-removal-in-3.14.rst
    │   │   ├── pending-removal-in-3.15.rst
    │   │   ├── pending-removal-in-3.16.rst
    │   │   └── pending-removal-in-future.rst
    │   ├── distributing/
    │   │   └── index.rst
    │   ├── extending/
    │   │   ├── building.rst
    │   │   ├── embedding.rst
    │   │   ├── extending.rst
    │   │   ├── index.rst
    │   │   ├── newtypes.rst
    │   │   ├── newtypes_tutorial.rst
    │   │   └── windows.rst
    │   ├── faq/
    │   │   ├── design.rst
    │   │   ├── extending.rst
    │   │   ├── general.rst
    │   │   ├── gui.rst
    │   │   ├── index.rst
    │   │   ├── installed.rst
    │   │   ├── library.rst
    │   │   ├── programming.rst
    │   │   └── windows.rst
    │   ├── howto/
    │   │   ├── annotations.rst
    │   │   ├── argparse-optparse.rst
    │   │   ├── argparse.rst
    │   │   ├── clinic.rst
    │   │   ├── cporting.rst
    │   │   ├── curses.rst
    │   │   ├── descriptor.rst
    │   │   ├── enum.rst
    │   │   ├── free-threading-extensions.rst
    │   │   ├── free-threading-python.rst
    │   │   ├── functional.rst
    │   │   ├── gdb_helpers.rst
    │   │   ├── index.rst
    │   │   ├── instrumentation.rst
    │   │   ├── ipaddress.rst
    │   │   ├── isolating-extensions.rst
    │   │   ├── logging-cookbook.rst
    │   │   ├── logging.rst
    │   │   ├── mro.rst
    │   │   ├── perf_profiling.rst
    │   │   ├── pyporting.rst
    │   │   ├── regex.rst
    │   │   ├── sockets.rst
    │   │   ├── sorting.rst
    │   │   ├── timerfd.rst
    │   │   ├── unicode.rst
    │   │   └── urllib2.rst
    │   ├── includes/
    │   │   ├── dbpickle.py
    │   │   ├── diff.py
    │   │   ├── email-alternative.py
    │   │   ├── email-dir.py
    │   │   ├── email-headers.py
    │   │   ├── email-mime.py
    │   │   ├── email-read-alternative.py
    │   │   ├── email-simple.py
    │   │   ├── email-unpack.py
    │   │   ├── minidom-example.py
    │   │   ├── mp_newtype.py
    │   │   ├── mp_pool.py
    │   │   ├── mp_workers.py
    │   │   ├── ndiff.py
    │   │   ├── run-func.c
    │   │   ├── typestruct.h
    │   │   ├── tzinfo_examples.py
    │   │   ├── wasm-mobile-notavail.rst
    │   │   ├── wasm-notavail.rst
    │   │   └── newtypes/
    │   │       ├── custom.c
    │   │       ├── custom2.c
    │   │       ├── custom3.c
    │   │       ├── custom4.c
    │   │       ├── pyproject.toml
    │   │       ├── setup.py
    │   │       ├── sublist.c
    │   │       └── test.py
    │   ├── installing/
    │   │   └── index.rst
    │   ├── library/
    │   │   ├── __future__.rst
    │   │   ├── __main__.rst
    │   │   ├── _thread.rst
    │   │   ├── abc.rst
    │   │   ├── aifc.rst
    │   │   ├── allos.rst
    │   │   ├── annotationlib.rst
    │   │   ├── archiving.rst
    │   │   ├── argparse.rst
    │   │   ├── array.rst
    │   │   ├── ast.rst
    │   │   ├── asynchat.rst
    │   │   ├── asyncio-api-index.rst
    │   │   ├── asyncio-dev.rst
    │   │   ├── asyncio-eventloop.rst
    │   │   ├── asyncio-exceptions.rst
    │   │   ├── asyncio-extending.rst
    │   │   ├── asyncio-future.rst
    │   │   ├── asyncio-llapi-index.rst
    │   │   ├── asyncio-platforms.rst
    │   │   ├── asyncio-policy.rst
    │   │   ├── asyncio-protocol.rst
    │   │   ├── asyncio-queue.rst
    │   │   ├── asyncio-runner.rst
    │   │   ├── asyncio-stream.rst
    │   │   ├── asyncio-subprocess.rst
    │   │   ├── asyncio-sync.rst
    │   │   ├── asyncio-task.rst
    │   │   ├── asyncio.rst
    │   │   ├── asyncore.rst
    │   │   ├── atexit.rst
    │   │   ├── audioop.rst
    │   │   ├── audit_events.rst
    │   │   ├── base64.rst
    │   │   ├── bdb.rst
    │   │   ├── binary.rst
    │   │   ├── binascii.rst
    │   │   ├── bisect.rst
    │   │   ├── builtins.rst
    │   │   ├── bz2.rst
    │   │   ├── calendar.rst
    │   │   ├── cgi.rst
    │   │   ├── cgitb.rst
    │   │   ├── chunk.rst
    │   │   ├── cmath.rst
    │   │   ├── cmd.rst
    │   │   ├── cmdline.rst
    │   │   ├── cmdlinelibs.rst
    │   │   ├── code.rst
    │   │   ├── codecs.rst
    │   │   ├── codeop.rst
    │   │   ├── collections.abc.rst
    │   │   ├── collections.rst
    │   │   ├── colorsys.rst
    │   │   ├── compileall.rst
    │   │   ├── concurrency.rst
    │   │   ├── concurrent.futures.rst
    │   │   ├── concurrent.rst
    │   │   ├── configparser.rst
    │   │   ├── constants.rst
    │   │   ├── contextlib.rst
    │   │   ├── contextvars.rst
    │   │   ├── copy.rst
    │   │   ├── copyreg.rst
    │   │   ├── crypt.rst
    │   │   ├── crypto.rst
    │   │   ├── csv.rst
    │   │   ├── ctypes.rst
    │   │   ├── curses.ascii.rst
    │   │   ├── curses.panel.rst
    │   │   ├── curses.rst
    │   │   ├── custominterp.rst
    │   │   ├── dataclasses.rst
    │   │   ├── datatypes.rst
    │   │   ├── datetime.rst
    │   │   ├── dbm.rst
    │   │   ├── debug.rst
    │   │   ├── decimal.rst
    │   │   ├── development.rst
    │   │   ├── devmode.rst
    │   │   ├── dialog.rst
    │   │   ├── difflib.rst
    │   │   ├── dis.rst
    │   │   ├── distribution.rst
    │   │   ├── distutils.rst
    │   │   ├── doctest.rst
    │   │   ├── email.charset.rst
    │   │   ├── email.compat32-message.rst
    │   │   ├── email.contentmanager.rst
    │   │   ├── email.encoders.rst
    │   │   ├── email.errors.rst
    │   │   ├── email.examples.rst
    │   │   ├── email.generator.rst
    │   │   ├── email.header.rst
    │   │   ├── email.headerregistry.rst
    │   │   ├── email.iterators.rst
    │   │   ├── email.message.rst
    │   │   ├── email.mime.rst
    │   │   ├── email.parser.rst
    │   │   ├── email.policy.rst
    │   │   ├── email.rst
    │   │   ├── email.utils.rst
    │   │   ├── ensurepip.rst
    │   │   ├── enum.rst
    │   │   ├── errno.rst
    │   │   ├── exceptions.rst
    │   │   ├── faulthandler.rst
    │   │   ├── fcntl.rst
    │   │   ├── filecmp.rst
    │   │   ├── fileformats.rst
    │   │   ├── fileinput.rst
    │   │   ├── filesys.rst
    │   │   ├── fnmatch.rst
    │   │   ├── fractions.rst
    │   │   ├── frameworks.rst
    │   │   ├── ftplib.rst
    │   │   ├── functional.rst
    │   │   ├── functions.rst
    │   │   ├── functools.rst
    │   │   ├── gc.rst
    │   │   ├── getopt.rst
    │   │   ├── getpass.rst
    │   │   ├── gettext.rst
    │   │   ├── glob.rst
    │   │   ├── graphlib.rst
    │   │   ├── grp.rst
    │   │   ├── gzip.rst
    │   │   ├── hashlib.rst
    │   │   ├── heapq.rst
    │   │   ├── hmac.rst
    │   │   ├── html.entities.rst
    │   │   ├── html.parser.rst
    │   │   ├── html.rst
    │   │   ├── http.client.rst
    │   │   ├── http.cookiejar.rst
    │   │   ├── http.cookies.rst
    │   │   ├── http.rst
    │   │   ├── http.server.rst
    │   │   ├── i18n.rst
    │   │   ├── idle.rst
    │   │   ├── imaplib.rst
    │   │   ├── imghdr.rst
    │   │   ├── imp.rst
    │   │   ├── importlib.metadata.rst
    │   │   ├── importlib.resources.abc.rst
    │   │   ├── importlib.resources.rst
    │   │   ├── importlib.rst
    │   │   ├── index.rst
    │   │   ├── inspect.rst
    │   │   ├── internet.rst
    │   │   ├── intro.rst
    │   │   ├── io.rst
    │   │   ├── ipaddress.rst
    │   │   ├── ipc.rst
    │   │   ├── itertools.rst
    │   │   ├── json.rst
    │   │   ├── keyword.rst
    │   │   ├── language.rst
    │   │   ├── linecache.rst
    │   │   ├── locale.rst
    │   │   ├── logging.config.rst
    │   │   ├── logging.handlers.rst
    │   │   ├── logging.rst
    │   │   ├── lzma.rst
    │   │   ├── mailbox.rst
    │   │   ├── mailcap.rst
    │   │   ├── markup.rst
    │   │   ├── marshal.rst
    │   │   ├── math.rst
    │   │   ├── mimetypes.rst
    │   │   ├── mm.rst
    │   │   ├── mmap.rst
    │   │   ├── modulefinder.rst
    │   │   ├── modules.rst
    │   │   ├── msilib.rst
    │   │   ├── msvcrt.rst
    │   │   ├── multiprocessing.rst
    │   │   ├── multiprocessing.shared_memory.rst
    │   │   ├── netdata.rst
    │   │   ├── netrc.rst
    │   │   ├── nis.rst
    │   │   ├── nntplib.rst
    │   │   ├── numbers.rst
    │   │   ├── numeric.rst
    │   │   ├── operator.rst
    │   │   ├── optparse.rst
    │   │   ├── os.path.rst
    │   │   ├── os.rst
    │   │   ├── ossaudiodev.rst
    │   │   ├── pathlib.rst
    │   │   ├── pdb.rst
    │   │   ├── persistence.rst
    │   │   ├── pickle.rst
    │   │   ├── pickletools.rst
    │   │   ├── pipes.rst
    │   │   ├── pkgutil.rst
    │   │   ├── platform.rst
    │   │   ├── plistlib.rst
    │   │   ├── poplib.rst
    │   │   ├── posix.rst
    │   │   ├── pprint.rst
    │   │   ├── profile.rst
    │   │   ├── pty.rst
    │   │   ├── pwd.rst
    │   │   ├── py_compile.rst
    │   │   ├── pyclbr.rst
    │   │   ├── pydoc.rst
    │   │   ├── pyexpat.rst
    │   │   ├── python.rst
    │   │   ├── queue.rst
    │   │   ├── quopri.rst
    │   │   ├── random.rst
    │   │   ├── re.rst
    │   │   ├── readline.rst
    │   │   ├── removed.rst
    │   │   ├── reprlib.rst
    │   │   ├── resource.rst
    │   │   ├── rlcompleter.rst
    │   │   ├── runpy.rst
    │   │   ├── sched.rst
    │   │   ├── secrets.rst
    │   │   ├── security_warnings.rst
    │   │   ├── select.rst
    │   │   ├── selectors.rst
    │   │   ├── shelve.rst
    │   │   ├── shlex.rst
    │   │   ├── shutil.rst
    │   │   ├── signal.rst
    │   │   ├── site.rst
    │   │   ├── smtpd.rst
    │   │   ├── smtplib.rst
    │   │   ├── sndhdr.rst
    │   │   ├── socket.rst
    │   │   ├── socketserver.rst
    │   │   ├── spwd.rst
    │   │   ├── sqlite3.rst
    │   │   ├── ssl.rst
    │   │   ├── stat.rst
    │   │   ├── statistics.rst
    │   │   ├── stdtypes.rst
    │   │   ├── string.rst
    │   │   ├── stringprep.rst
    │   │   ├── struct.rst
    │   │   ├── subprocess.rst
    │   │   ├── sunau.rst
    │   │   ├── superseded.rst
    │   │   ├── symtable.rst
    │   │   ├── sys.monitoring.rst
    │   │   ├── sys.rst
    │   │   ├── sys_path_init.rst
    │   │   ├── sysconfig.rst
    │   │   ├── syslog.rst
    │   │   ├── tabnanny.rst
    │   │   ├── tarfile.rst
    │   │   ├── telnetlib.rst
    │   │   ├── tempfile.rst
    │   │   ├── termios.rst
    │   │   ├── test.rst
    │   │   ├── text.rst
    │   │   ├── textwrap.rst
    │   │   ├── threading.rst
    │   │   ├── time.rst
    │   │   ├── timeit.rst
    │   │   ├── tk.rst
    │   │   ├── tkinter.colorchooser.rst
    │   │   ├── tkinter.dnd.rst
    │   │   ├── tkinter.font.rst
    │   │   ├── tkinter.messagebox.rst
    │   │   ├── tkinter.rst
    │   │   ├── tkinter.scrolledtext.rst
    │   │   ├── tkinter.ttk.rst
    │   │   ├── token-list.inc
    │   │   ├── token.rst
    │   │   ├── tokenize.rst
    │   │   ├── tomllib.rst
    │   │   ├── trace.rst
    │   │   ├── traceback.rst
    │   │   ├── tracemalloc.rst
    │   │   ├── tty.rst
    │   │   ├── tulip_coro.dia
    │   │   ├── turtle-star.ps
    │   │   ├── turtle.rst
    │   │   ├── types.rst
    │   │   ├── typing.rst
    │   │   ├── unicodedata.rst
    │   │   ├── unittest.mock-examples.rst
    │   │   ├── unittest.mock.rst
    │   │   ├── unittest.rst
    │   │   ├── unix.rst
    │   │   ├── urllib.error.rst
    │   │   ├── urllib.parse.rst
    │   │   ├── urllib.request.rst
    │   │   ├── urllib.robotparser.rst
    │   │   ├── urllib.rst
    │   │   ├── uu.rst
    │   │   ├── uuid.rst
    │   │   ├── venv.rst
    │   │   ├── warnings.rst
    │   │   ├── wave.rst
    │   │   ├── weakref.rst
    │   │   ├── webbrowser.rst
    │   │   ├── windows.rst
    │   │   ├── winreg.rst
    │   │   ├── winsound.rst
    │   │   ├── wsgiref.rst
    │   │   ├── xdrlib.rst
    │   │   ├── xml.dom.minidom.rst
    │   │   ├── xml.dom.pulldom.rst
    │   │   ├── xml.dom.rst
    │   │   ├── xml.etree.elementtree.rst
    │   │   ├── xml.rst
    │   │   ├── xml.sax.handler.rst
    │   │   ├── xml.sax.reader.rst
    │   │   ├── xml.sax.rst
    │   │   ├── xml.sax.utils.rst
    │   │   ├── xmlrpc.client.rst
    │   │   ├── xmlrpc.rst
    │   │   ├── xmlrpc.server.rst
    │   │   ├── zipapp.rst
    │   │   ├── zipfile.rst
    │   │   ├── zipimport.rst
    │   │   ├── zlib.rst
    │   │   └── zoneinfo.rst
    │   ├── reference/
    │   │   ├── compound_stmts.rst
    │   │   ├── datamodel.rst
    │   │   ├── executionmodel.rst
    │   │   ├── expressions.rst
    │   │   ├── grammar.rst
    │   │   ├── import.rst
    │   │   ├── index.rst
    │   │   ├── introduction.rst
    │   │   ├── lexical_analysis.rst
    │   │   ├── simple_stmts.rst
    │   │   └── toplevel_components.rst
    │   ├── tools/
    │   │   ├── check-warnings.py
    │   │   ├── .nitignore
    │   │   ├── extensions/
    │   │   │   ├── audit_events.py
    │   │   │   ├── availability.py
    │   │   │   ├── c_annotations.py
    │   │   │   ├── glossary_search.py
    │   │   │   ├── patchlevel.py
    │   │   │   ├── pyspecific.py
    │   │   │   └── lexers/
    │   │   │       ├── __init__.py
    │   │   │       ├── asdl_lexer.py
    │   │   │       └── peg_lexer.py
    │   │   ├── static/
    │   │   │   ├── changelog_search.js
    │   │   │   ├── glossary_search.js
    │   │   │   └── rtd_switcher.js
    │   │   └── templates/
    │   │       ├── customsourcelink.html
    │   │       ├── download.html
    │   │       ├── dummy.html
    │   │       ├── indexcontent.html
    │   │       ├── indexsidebar.html
    │   │       ├── layout.html
    │   │       ├── opensearch.xml
    │   │       └── search.html
    │   ├── tutorial/
    │   │   ├── appendix.rst
    │   │   ├── appetite.rst
    │   │   ├── classes.rst
    │   │   ├── controlflow.rst
    │   │   ├── datastructures.rst
    │   │   ├── errors.rst
    │   │   ├── floatingpoint.rst
    │   │   ├── index.rst
    │   │   ├── inputoutput.rst
    │   │   ├── interactive.rst
    │   │   ├── interpreter.rst
    │   │   ├── introduction.rst
    │   │   ├── modules.rst
    │   │   ├── stdlib.rst
    │   │   ├── stdlib2.rst
    │   │   ├── venv.rst
    │   │   └── whatnow.rst
    │   ├── using/
    │   │   ├── android.rst
    │   │   ├── cmdline.rst
    │   │   ├── configure.rst
    │   │   ├── editors.rst
    │   │   ├── index.rst
    │   │   ├── ios.rst
    │   │   ├── mac.rst
    │   │   ├── unix.rst
    │   │   └── windows.rst
    │   └── whatsnew/
    │       ├── 2.0.rst
    │       ├── 2.1.rst
    │       ├── 2.2.rst
    │       ├── 2.3.rst
    │       ├── 2.4.rst
    │       ├── 2.5.rst
    │       ├── 2.6.rst
    │       ├── 2.7.rst
    │       ├── 3.0.rst
    │       ├── 3.1.rst
    │       ├── 3.10.rst
    │       ├── 3.11.rst
    │       ├── 3.12.rst
    │       ├── 3.13.rst
    │       ├── 3.14.rst
    │       ├── 3.2.rst
    │       ├── 3.3.rst
    │       ├── 3.4.rst
    │       ├── 3.5.rst
    │       ├── 3.6.rst
    │       ├── 3.7.rst
    │       ├── 3.8.rst
    │       ├── 3.9.rst
    │       ├── changelog.rst
    │       └── index.rst
    ├── Grammar/
    │   ├── Tokens
    │   └── python.gram
    ├── Include/
    │   ├── Python.h
    │   ├── README.rst
    │   ├── abstract.h
    │   ├── audit.h
    │   ├── bltinmodule.h
    │   ├── boolobject.h
    │   ├── bytearrayobject.h
    │   ├── bytesobject.h
    │   ├── ceval.h
    │   ├── codecs.h
    │   ├── compile.h
    │   ├── complexobject.h
    │   ├── critical_section.h
    │   ├── datetime.h
    │   ├── descrobject.h
    │   ├── dictobject.h
    │   ├── dynamic_annotations.h
    │   ├── enumobject.h
    │   ├── errcode.h
    │   ├── exports.h
    │   ├── fileobject.h
    │   ├── fileutils.h
    │   ├── floatobject.h
    │   ├── frameobject.h
    │   ├── genericaliasobject.h
    │   ├── import.h
    │   ├── intrcheck.h
    │   ├── iterobject.h
    │   ├── listobject.h
    │   ├── lock.h
    │   ├── longobject.h
    │   ├── marshal.h
    │   ├── memoryobject.h
    │   ├── methodobject.h
    │   ├── modsupport.h
    │   ├── moduleobject.h
    │   ├── monitoring.h
    │   ├── object.h
    │   ├── objimpl.h
    │   ├── opcode.h
    │   ├── opcode_ids.h
    │   ├── osdefs.h
    │   ├── osmodule.h
    │   ├── patchlevel.h
    │   ├── py_curses.h
    │   ├── pyatomic.h
    │   ├── pybuffer.h
    │   ├── pycapsule.h
    │   ├── pydtrace.d
    │   ├── pydtrace.h
    │   ├── pyerrors.h
    │   ├── pyexpat.h
    │   ├── pyframe.h
    │   ├── pyhash.h
    │   ├── pylifecycle.h
    │   ├── pymacconfig.h
    │   ├── pymacro.h
    │   ├── pymath.h
    │   ├── pymem.h
    │   ├── pyport.h
    │   ├── pystate.h
    │   ├── pystats.h
    │   ├── pystrcmp.h
    │   ├── pystrtod.h
    │   ├── pythonrun.h
    │   ├── pythread.h
    │   ├── pytypedefs.h
    │   ├── rangeobject.h
    │   ├── refcount.h
    │   ├── setobject.h
    │   ├── sliceobject.h
    │   ├── structmember.h
    │   ├── structseq.h
    │   ├── sysmodule.h
    │   ├── traceback.h
    │   ├── tupleobject.h
    │   ├── typeslots.h
    │   ├── unicodeobject.h
    │   ├── warnings.h
    │   ├── weakrefobject.h
    │   ├── cpython/
    │   │   ├── abstract.h
    │   │   ├── audit.h
    │   │   ├── bytearrayobject.h
    │   │   ├── bytesobject.h
    │   │   ├── cellobject.h
    │   │   ├── ceval.h
    │   │   ├── classobject.h
    │   │   ├── code.h
    │   │   ├── compile.h
    │   │   ├── complexobject.h
    │   │   ├── context.h
    │   │   ├── critical_section.h
    │   │   ├── descrobject.h
    │   │   ├── dictobject.h
    │   │   ├── fileobject.h
    │   │   ├── fileutils.h
    │   │   ├── floatobject.h
    │   │   ├── frameobject.h
    │   │   ├── funcobject.h
    │   │   ├── genobject.h
    │   │   ├── import.h
    │   │   ├── initconfig.h
    │   │   ├── listobject.h
    │   │   ├── lock.h
    │   │   ├── longintrepr.h
    │   │   ├── longobject.h
    │   │   ├── memoryobject.h
    │   │   ├── methodobject.h
    │   │   ├── modsupport.h
    │   │   ├── monitoring.h
    │   │   ├── object.h
    │   │   ├── objimpl.h
    │   │   ├── odictobject.h
    │   │   ├── picklebufobject.h
    │   │   ├── pthread_stubs.h
    │   │   ├── pyatomic.h
    │   │   ├── pyatomic_gcc.h
    │   │   ├── pyatomic_msc.h
    │   │   ├── pyatomic_std.h
    │   │   ├── pyctype.h
    │   │   ├── pydebug.h
    │   │   ├── pyerrors.h
    │   │   ├── pyfpe.h
    │   │   ├── pyframe.h
    │   │   ├── pyhash.h
    │   │   ├── pylifecycle.h
    │   │   ├── pymem.h
    │   │   ├── pystate.h
    │   │   ├── pystats.h
    │   │   ├── pythonrun.h
    │   │   ├── pythread.h
    │   │   ├── pytime.h
    │   │   ├── setobject.h
    │   │   ├── traceback.h
    │   │   ├── tracemalloc.h
    │   │   ├── tupleobject.h
    │   │   ├── unicodeobject.h
    │   │   ├── warnings.h
    │   │   └── weakrefobject.h
    │   └── internal/
    │       ├── pycore_abstract.h
    │       ├── pycore_asdl.h
    │       ├── pycore_ast.h
    │       ├── pycore_ast_state.h
    │       ├── pycore_atexit.h
    │       ├── pycore_audit.h
    │       ├── pycore_backoff.h
    │       ├── pycore_bitutils.h
    │       ├── pycore_blocks_output_buffer.h
    │       ├── pycore_brc.h
    │       ├── pycore_bytes_methods.h
    │       ├── pycore_bytesobject.h
    │       ├── pycore_call.h
    │       ├── pycore_capsule.h
    │       ├── pycore_cell.h
    │       ├── pycore_ceval.h
    │       ├── pycore_ceval_state.h
    │       ├── pycore_code.h
    │       ├── pycore_codecs.h
    │       ├── pycore_compile.h
    │       ├── pycore_complexobject.h
    │       ├── pycore_condvar.h
    │       ├── pycore_context.h
    │       ├── pycore_critical_section.h
    │       ├── pycore_crossinterp.h
    │       ├── pycore_crossinterp_data_registry.h
    │       ├── pycore_debug_offsets.h
    │       ├── pycore_descrobject.h
    │       ├── pycore_dict.h
    │       ├── pycore_dict_state.h
    │       ├── pycore_dtoa.h
    │       ├── pycore_emscripten_signal.h
    │       ├── pycore_emscripten_trampoline.h
    │       ├── pycore_exceptions.h
    │       ├── pycore_faulthandler.h
    │       ├── pycore_fileutils.h
    │       ├── pycore_fileutils_windows.h
    │       ├── pycore_floatobject.h
    │       ├── pycore_flowgraph.h
    │       ├── pycore_format.h
    │       ├── pycore_frame.h
    │       ├── pycore_freelist.h
    │       ├── pycore_freelist_state.h
    │       ├── pycore_function.h
    │       ├── pycore_gc.h
    │       ├── pycore_genobject.h
    │       ├── pycore_getopt.h
    │       ├── pycore_gil.h
    │       ├── pycore_global_objects.h
    │       ├── pycore_global_objects_fini_generated.h
    │       ├── pycore_global_strings.h
    │       ├── pycore_hamt.h
    │       ├── pycore_hashtable.h
    │       ├── pycore_import.h
    │       ├── pycore_importdl.h
    │       ├── pycore_index_pool.h
    │       ├── pycore_initconfig.h
    │       ├── pycore_instruction_sequence.h
    │       ├── pycore_instruments.h
    │       ├── pycore_interp.h
    │       ├── pycore_intrinsics.h
    │       ├── pycore_jit.h
    │       ├── pycore_list.h
    │       ├── pycore_llist.h
    │       ├── pycore_lock.h
    │       ├── pycore_long.h
    │       ├── pycore_magic_number.h
    │       ├── pycore_memoryobject.h
    │       ├── pycore_mimalloc.h
    │       ├── pycore_modsupport.h
    │       ├── pycore_moduleobject.h
    │       ├── pycore_namespace.h
    │       ├── pycore_object.h
    │       ├── pycore_object_alloc.h
    │       ├── pycore_object_deferred.h
    │       ├── pycore_object_stack.h
    │       ├── pycore_object_state.h
    │       ├── pycore_obmalloc.h
    │       ├── pycore_obmalloc_init.h
    │       ├── pycore_opcode_metadata.h
    │       ├── pycore_opcode_utils.h
    │       ├── pycore_optimizer.h
    │       ├── pycore_parking_lot.h
    │       ├── pycore_parser.h
    │       ├── pycore_pathconfig.h
    │       ├── pycore_pyarena.h
    │       ├── pycore_pyatomic_ft_wrappers.h
    │       ├── pycore_pybuffer.h
    │       ├── pycore_pyerrors.h
    │       ├── pycore_pyhash.h
    │       ├── pycore_pylifecycle.h
    │       ├── pycore_pymath.h
    │       ├── pycore_pymem.h
    │       ├── pycore_pymem_init.h
    │       ├── pycore_pystate.h
    │       ├── pycore_pystats.h
    │       ├── pycore_pythonrun.h
    │       ├── pycore_pythread.h
    │       ├── pycore_qsbr.h
    │       ├── pycore_range.h
    │       ├── pycore_runtime.h
    │       ├── pycore_runtime_init.h
    │       ├── pycore_runtime_init_generated.h
    │       ├── pycore_semaphore.h
    │       ├── pycore_setobject.h
    │       ├── pycore_signal.h
    │       ├── pycore_sliceobject.h
    │       ├── pycore_stackref.h
    │       ├── pycore_strhex.h
    │       ├── pycore_structseq.h
    │       ├── pycore_symtable.h
    │       ├── pycore_sysmodule.h
    │       ├── pycore_time.h
    │       ├── pycore_token.h
    │       ├── pycore_traceback.h
    │       ├── pycore_tracemalloc.h
    │       ├── pycore_tstate.h
    │       ├── pycore_tuple.h
    │       ├── pycore_typeobject.h
    │       ├── pycore_typevarobject.h
    │       ├── pycore_ucnhash.h
    │       ├── pycore_unicodeobject.h
    │       ├── pycore_unicodeobject_generated.h
    │       ├── pycore_unionobject.h
    │       ├── pycore_uniqueid.h
    │       ├── pycore_uop_ids.h
    │       ├── pycore_uop_metadata.h
    │       ├── pycore_warnings.h
    │       ├── pycore_weakref.h
    │       └── mimalloc/
    │           ├── mimalloc.h
    │           └── mimalloc/
    │               ├── atomic.h
    │               ├── internal.h
    │               ├── prim.h
    │               ├── track.h
    │               └── types.h
    ├── InternalDocs/
    │   ├── README.md
    │   ├── changing_grammar.md
    │   ├── code_objects.md
    │   ├── compiler.md
    │   ├── exception_handling.md
    │   ├── frames.md
    │   ├── garbage_collector.md
    │   ├── generators.md
    │   ├── interpreter.md
    │   ├── jit.md
    │   ├── parser.md
    │   ├── string_interning.md
    │   └── images/
    ├── Lib/
    │   ├── __future__.py
    │   ├── __hello__.py
    │   ├── _aix_support.py
    │   ├── _android_support.py
    │   ├── _apple_support.py
    │   ├── _collections_abc.py
    │   ├── _colorize.py
    │   ├── _compat_pickle.py
    │   ├── _compression.py
    │   ├── _ios_support.py
    │   ├── _markupbase.py
    │   ├── _opcode_metadata.py
    │   ├── _osx_support.py
    │   ├── _py_abc.py
    │   ├── _pydatetime.py
    │   ├── _pydecimal.py
    │   ├── _pyio.py
    │   ├── _pylong.py
    │   ├── _sitebuiltins.py
    │   ├── _strptime.py
    │   ├── _threading_local.py
    │   ├── _weakrefset.py
    │   ├── abc.py
    │   ├── annotationlib.py
    │   ├── antigravity.py
    │   ├── argparse.py
    │   ├── ast.py
    │   ├── base64.py
    │   ├── bdb.py
    │   ├── bisect.py
    │   ├── bz2.py
    │   ├── cProfile.py
    │   ├── calendar.py
    │   ├── cmd.py
    │   ├── code.py
    │   ├── codecs.py
    │   ├── codeop.py
    │   ├── colorsys.py
    │   ├── compileall.py
    │   ├── configparser.py
    │   ├── contextlib.py
    │   ├── contextvars.py
    │   ├── copy.py
    │   ├── copyreg.py
    │   ├── csv.py
    │   ├── dataclasses.py
    │   ├── datetime.py
    │   ├── decimal.py
    │   ├── difflib.py
    │   ├── dis.py
    │   ├── doctest.py
    │   ├── enum.py
    │   ├── filecmp.py
    │   ├── fileinput.py
    │   ├── fnmatch.py
    │   ├── fractions.py
    │   ├── ftplib.py
    │   ├── functools.py
    │   ├── genericpath.py
    │   ├── getopt.py
    │   ├── getpass.py
    │   ├── gettext.py
    │   ├── glob.py
    │   ├── graphlib.py
    │   ├── gzip.py
    │   ├── hashlib.py
    │   ├── heapq.py
    │   ├── hmac.py
    │   ├── imaplib.py
    │   ├── inspect.py
    │   ├── io.py
    │   ├── ipaddress.py
    │   ├── keyword.py
    │   ├── linecache.py
    │   ├── locale.py
    │   ├── lzma.py
    │   ├── mailbox.py
    │   ├── mimetypes.py
    │   ├── modulefinder.py
    │   ├── netrc.py
    │   ├── ntpath.py
    │   ├── nturl2path.py
    │   ├── numbers.py
    │   ├── opcode.py
    │   ├── operator.py
    │   ├── optparse.py
    │   ├── os.py
    │   ├── pdb.py
    │   ├── pickle.py
    │   ├── pickletools.py
    │   ├── pkgutil.py
    │   ├── platform.py
    │   ├── plistlib.py
    │   ├── poplib.py
    │   ├── posixpath.py
    │   ├── pprint.py
    │   ├── profile.py
    │   ├── pstats.py
    │   ├── pty.py
    │   ├── py_compile.py
    │   ├── pyclbr.py
    │   ├── pydoc.py
    │   ├── queue.py
    │   ├── quopri.py
    │   ├── random.py
    │   ├── reprlib.py
    │   ├── rlcompleter.py
    │   ├── runpy.py
    │   ├── sched.py
    │   ├── secrets.py
    │   ├── selectors.py
    │   ├── shelve.py
    │   ├── shlex.py
    │   ├── shutil.py
    │   ├── signal.py
    │   ├── site.py
    │   ├── smtplib.py
    │   ├── socket.py
    │   ├── socketserver.py
    │   ├── sre_compile.py
    │   ├── sre_constants.py
    │   ├── sre_parse.py
    │   ├── ssl.py
    │   ├── stat.py
    │   ├── statistics.py
    │   ├── string.py
    │   ├── stringprep.py
    │   ├── struct.py
    │   ├── subprocess.py
    │   ├── symtable.py
    │   ├── tabnanny.py
    │   ├── tarfile.py
    │   ├── tempfile.py
    │   ├── textwrap.py
    │   ├── this.py
    │   ├── threading.py
    │   ├── timeit.py
    │   ├── token.py
    │   ├── tokenize.py
    │   ├── trace.py
    │   ├── traceback.py
    │   ├── tracemalloc.py
    │   ├── tty.py
    │   ├── turtle.py
    │   ├── types.py
    │   ├── typing.py
    │   ├── uuid.py
    │   ├── warnings.py
    │   ├── wave.py
    │   ├── weakref.py
    │   ├── webbrowser.py
    │   ├── zipapp.py
    │   ├── zipimport.py
    │   ├── __phello__/
    │   │   ├── __init__.py
    │   │   ├── spam.py
    │   │   └── ham/
    │   │       ├── __init__.py
    │   │       └── eggs.py
    │   ├── _pyrepl/
    │   │   ├── __init__.py
    │   │   ├── __main__.py
    │   │   ├── _minimal_curses.py
    │   │   ├── _threading_handler.py
    │   │   ├── commands.py
    │   │   ├── completing_reader.py
    │   │   ├── console.py
    │   │   ├── curses.py
    │   │   ├── fancy_termios.py
    │   │   ├── historical_reader.py
    │   │   ├── input.py
    │   │   ├── keymap.py
    │   │   ├── main.py
    │   │   ├── mypy.ini
    │   │   ├── pager.py
    │   │   ├── reader.py
    │   │   ├── readline.py
    │   │   ├── simple_interact.py
    │   │   ├── trace.py
    │   │   ├── types.py
    │   │   ├── unix_console.py
    │   │   ├── unix_eventqueue.py
    │   │   ├── utils.py
    │   │   └── windows_console.py
    │   ├── asyncio/
    │   │   ├── __init__.py
    │   │   ├── __main__.py
    │   │   ├── base_events.py
    │   │   ├── base_futures.py
    │   │   ├── base_subprocess.py
    │   │   ├── base_tasks.py
    │   │   ├── constants.py
    │   │   ├── coroutines.py
    │   │   ├── events.py
    │   │   ├── exceptions.py
    │   │   ├── format_helpers.py
    │   │   ├── futures.py
    │   │   ├── locks.py
    │   │   ├── log.py
    │   │   ├── mixins.py
    │   │   ├── proactor_events.py
    │   │   ├── protocols.py
    │   │   ├── queues.py
    │   │   ├── runners.py
    │   │   ├── selector_events.py
    │   │   ├── sslproto.py
    │   │   ├── staggered.py
    │   │   ├── streams.py
    │   │   ├── subprocess.py
    │   │   ├── taskgroups.py
    │   │   ├── tasks.py
    │   │   ├── threads.py
    │   │   ├── timeouts.py
    │   │   ├── transports.py
    │   │   ├── trsock.py
    │   │   ├── unix_events.py
    │   │   ├── windows_events.py
    │   │   └── windows_utils.py
    │   ├── collections/
    │   │   └── __init__.py
    │   ├── concurrent/
    │   │   ├── __init__.py
    │   │   └── futures/
    │   │       ├── __init__.py
    │   │       ├── _base.py
    │   │       ├── interpreter.py
    │   │       ├── process.py
    │   │       └── thread.py
    │   ├── ctypes/
    │   │   ├── __init__.py
    │   │   ├── _aix.py
    │   │   ├── _endian.py
    │   │   ├── _layout.py
    │   │   ├── util.py
    │   │   ├── wintypes.py
    │   │   └── macholib/
    │   │       ├── README.ctypes
    │   │       ├── __init__.py
    │   │       ├── dyld.py
    │   │       ├── dylib.py
    │   │       ├── fetch_macholib
    │   │       ├── fetch_macholib.bat
    │   │       └── framework.py
    │   ├── curses/
    │   │   ├── __init__.py
    │   │   ├── ascii.py
    │   │   ├── has_key.py
    │   │   ├── panel.py
    │   │   └── textpad.py
    │   ├── dbm/
    │   │   ├── __init__.py
    │   │   ├── dumb.py
    │   │   ├── gnu.py
    │   │   ├── ndbm.py
    │   │   └── sqlite3.py
    │   ├── email/
    │   │   ├── __init__.py
    │   │   ├── _encoded_words.py
    │   │   ├── _header_value_parser.py
    │   │   ├── _parseaddr.py
    │   │   ├── _policybase.py
    │   │   ├── architecture.rst
    │   │   ├── base64mime.py
    │   │   ├── charset.py
    │   │   ├── contentmanager.py
    │   │   ├── encoders.py
    │   │   ├── errors.py
    │   │   ├── feedparser.py
    │   │   ├── generator.py
    │   │   ├── header.py
    │   │   ├── headerregistry.py
    │   │   ├── iterators.py
    │   │   ├── message.py
    │   │   ├── parser.py
    │   │   ├── policy.py
    │   │   ├── quoprimime.py
    │   │   ├── utils.py
    │   │   └── mime/
    │   │       ├── __init__.py
    │   │       ├── application.py
    │   │       ├── audio.py
    │   │       ├── base.py
    │   │       ├── image.py
    │   │       ├── message.py
    │   │       ├── multipart.py
    │   │       ├── nonmultipart.py
    │   │       └── text.py
    │   ├── encodings/
    │   │   ├── __init__.py
    │   │   ├── _win_cp_codecs.py
    │   │   ├── aliases.py
    │   │   ├── ascii.py
    │   │   ├── base64_codec.py
    │   │   ├── big5.py
    │   │   ├── big5hkscs.py
    │   │   ├── bz2_codec.py
    │   │   ├── charmap.py
    │   │   ├── cp037.py
    │   │   ├── cp1006.py
    │   │   ├── cp1026.py
    │   │   ├── cp1125.py
    │   │   ├── cp1140.py
    │   │   ├── cp1250.py
    │   │   ├── cp1251.py
    │   │   ├── cp1252.py
    │   │   ├── cp1253.py
    │   │   ├── cp1254.py
    │   │   ├── cp1255.py
    │   │   ├── cp1256.py
    │   │   ├── cp1257.py
    │   │   ├── cp1258.py
    │   │   ├── cp273.py
    │   │   ├── cp424.py
    │   │   ├── cp437.py
    │   │   ├── cp500.py
    │   │   ├── cp720.py
    │   │   ├── cp737.py
    │   │   ├── cp775.py
    │   │   ├── cp850.py
    │   │   ├── cp852.py
    │   │   ├── cp855.py
    │   │   ├── cp856.py
    │   │   ├── cp857.py
    │   │   ├── cp858.py
    │   │   ├── cp860.py
    │   │   ├── cp861.py
    │   │   ├── cp862.py
    │   │   ├── cp863.py
    │   │   ├── cp864.py
    │   │   ├── cp865.py
    │   │   ├── cp866.py
    │   │   ├── cp869.py
    │   │   ├── cp874.py
    │   │   ├── cp875.py
    │   │   ├── cp932.py
    │   │   ├── cp949.py
    │   │   ├── cp950.py
    │   │   ├── euc_jis_2004.py
    │   │   ├── euc_jisx0213.py
    │   │   ├── euc_jp.py
    │   │   ├── euc_kr.py
    │   │   ├── gb18030.py
    │   │   ├── gb2312.py
    │   │   ├── gbk.py
    │   │   ├── hex_codec.py
    │   │   ├── hp_roman8.py
    │   │   ├── hz.py
    │   │   ├── idna.py
    │   │   ├── iso2022_jp.py
    │   │   ├── iso2022_jp_1.py
    │   │   ├── iso2022_jp_2.py
    │   │   ├── iso2022_jp_2004.py
    │   │   ├── iso2022_jp_3.py
    │   │   ├── iso2022_jp_ext.py
    │   │   ├── iso2022_kr.py
    │   │   ├── iso8859_1.py
    │   │   ├── iso8859_10.py
    │   │   ├── iso8859_11.py
    │   │   ├── iso8859_13.py
    │   │   ├── iso8859_14.py
    │   │   ├── iso8859_15.py
    │   │   ├── iso8859_16.py
    │   │   ├── iso8859_2.py
    │   │   ├── iso8859_3.py
    │   │   ├── iso8859_4.py
    │   │   ├── iso8859_5.py
    │   │   ├── iso8859_6.py
    │   │   ├── iso8859_7.py
    │   │   ├── iso8859_8.py
    │   │   ├── iso8859_9.py
    │   │   ├── johab.py
    │   │   ├── koi8_r.py
    │   │   ├── koi8_t.py
    │   │   ├── koi8_u.py
    │   │   ├── kz1048.py
    │   │   ├── latin_1.py
    │   │   ├── mac_arabic.py
    │   │   ├── mac_croatian.py
    │   │   ├── mac_cyrillic.py
    │   │   ├── mac_farsi.py
    │   │   ├── mac_greek.py
    │   │   ├── mac_iceland.py
    │   │   ├── mac_latin2.py
    │   │   ├── mac_roman.py
    │   │   ├── mac_romanian.py
    │   │   ├── mac_turkish.py
    │   │   ├── mbcs.py
    │   │   ├── oem.py
    │   │   ├── palmos.py
    │   │   ├── ptcp154.py
    │   │   ├── punycode.py
    │   │   ├── quopri_codec.py
    │   │   ├── raw_unicode_escape.py
    │   │   ├── rot_13.py
    │   │   ├── shift_jis.py
    │   │   ├── shift_jis_2004.py
    │   │   ├── shift_jisx0213.py
    │   │   ├── tis_620.py
    │   │   ├── undefined.py
    │   │   ├── unicode_escape.py
    │   │   ├── utf_16.py
    │   │   ├── utf_16_be.py
    │   │   ├── utf_16_le.py
    │   │   ├── utf_32.py
    │   │   ├── utf_32_be.py
    │   │   ├── utf_32_le.py
    │   │   ├── utf_7.py
    │   │   ├── utf_8.py
    │   │   ├── utf_8_sig.py
    │   │   ├── uu_codec.py
    │   │   └── zlib_codec.py
    │   ├── ensurepip/
    │   │   ├── __init__.py
    │   │   ├── __main__.py
    │   │   ├── _uninstall.py
    │   │   └── _bundled/
    │   ├── html/
    │   │   ├── __init__.py
    │   │   ├── entities.py
    │   │   └── parser.py
    │   ├── http/
    │   │   ├── __init__.py
    │   │   ├── client.py
    │   │   ├── cookiejar.py
    │   │   ├── cookies.py
    │   │   └── server.py
    │   ├── idlelib/
    │   │   ├── CREDITS.txt
    │   │   ├── ChangeLog
    │   │   ├── HISTORY.txt
    │   │   ├── NEWS2x.txt
    │   │   ├── News3.txt
    │   │   ├── README.txt
    │   │   ├── TODO.txt
    │   │   ├── __init__.py
    │   │   ├── __main__.py
    │   │   ├── autocomplete.py
    │   │   ├── autocomplete_w.py
    │   │   ├── autoexpand.py
    │   │   ├── browser.py
    │   │   ├── calltip.py
    │   │   ├── calltip_w.py
    │   │   ├── codecontext.py
    │   │   ├── colorizer.py
    │   │   ├── config-extensions.def
    │   │   ├── config-highlight.def
    │   │   ├── config-keys.def
    │   │   ├── config-main.def
    │   │   ├── config.py
    │   │   ├── config_key.py
    │   │   ├── configdialog.py
    │   │   ├── debugger.py
    │   │   ├── debugger_r.py
    │   │   ├── debugobj.py
    │   │   ├── debugobj_r.py
    │   │   ├── delegator.py
    │   │   ├── dynoption.py
    │   │   ├── editor.py
    │   │   ├── extend.txt
    │   │   ├── filelist.py
    │   │   ├── format.py
    │   │   ├── grep.py
    │   │   ├── help.html
    │   │   ├── help.py
    │   │   ├── help_about.py
    │   │   ├── history.py
    │   │   ├── hyperparser.py
    │   │   ├── idle.bat
    │   │   ├── idle.py
    │   │   ├── idle.pyw
    │   │   ├── iomenu.py
    │   │   ├── macosx.py
    │   │   ├── mainmenu.py
    │   │   ├── multicall.py
    │   │   ├── outwin.py
    │   │   ├── parenmatch.py
    │   │   ├── pathbrowser.py
    │   │   ├── percolator.py
    │   │   ├── pyparse.py
    │   │   ├── pyshell.py
    │   │   ├── query.py
    │   │   ├── redirector.py
    │   │   ├── replace.py
    │   │   ├── rpc.py
    │   │   ├── run.py
    │   │   ├── runscript.py
    │   │   ├── scrolledlist.py
    │   │   ├── search.py
    │   │   ├── searchbase.py
    │   │   ├── searchengine.py
    │   │   ├── sidebar.py
    │   │   ├── squeezer.py
    │   │   ├── stackviewer.py
    │   │   ├── statusbar.py
    │   │   ├── textview.py
    │   │   ├── tooltip.py
    │   │   ├── tree.py
    │   │   ├── undo.py
    │   │   ├── util.py
    │   │   ├── window.py
    │   │   ├── zoomheight.py
    │   │   ├── zzdummy.py
    │   │   ├── Icons/
    │   │   │   └── README.txt
    │   │   └── idle_test/
    │   │       ├── README.txt
    │   │       ├── __init__.py
    │   │       ├── example_noext
    │   │       ├── example_stub.pyi
    │   │       ├── htest.py
    │   │       ├── mock_idle.py
    │   │       ├── mock_tk.py
    │   │       ├── template.py
    │   │       ├── test_autocomplete.py
    │   │       ├── test_autocomplete_w.py
    │   │       ├── test_autoexpand.py
    │   │       ├── test_browser.py
    │   │       ├── test_calltip.py
    │   │       ├── test_calltip_w.py
    │   │       ├── test_codecontext.py
    │   │       ├── test_colorizer.py
    │   │       ├── test_config.py
    │   │       ├── test_config_key.py
    │   │       ├── test_configdialog.py
    │   │       ├── test_debugger.py
    │   │       ├── test_debugger_r.py
    │   │       ├── test_debugobj.py
    │   │       ├── test_debugobj_r.py
    │   │       ├── test_delegator.py
    │   │       ├── test_editmenu.py
    │   │       ├── test_editor.py
    │   │       ├── test_filelist.py
    │   │       ├── test_format.py
    │   │       ├── test_grep.py
    │   │       ├── test_help.py
    │   │       ├── test_help_about.py
    │   │       ├── test_history.py
    │   │       ├── test_hyperparser.py
    │   │       ├── test_iomenu.py
    │   │       ├── test_macosx.py
    │   │       ├── test_mainmenu.py
    │   │       ├── test_multicall.py
    │   │       ├── test_outwin.py
    │   │       ├── test_parenmatch.py
    │   │       ├── test_pathbrowser.py
    │   │       ├── test_percolator.py
    │   │       ├── test_pyparse.py
    │   │       ├── test_pyshell.py
    │   │       ├── test_query.py
    │   │       ├── test_redirector.py
    │   │       ├── test_replace.py
    │   │       ├── test_rpc.py
    │   │       ├── test_run.py
    │   │       ├── test_runscript.py
    │   │       ├── test_scrolledlist.py
    │   │       ├── test_search.py
    │   │       ├── test_searchbase.py
    │   │       ├── test_searchengine.py
    │   │       ├── test_sidebar.py
    │   │       ├── test_squeezer.py
    │   │       ├── test_stackviewer.py
    │   │       ├── test_statusbar.py
    │   │       ├── test_text.py
    │   │       ├── test_textview.py
    │   │       ├── test_tooltip.py
    │   │       ├── test_tree.py
    │   │       ├── test_undo.py
    │   │       ├── test_util.py
    │   │       ├── test_warning.py
    │   │       ├── test_window.py
    │   │       ├── test_zoomheight.py
    │   │       ├── test_zzdummy.py
    │   │       └── tkinter_testing_utils.py
    │   ├── importlib/
    │   │   ├── __init__.py
    │   │   ├── _abc.py
    │   │   ├── _bootstrap.py
    │   │   ├── _bootstrap_external.py
    │   │   ├── abc.py
    │   │   ├── machinery.py
    │   │   ├── readers.py
    │   │   ├── simple.py
    │   │   ├── util.py
    │   │   ├── metadata/
    │   │   │   ├── __init__.py
    │   │   │   ├── _adapters.py
    │   │   │   ├── _collections.py
    │   │   │   ├── _functools.py
    │   │   │   ├── _itertools.py
    │   │   │   ├── _meta.py
    │   │   │   ├── _text.py
    │   │   │   └── diagnose.py
    │   │   └── resources/
    │   │       ├── __init__.py
    │   │       ├── _adapters.py
    │   │       ├── _common.py
    │   │       ├── _functional.py
    │   │       ├── _itertools.py
    │   │       ├── abc.py
    │   │       ├── readers.py
    │   │       └── simple.py
    │   ├── json/
    │   │   ├── __init__.py
    │   │   ├── __main__.py
    │   │   ├── decoder.py
    │   │   ├── encoder.py
    │   │   ├── scanner.py
    │   │   └── tool.py
    │   ├── logging/
    │   │   ├── __init__.py
    │   │   ├── config.py
    │   │   └── handlers.py
    │   ├── multiprocessing/
    │   │   ├── __init__.py
    │   │   ├── connection.py
    │   │   ├── context.py
    │   │   ├── forkserver.py
    │   │   ├── heap.py
    │   │   ├── managers.py
    │   │   ├── pool.py
    │   │   ├── popen_fork.py
    │   │   ├── popen_forkserver.py
    │   │   ├── popen_spawn_posix.py
    │   │   ├── popen_spawn_win32.py
    │   │   ├── process.py
    │   │   ├── queues.py
    │   │   ├── reduction.py
    │   │   ├── resource_sharer.py
    │   │   ├── resource_tracker.py
    │   │   ├── shared_memory.py
    │   │   ├── sharedctypes.py
    │   │   ├── spawn.py
    │   │   ├── synchronize.py
    │   │   ├── util.py
    │   │   └── dummy/
    │   │       ├── __init__.py
    │   │       └── connection.py
    │   ├── pathlib/
    │   │   ├── __init__.py
    │   │   ├── _abc.py
    │   │   ├── _local.py
    │   │   ├── _os.py
    │   │   └── _types.py
    │   ├── pydoc_data/
    │   │   ├── __init__.py
    │   │   ├── _pydoc.css
    │   │   └── topics.py
    │   ├── re/
    │   │   ├── __init__.py
    │   │   ├── _casefix.py
    │   │   ├── _compiler.py
    │   │   ├── _constants.py
    │   │   └── _parser.py
    │   ├── site-packages/
    │   │   └── README.txt
    │   ├── sqlite3/
    │   │   ├── __init__.py
    │   │   ├── __main__.py
    │   │   ├── dbapi2.py
    │   │   └── dump.py
    │   ├── sysconfig/
    │   │   ├── __init__.py
    │   │   └── __main__.py
    │   ├── test/
    │   │   ├── __init__.py
    │   │   ├── __main__.py
    │   │   ├── _test_atexit.py
    │   │   ├── _test_eintr.py
    │   │   ├── _test_embed_set_config.py
    │   │   ├── _test_embed_structseq.py
    │   │   ├── _test_monitoring_shutdown.py
    │   │   ├── _test_multiprocessing.py
    │   │   ├── _test_venv_multiprocessing.py
    │   │   ├── archiver_tests.py
    │   │   ├── audiotests.py
    │   │   ├── audit-tests.py
    │   │   ├── autotest.py
    │   │   ├── bisect_cmd.py
    │   │   ├── clinic.test.c
    │   │   ├── cov.py
    │   │   ├── curses_tests.py
    │   │   ├── datetimetester.py
    │   │   ├── dis_module.py
    │   │   ├── empty.vbs
    │   │   ├── exception_hierarchy.txt
    │   │   ├── fork_wait.py
    │   │   ├── levenshtein_examples.json
    │   │   ├── list_tests.py
    │   │   ├── lock_tests.py
    │   │   ├── mapping_tests.py
    │   │   ├── memory_watchdog.py
    │   │   ├── mime.types
    │   │   ├── mock_socket.py
    │   │   ├── mp_fork_bomb.py
    │   │   ├── mp_preload.py
    │   │   ├── multibytecodec_support.py
    │   │   ├── pickletester.py
    │   │   ├── profilee.py
    │   │   ├── pstats.pck
    │   │   ├── pyclbr_input.py
    │   │   ├── pythoninfo.py
    │   │   ├── randv2_32.pck
    │   │   ├── randv2_64.pck
    │   │   ├── randv3.pck
    │   │   ├── re_tests.py
    │   │   ├── regrtest.py
    │   │   ├── relimport.py
    │   │   ├── seq_tests.py
    │   │   ├── signalinterproctester.py
    │   │   ├── ssl_servers.py
    │   │   ├── ssltests.py
    │   │   ├── string_tests.py
    │   │   ├── test___all__.py
    │   │   ├── test__colorize.py
    │   │   ├── test__interpchannels.py
    │   │   ├── test__interpreters.py
    │   │   ├── test__locale.py
    │   │   ├── test__opcode.py
    │   │   ├── test__osx_support.py
    │   │   ├── test_abc.py
    │   │   ├── test_abstract_numbers.py
    │   │   ├── test_android.py
    │   │   ├── test_annotationlib.py
    │   │   ├── test_apple.py
    │   │   ├── test_argparse.py
    │   │   ├── test_array.py
    │   │   ├── test_asdl_parser.py
    │   │   ├── test_asyncgen.py
    │   │   ├── test_atexit.py
    │   │   ├── test_audit.py
    │   │   ├── test_augassign.py
    │   │   ├── test_base64.py
    │   │   ├── test_baseexception.py
    │   │   ├── test_bdb.py
    │   │   ├── test_bigaddrspace.py
    │   │   ├── test_bigmem.py
    │   │   ├── test_binascii.py
    │   │   ├── test_binop.py
    │   │   ├── test_bisect.py
    │   │   ├── test_bool.py
    │   │   ├── test_buffer.py
    │   │   ├── test_bufio.py
    │   │   ├── test_builtin.py
    │   │   ├── test_bytes.py
    │   │   ├── test_bz2.py
    │   │   ├── test_c_locale_coercion.py
    │   │   ├── test_calendar.py
    │   │   ├── test_call.py
    │   │   ├── test_charmapcodec.py
    │   │   ├── test_class.py
    │   │   ├── test_clinic.py
    │   │   ├── test_cmath.py
    │   │   ├── test_cmd.py
    │   │   ├── test_cmd_line.py
    │   │   ├── test_cmd_line_script.py
    │   │   ├── test_code.py
    │   │   ├── test_code_module.py
    │   │   ├── test_codeccallbacks.py
    │   │   ├── test_codecencodings_cn.py
    │   │   ├── test_codecencodings_hk.py
    │   │   ├── test_codecencodings_iso2022.py
    │   │   ├── test_codecencodings_jp.py
    │   │   ├── test_codecencodings_kr.py
    │   │   ├── test_codecencodings_tw.py
    │   │   ├── test_codecmaps_cn.py
    │   │   ├── test_codecmaps_hk.py
    │   │   ├── test_codecmaps_jp.py
    │   │   ├── test_codecmaps_kr.py
    │   │   ├── test_codecmaps_tw.py
    │   │   ├── test_codecs.py
    │   │   ├── test_codeop.py
    │   │   ├── test_collections.py
    │   │   ├── test_colorsys.py
    │   │   ├── test_compare.py
    │   │   ├── test_compile.py
    │   │   ├── test_compileall.py
    │   │   ├── test_compiler_assemble.py
    │   │   ├── test_compiler_codegen.py
    │   │   ├── test_complex.py
    │   │   ├── test_configparser.py
    │   │   ├── test_contains.py
    │   │   ├── test_context.py
    │   │   ├── test_contextlib.py
    │   │   ├── test_contextlib_async.py
    │   │   ├── test_copy.py
    │   │   ├── test_copyreg.py
    │   │   ├── test_coroutines.py
    │   │   ├── test_cprofile.py
    │   │   ├── test_csv.py
    │   │   ├── test_curses.py
    │   │   ├── test_datetime.py
    │   │   ├── test_dbm.py
    │   │   ├── test_dbm_dumb.py
    │   │   ├── test_dbm_gnu.py
    │   │   ├── test_dbm_ndbm.py
    │   │   ├── test_dbm_sqlite3.py
    │   │   ├── test_decimal.py
    │   │   ├── test_decorators.py
    │   │   ├── test_defaultdict.py
    │   │   ├── test_deque.py
    │   │   ├── test_descr.py
    │   │   ├── test_descrtut.py
    │   │   ├── test_devpoll.py
    │   │   ├── test_dict.py
    │   │   ├── test_dictcomps.py
    │   │   ├── test_dictviews.py
    │   │   ├── test_difflib.py
    │   │   ├── test_difflib_expect.html
    │   │   ├── test_dis.py
    │   │   ├── test_docxmlrpc.py
    │   │   ├── test_dtrace.py
    │   │   ├── test_dynamic.py
    │   │   ├── test_dynamicclassattribute.py
    │   │   ├── test_eintr.py
    │   │   ├── test_embed.py
    │   │   ├── test_ensurepip.py
    │   │   ├── test_enum.py
    │   │   ├── test_enumerate.py
    │   │   ├── test_eof.py
    │   │   ├── test_epoll.py
    │   │   ├── test_errno.py
    │   │   ├── test_except_star.py
    │   │   ├── test_exception_group.py
    │   │   ├── test_exception_hierarchy.py
    │   │   ├── test_exception_variations.py
    │   │   ├── test_exceptions.py
    │   │   ├── test_extcall.py
    │   │   ├── test_external_inspection.py
    │   │   ├── test_faulthandler.py
    │   │   ├── test_fcntl.py
    │   │   ├── test_file.py
    │   │   ├── test_file_eintr.py
    │   │   ├── test_filecmp.py
    │   │   ├── test_fileinput.py
    │   │   ├── test_fileio.py
    │   │   ├── test_fileutils.py
    │   │   ├── test_finalization.py
    │   │   ├── test_float.py
    │   │   ├── test_flufl.py
    │   │   ├── test_fnmatch.py
    │   │   ├── test_fork1.py
    │   │   ├── test_format.py
    │   │   ├── test_fractions.py
    │   │   ├── test_frame.py
    │   │   ├── test_frozen.py
    │   │   ├── test_fstring.py
    │   │   ├── test_ftplib.py
    │   │   ├── test_funcattrs.py
    │   │   ├── test_functools.py
    │   │   ├── test_gc.py
    │   │   ├── test_generated_cases.py
    │   │   ├── test_generator_stop.py
    │   │   ├── test_generators.py
    │   │   ├── test_genericalias.py
    │   │   ├── test_genericclass.py
    │   │   ├── test_genericpath.py
    │   │   ├── test_genexps.py
    │   │   ├── test_getopt.py
    │   │   ├── test_getpass.py
    │   │   ├── test_getpath.py
    │   │   ├── test_gettext.py
    │   │   ├── test_glob.py
    │   │   ├── test_global.py
    │   │   ├── test_grammar.py
    │   │   ├── test_graphlib.py
    │   │   ├── test_grp.py
    │   │   ├── test_gzip.py
    │   │   ├── test_hash.py
    │   │   ├── test_hashlib.py
    │   │   ├── test_heapq.py
    │   │   ├── test_hmac.py
    │   │   ├── test_html.py
    │   │   ├── test_htmlparser.py
    │   │   ├── test_http_cookiejar.py
    │   │   ├── test_http_cookies.py
    │   │   ├── test_httplib.py
    │   │   ├── test_httpservers.py
    │   │   ├── test_idle.py
    │   │   ├── test_imaplib.py
    │   │   ├── test_index.py
    │   │   ├── test_int.py
    │   │   ├── test_int_literal.py
    │   │   ├── test_io.py
    │   │   ├── test_ioctl.py
    │   │   ├── test_ipaddress.py
    │   │   ├── test_isinstance.py
    │   │   ├── test_iter.py
    │   │   ├── test_iterlen.py
    │   │   ├── test_itertools.py
    │   │   ├── test_keyword.py
    │   │   ├── test_keywordonlyarg.py
    │   │   ├── test_kqueue.py
    │   │   ├── test_largefile.py
    │   │   ├── test_launcher.py
    │   │   ├── test_linecache.py
    │   │   ├── test_list.py
    │   │   ├── test_listcomps.py
    │   │   ├── test_lltrace.py
    │   │   ├── test_locale.py
    │   │   ├── test_logging.py
    │   │   ├── test_long.py
    │   │   ├── test_longexp.py
    │   │   ├── test_lzma.py
    │   │   ├── test_mailbox.py
    │   │   ├── test_marshal.py
    │   │   ├── test_math.py
    │   │   ├── test_math_property.py
    │   │   ├── test_memoryio.py
    │   │   ├── test_memoryview.py
    │   │   ├── test_metaclass.py
    │   │   ├── test_mimetypes.py
    │   │   ├── test_minidom.py
    │   │   ├── test_mmap.py
    │   │   ├── test_modulefinder.py
    │   │   ├── test_monitoring.py
    │   │   ├── test_msvcrt.py
    │   │   ├── test_multibytecodec.py
    │   │   ├── test_multiprocessing_main_handling.py
    │   │   ├── test_named_expressions.py
    │   │   ├── test_netrc.py
    │   │   ├── test_ntpath.py
    │   │   ├── test_numeric_tower.py
    │   │   ├── test_opcache.py
    │   │   ├── test_opcodes.py
    │   │   ├── test_openpty.py
    │   │   ├── test_operator.py
    │   │   ├── test_optimizer.py
    │   │   ├── test_optparse.py
    │   │   ├── test_ordered_dict.py
    │   │   ├── test_os.py
    │   │   ├── test_osx_env.py
    │   │   ├── test_patma.py
    │   │   ├── test_pdb.py
    │   │   ├── test_peepholer.py
    │   │   ├── test_pep646_syntax.py
    │   │   ├── test_perf_profiler.py
    │   │   ├── test_perfmaps.py
    │   │   ├── test_pickle.py
    │   │   ├── test_picklebuffer.py
    │   │   ├── test_pickletools.py
    │   │   ├── test_pkg.py
    │   │   ├── test_pkgutil.py
    │   │   ├── test_platform.py
    │   │   ├── test_plistlib.py
    │   │   ├── test_poll.py
    │   │   ├── test_popen.py
    │   │   ├── test_poplib.py
    │   │   ├── test_positional_only_arg.py
    │   │   ├── test_posix.py
    │   │   ├── test_posixpath.py
    │   │   ├── test_pow.py
    │   │   ├── test_pprint.py
    │   │   ├── test_print.py
    │   │   ├── test_profile.py
    │   │   ├── test_property.py
    │   │   ├── test_pstats.py
    │   │   ├── test_pty.py
    │   │   ├── test_pulldom.py
    │   │   ├── test_pwd.py
    │   │   ├── test_py_compile.py
    │   │   ├── test_pyclbr.py
    │   │   ├── test_pyexpat.py
    │   │   ├── test_queue.py
    │   │   ├── test_quopri.py
    │   │   ├── test_raise.py
    │   │   ├── test_random.py
    │   │   ├── test_range.py
    │   │   ├── test_re.py
    │   │   ├── test_readline.py
    │   │   ├── test_regrtest.py
    │   │   ├── test_repl.py
    │   │   ├── test_reprlib.py
    │   │   ├── test_resource.py
    │   │   ├── test_richcmp.py
    │   │   ├── test_rlcompleter.py
    │   │   ├── test_robotparser.py
    │   │   ├── test_runpy.py
    │   │   ├── test_sax.py
    │   │   ├── test_sched.py
    │   │   ├── test_scope.py
    │   │   ├── test_script_helper.py
    │   │   ├── test_secrets.py
    │   │   ├── test_select.py
    │   │   ├── test_selectors.py
    │   │   ├── test_set.py
    │   │   ├── test_setcomps.py
    │   │   ├── test_shelve.py
    │   │   ├── test_shlex.py
    │   │   ├── test_shutil.py
    │   │   ├── test_signal.py
    │   │   ├── test_site.py
    │   │   ├── test_slice.py
    │   │   ├── test_smtplib.py
    │   │   ├── test_smtpnet.py
    │   │   ├── test_socket.py
    │   │   ├── test_socketserver.py
    │   │   ├── test_sort.py
    │   │   ├── test_source_encoding.py
    │   │   ├── test_ssl.py
    │   │   ├── test_stable_abi_ctypes.py
    │   │   ├── test_startfile.py
    │   │   ├── test_stat.py
    │   │   ├── test_statistics.py
    │   │   ├── test_str.py
    │   │   ├── test_strftime.py
    │   │   ├── test_string.py
    │   │   ├── test_string_literals.py
    │   │   ├── test_stringprep.py
    │   │   ├── test_strptime.py
    │   │   ├── test_strtod.py
    │   │   ├── test_struct.py
    │   │   ├── test_structseq.py
    │   │   ├── test_subclassinit.py
    │   │   ├── test_subprocess.py
    │   │   ├── test_sundry.py
    │   │   ├── test_super.py
    │   │   ├── test_support.py
    │   │   ├── test_symtable.py
    │   │   ├── test_syntax.py
    │   │   ├── test_sys.py
    │   │   ├── test_sys_setprofile.py
    │   │   ├── test_sys_settrace.py
    │   │   ├── test_sysconfig.py
    │   │   ├── test_syslog.py
    │   │   ├── test_tabnanny.py
    │   │   ├── test_tarfile.py
    │   │   ├── test_tcl.py
    │   │   ├── test_tempfile.py
    │   │   ├── test_termios.py
    │   │   ├── test_textwrap.py
    │   │   ├── test_thread.py
    │   │   ├── test_thread_local_bytecode.py
    │   │   ├── test_threadedtempfile.py
    │   │   ├── test_threading.py
    │   │   ├── test_threading_local.py
    │   │   ├── test_threadsignals.py
    │   │   ├── test_time.py
    │   │   ├── test_timeit.py
    │   │   ├── test_timeout.py
    │   │   ├── test_tokenize.py
    │   │   ├── test_trace.py
    │   │   ├── test_traceback.py
    │   │   ├── test_tracemalloc.py
    │   │   ├── test_ttk_textonly.py
    │   │   ├── test_tty.py
    │   │   ├── test_tuple.py
    │   │   ├── test_turtle.py
    │   │   ├── test_type_aliases.py
    │   │   ├── test_type_annotations.py
    │   │   ├── test_type_cache.py
    │   │   ├── test_type_comments.py
    │   │   ├── test_type_params.py
    │   │   ├── test_typechecks.py
    │   │   ├── test_types.py
    │   │   ├── test_typing.py
    │   │   ├── test_ucn.py
    │   │   ├── test_unary.py
    │   │   ├── test_unicode_file.py
    │   │   ├── test_unicode_file_functions.py
    │   │   ├── test_unicode_identifiers.py
    │   │   ├── test_unicodedata.py
    │   │   ├── test_univnewlines.py
    │   │   ├── test_unpack.py
    │   │   ├── test_unpack_ex.py
    │   │   ├── test_unparse.py
    │   │   ├── test_urllib.py
    │   │   ├── test_urllib2.py
    │   │   ├── test_urllib2_localnet.py
    │   │   ├── test_urllib2net.py
    │   │   ├── test_urllib_response.py
    │   │   ├── test_urllibnet.py
    │   │   ├── test_urlparse.py
    │   │   ├── test_userdict.py
    │   │   ├── test_userlist.py
    │   │   ├── test_userstring.py
    │   │   ├── test_utf8_mode.py
    │   │   ├── test_utf8source.py
    │   │   ├── test_uuid.py
    │   │   ├── test_venv.py
    │   │   ├── test_wait3.py
    │   │   ├── test_wait4.py
    │   │   ├── test_wave.py
    │   │   ├── test_weakref.py
    │   │   ├── test_weakset.py
    │   │   ├── test_webbrowser.py
    │   │   ├── test_winapi.py
    │   │   ├── test_winconsoleio.py
    │   │   ├── test_winreg.py
    │   │   ├── test_winsound.py
    │   │   ├── test_with.py
    │   │   ├── test_wmi.py
    │   │   ├── test_wsgiref.py
    │   │   ├── test_xml_dom_minicompat.py
    │   │   ├── test_xml_dom_xmlbuilder.py
    │   │   ├── test_xml_etree.py
    │   │   ├── test_xml_etree_c.py
    │   │   ├── test_xmlrpc.py
    │   │   ├── test_xxlimited.py
    │   │   ├── test_xxtestfuzz.py
    │   │   ├── test_yield_from.py
    │   │   ├── test_zipapp.py
    │   │   ├── test_zipfile64.py
    │   │   ├── test_zipimport.py
    │   │   ├── test_zipimport_support.py
    │   │   ├── test_zlib.py
    │   │   ├── testcodec.py
    │   │   ├── tf_inherit_check.py
    │   │   ├── win_console_handler.py
    │   │   ├── xmltests.py
    │   │   ├── .ruff.toml
    │   │   ├── archivetestdata/
    │   │   │   ├── README.md
    │   │   │   ├── exe_with_z64
    │   │   │   ├── exe_with_zip
    │   │   │   ├── header.sh
    │   │   │   ├── recursion.tar
    │   │   │   ├── testdata_module_inside_zip.py
    │   │   │   ├── testtar.tar
    │   │   │   ├── testtar.tar.xz
    │   │   │   ├── zip_cp437_header.zip
    │   │   │   ├── zipdir.zip
    │   │   │   └── zipdir_backslash.zip
    │   │   ├── audiodata/
    │   │   ├── certdata/
    │   │   │   ├── allsans.pem
    │   │   │   ├── badcert.pem
    │   │   │   ├── badkey.pem
    │   │   │   ├── cert3.pem
    │   │   │   ├── ffdh3072.pem
    │   │   │   ├── idnsans.pem
    │   │   │   ├── keycert.passwd.pem
    │   │   │   ├── keycert.pem
    │   │   │   ├── keycert.pem.reference
    │   │   │   ├── keycert2.pem
    │   │   │   ├── keycert3.pem
    │   │   │   ├── keycert3.pem.reference
    │   │   │   ├── keycert4.pem
    │   │   │   ├── keycertecc.pem
    │   │   │   ├── leaf-missing-aki.ca.pem
    │   │   │   ├── leaf-missing-aki.keycert.pem
    │   │   │   ├── make_ssl_certs.py
    │   │   │   ├── nokia.pem
    │   │   │   ├── nosan.pem
    │   │   │   ├── nullbytecert.pem
    │   │   │   ├── nullcert.pem
    │   │   │   ├── pycacert.pem
    │   │   │   ├── pycakey.pem
    │   │   │   ├── revocation.crl
    │   │   │   ├── secp384r1.pem
    │   │   │   ├── selfsigned_pythontestdotnet.pem
    │   │   │   ├── ssl_cert.pem
    │   │   │   ├── ssl_key.passwd.pem
    │   │   │   ├── ssl_key.pem
    │   │   │   ├── talos-2019-0758.pem
    │   │   │   └── capath/
    │   │   │       ├── 4e1295a3.0
    │   │   │       ├── 5ed36f99.0
    │   │   │       ├── 6e88d7b8.0
    │   │   │       ├── 99d0fa06.0
    │   │   │       ├── b1930218.0
    │   │   │       └── ceff1710.0
    │   │   ├── cjkencodings/
    │   │   │   ├── big5-utf8.txt
    │   │   │   ├── big5.txt
    │   │   │   ├── big5hkscs-utf8.txt
    │   │   │   ├── big5hkscs.txt
    │   │   │   ├── cp949-utf8.txt
    │   │   │   ├── cp949.txt
    │   │   │   ├── euc_jisx0213-utf8.txt
    │   │   │   ├── euc_jisx0213.txt
    │   │   │   ├── euc_jp-utf8.txt
    │   │   │   ├── euc_jp.txt
    │   │   │   ├── euc_kr-utf8.txt
    │   │   │   ├── euc_kr.txt
    │   │   │   ├── gb18030-utf8.txt
    │   │   │   ├── gb18030.txt
    │   │   │   ├── gb2312-utf8.txt
    │   │   │   ├── gb2312.txt
    │   │   │   ├── gbk-utf8.txt
    │   │   │   ├── gbk.txt
    │   │   │   ├── hz-utf8.txt
    │   │   │   ├── hz.txt
    │   │   │   ├── iso2022_jp-utf8.txt
    │   │   │   ├── iso2022_jp.txt
    │   │   │   ├── iso2022_kr-utf8.txt
    │   │   │   ├── iso2022_kr.txt
    │   │   │   ├── johab-utf8.txt
    │   │   │   ├── johab.txt
    │   │   │   ├── shift_jis-utf8.txt
    │   │   │   ├── shift_jis.txt
    │   │   │   ├── shift_jisx0213-utf8.txt
    │   │   │   └── shift_jisx0213.txt
    │   │   ├── configdata/
    │   │   │   ├── cfgparser.1
    │   │   │   ├── cfgparser.2
    │   │   │   └── cfgparser.3
    │   │   ├── crashers/
    │   │   │   ├── README
    │   │   │   ├── bogus_code_obj.py
    │   │   │   ├── gc_inspection.py
    │   │   │   ├── infinite_loop_re.py
    │   │   │   ├── mutation_inside_cyclegc.py
    │   │   │   ├── recursive_call.py
    │   │   │   ├── trace_at_recursion_limit.py
    │   │   │   └── underlying_dict.py
    │   │   ├── data/
    │   │   │   └── README
    │   │   ├── decimaltestdata/
    │   │   │   ├── abs.decTest
    │   │   │   ├── add.decTest
    │   │   │   ├── and.decTest
    │   │   │   ├── base.decTest
    │   │   │   ├── clamp.decTest
    │   │   │   ├── class.decTest
    │   │   │   ├── compare.decTest
    │   │   │   ├── comparetotal.decTest
    │   │   │   ├── comparetotmag.decTest
    │   │   │   ├── copy.decTest
    │   │   │   ├── copyabs.decTest
    │   │   │   ├── copynegate.decTest
    │   │   │   ├── copysign.decTest
    │   │   │   ├── ddAbs.decTest
    │   │   │   ├── ddAdd.decTest
    │   │   │   ├── ddAnd.decTest
    │   │   │   ├── ddBase.decTest
    │   │   │   ├── ddCanonical.decTest
    │   │   │   ├── ddClass.decTest
    │   │   │   ├── ddCompare.decTest
    │   │   │   ├── ddCompareSig.decTest
    │   │   │   ├── ddCompareTotal.decTest
    │   │   │   ├── ddCompareTotalMag.decTest
    │   │   │   ├── ddCopy.decTest
    │   │   │   ├── ddCopyAbs.decTest
    │   │   │   ├── ddCopyNegate.decTest
    │   │   │   ├── ddCopySign.decTest
    │   │   │   ├── ddDivide.decTest
    │   │   │   ├── ddDivideInt.decTest
    │   │   │   ├── ddEncode.decTest
    │   │   │   ├── ddFMA.decTest
    │   │   │   ├── ddInvert.decTest
    │   │   │   ├── ddLogB.decTest
    │   │   │   ├── ddMax.decTest
    │   │   │   ├── ddMaxMag.decTest
    │   │   │   ├── ddMin.decTest
    │   │   │   ├── ddMinMag.decTest
    │   │   │   ├── ddMinus.decTest
    │   │   │   ├── ddMultiply.decTest
    │   │   │   ├── ddNextMinus.decTest
    │   │   │   ├── ddNextPlus.decTest
    │   │   │   ├── ddNextToward.decTest
    │   │   │   ├── ddOr.decTest
    │   │   │   ├── ddPlus.decTest
    │   │   │   ├── ddQuantize.decTest
    │   │   │   ├── ddReduce.decTest
    │   │   │   ├── ddRemainder.decTest
    │   │   │   ├── ddRemainderNear.decTest
    │   │   │   ├── ddRotate.decTest
    │   │   │   ├── ddSameQuantum.decTest
    │   │   │   ├── ddScaleB.decTest
    │   │   │   ├── ddShift.decTest
    │   │   │   ├── ddSubtract.decTest
    │   │   │   ├── ddToIntegral.decTest
    │   │   │   ├── ddXor.decTest
    │   │   │   ├── decDouble.decTest
    │   │   │   ├── decQuad.decTest
    │   │   │   ├── decSingle.decTest
    │   │   │   ├── divide.decTest
    │   │   │   ├── divideint.decTest
    │   │   │   ├── dqAbs.decTest
    │   │   │   ├── dqAdd.decTest
    │   │   │   ├── dqAnd.decTest
    │   │   │   ├── dqBase.decTest
    │   │   │   ├── dqCanonical.decTest
    │   │   │   ├── dqClass.decTest
    │   │   │   ├── dqCompare.decTest
    │   │   │   ├── dqCompareSig.decTest
    │   │   │   ├── dqCompareTotal.decTest
    │   │   │   ├── dqCompareTotalMag.decTest
    │   │   │   ├── dqCopy.decTest
    │   │   │   ├── dqCopyAbs.decTest
    │   │   │   ├── dqCopyNegate.decTest
    │   │   │   ├── dqCopySign.decTest
    │   │   │   ├── dqDivide.decTest
    │   │   │   ├── dqDivideInt.decTest
    │   │   │   ├── dqEncode.decTest
    │   │   │   ├── dqFMA.decTest
    │   │   │   ├── dqInvert.decTest
    │   │   │   ├── dqLogB.decTest
    │   │   │   ├── dqMax.decTest
    │   │   │   ├── dqMaxMag.decTest
    │   │   │   ├── dqMin.decTest
    │   │   │   ├── dqMinMag.decTest
    │   │   │   ├── dqMinus.decTest
    │   │   │   ├── dqMultiply.decTest
    │   │   │   ├── dqNextMinus.decTest
    │   │   │   ├── dqNextPlus.decTest
    │   │   │   ├── dqNextToward.decTest
    │   │   │   ├── dqOr.decTest
    │   │   │   ├── dqPlus.decTest
    │   │   │   ├── dqQuantize.decTest
    │   │   │   ├── dqReduce.decTest
    │   │   │   ├── dqRemainder.decTest
    │   │   │   ├── dqRemainderNear.decTest
    │   │   │   ├── dqRotate.decTest
    │   │   │   ├── dqSameQuantum.decTest
    │   │   │   ├── dqScaleB.decTest
    │   │   │   ├── dqShift.decTest
    │   │   │   ├── dqSubtract.decTest
    │   │   │   ├── dqToIntegral.decTest
    │   │   │   ├── dqXor.decTest
    │   │   │   ├── dsBase.decTest
    │   │   │   ├── dsEncode.decTest
    │   │   │   ├── exp.decTest
    │   │   │   ├── extra.decTest
    │   │   │   ├── fma.decTest
    │   │   │   ├── inexact.decTest
    │   │   │   ├── invert.decTest
    │   │   │   ├── ln.decTest
    │   │   │   ├── log10.decTest
    │   │   │   ├── logb.decTest
    │   │   │   ├── max.decTest
    │   │   │   ├── maxmag.decTest
    │   │   │   ├── min.decTest
    │   │   │   ├── minmag.decTest
    │   │   │   ├── minus.decTest
    │   │   │   ├── multiply.decTest
    │   │   │   ├── nextminus.decTest
    │   │   │   ├── nextplus.decTest
    │   │   │   ├── nexttoward.decTest
    │   │   │   ├── or.decTest
    │   │   │   ├── plus.decTest
    │   │   │   ├── power.decTest
    │   │   │   ├── powersqrt.decTest
    │   │   │   ├── quantize.decTest
    │   │   │   ├── randomBound32.decTest
    │   │   │   ├── randoms.decTest
    │   │   │   ├── reduce.decTest
    │   │   │   ├── remainder.decTest
    │   │   │   ├── remainderNear.decTest
    │   │   │   ├── rescale.decTest
    │   │   │   ├── rotate.decTest
    │   │   │   ├── rounding.decTest
    │   │   │   ├── samequantum.decTest
    │   │   │   ├── scaleb.decTest
    │   │   │   ├── shift.decTest
    │   │   │   ├── squareroot.decTest
    │   │   │   ├── subtract.decTest
    │   │   │   ├── testall.decTest
    │   │   │   ├── tointegral.decTest
    │   │   │   ├── tointegralx.decTest
    │   │   │   └── xor.decTest
    │   │   ├── dtracedata/
    │   │   │   ├── assert_usable.d
    │   │   │   ├── assert_usable.stp
    │   │   │   ├── call_stack.d
    │   │   │   ├── call_stack.d.expected
    │   │   │   ├── call_stack.py
    │   │   │   ├── call_stack.stp
    │   │   │   ├── call_stack.stp.expected
    │   │   │   ├── gc.d
    │   │   │   ├── gc.d.expected
    │   │   │   ├── gc.py
    │   │   │   ├── gc.stp
    │   │   │   ├── gc.stp.expected
    │   │   │   ├── instance.py
    │   │   │   ├── line.d
    │   │   │   ├── line.d.expected
    │   │   │   └── line.py
    │   │   ├── encoded_modules/
    │   │   │   ├── __init__.py
    │   │   │   ├── module_iso_8859_1.py
    │   │   │   └── module_koi8_r.py
    │   │   ├── leakers/
    │   │   │   ├── README.txt
    │   │   │   ├── __init__.py
    │   │   │   ├── test_ctypes.py
    │   │   │   └── test_selftype.py
    │   │   ├── libregrtest/
    │   │   │   ├── __init__.py
    │   │   │   ├── cmdline.py
    │   │   │   ├── filter.py
    │   │   │   ├── findtests.py
    │   │   │   ├── logger.py
    │   │   │   ├── main.py
    │   │   │   ├── mypy.ini
    │   │   │   ├── pgo.py
    │   │   │   ├── refleak.py
    │   │   │   ├── result.py
    │   │   │   ├── results.py
    │   │   │   ├── run_workers.py
    │   │   │   ├── runtests.py
    │   │   │   ├── save_env.py
    │   │   │   ├── setup.py
    │   │   │   ├── single.py
    │   │   │   ├── testresult.py
    │   │   │   ├── tsan.py
    │   │   │   ├── utils.py
    │   │   │   ├── win_utils.py
    │   │   │   └── worker.py
    │   │   ├── mathdata/
    │   │   │   ├── cmath_testcases.txt
    │   │   │   ├── floating_points.txt
    │   │   │   ├── formatfloat_testcases.txt
    │   │   │   ├── ieee754.txt
    │   │   │   └── math_testcases.txt
    │   │   ├── regrtestdata/
    │   │   │   └── import_from_tests/
    │   │   │       ├── test_regrtest_a.py
    │   │   │       ├── test_regrtest_c.py
    │   │   │       └── test_regrtest_b/
    │   │   │           ├── __init__.py
    │   │   │           └── util.py
    │   │   ├── subprocessdata/
    │   │   │   ├── fd_status.py
    │   │   │   ├── input_reader.py
    │   │   │   ├── qcat.py
    │   │   │   ├── qgrep.py
    │   │   │   └── sigchild_ignore.py
    │   │   ├── support/
    │   │   │   ├── __init__.py
    │   │   │   ├── ast_helper.py
    │   │   │   ├── asynchat.py
    │   │   │   ├── asyncore.py
    │   │   │   ├── bytecode_helper.py
    │   │   │   ├── hashlib_helper.py
    │   │   │   ├── hypothesis_helper.py
    │   │   │   ├── i18n_helper.py
    │   │   │   ├── import_helper.py
    │   │   │   ├── logging_helper.py
    │   │   │   ├── os_helper.py
    │   │   │   ├── pty_helper.py
    │   │   │   ├── refleak_helper.py
    │   │   │   ├── script_helper.py
    │   │   │   ├── smtpd.py
    │   │   │   ├── socket_helper.py
    │   │   │   ├── strace_helper.py
    │   │   │   ├── testcase.py
    │   │   │   ├── threading_helper.py
    │   │   │   ├── venv.py
    │   │   │   ├── warnings_helper.py
    │   │   │   ├── _hypothesis_stubs/
    │   │   │   │   ├── __init__.py
    │   │   │   │   ├── _helpers.py
    │   │   │   │   └── strategies.py
    │   │   │   └── interpreters/
    │   │   │       ├── __init__.py
    │   │   │       ├── _crossinterp.py
    │   │   │       ├── channels.py
    │   │   │       └── queues.py
    │   │   ├── test_ast/
    │   │   │   ├── __init__.py
    │   │   │   ├── snippets.py
    │   │   │   ├── test_ast.py
    │   │   │   ├── utils.py
    │   │   │   └── data/
    │   │   │       └── ast_repr.txt
    │   │   ├── test_asyncio/
    │   │   │   ├── __init__.py
    │   │   │   ├── __main__.py
    │   │   │   ├── echo.py
    │   │   │   ├── echo2.py
    │   │   │   ├── echo3.py
    │   │   │   ├── functional.py
    │   │   │   ├── test_base_events.py
    │   │   │   ├── test_buffered_proto.py
    │   │   │   ├── test_context.py
    │   │   │   ├── test_eager_task_factory.py
    │   │   │   ├── test_events.py
    │   │   │   ├── test_free_threading.py
    │   │   │   ├── test_futures.py
    │   │   │   ├── test_futures2.py
    │   │   │   ├── test_locks.py
    │   │   │   ├── test_pep492.py
    │   │   │   ├── test_proactor_events.py
    │   │   │   ├── test_protocols.py
    │   │   │   ├── test_queues.py
    │   │   │   ├── test_runners.py
    │   │   │   ├── test_selector_events.py
    │   │   │   ├── test_sendfile.py
    │   │   │   ├── test_server.py
    │   │   │   ├── test_sock_lowlevel.py
    │   │   │   ├── test_ssl.py
    │   │   │   ├── test_sslproto.py
    │   │   │   ├── test_staggered.py
    │   │   │   ├── test_streams.py
    │   │   │   ├── test_subprocess.py
    │   │   │   ├── test_taskgroups.py
    │   │   │   ├── test_tasks.py
    │   │   │   ├── test_threads.py
    │   │   │   ├── test_timeouts.py
    │   │   │   ├── test_transports.py
    │   │   │   ├── test_unix_events.py
    │   │   │   ├── test_waitfor.py
    │   │   │   ├── test_windows_events.py
    │   │   │   ├── test_windows_utils.py
    │   │   │   └── utils.py
    │   │   ├── test_capi/
    │   │   │   ├── __init__.py
    │   │   │   ├── __main__.py
    │   │   │   ├── check_config.py
    │   │   │   ├── test_abstract.py
    │   │   │   ├── test_bytearray.py
    │   │   │   ├── test_bytes.py
    │   │   │   ├── test_codecs.py
    │   │   │   ├── test_complex.py
    │   │   │   ├── test_config.py
    │   │   │   ├── test_dict.py
    │   │   │   ├── test_eval.py
    │   │   │   ├── test_eval_code_ex.py
    │   │   │   ├── test_exceptions.py
    │   │   │   ├── test_file.py
    │   │   │   ├── test_float.py
    │   │   │   ├── test_getargs.py
    │   │   │   ├── test_hash.py
    │   │   │   ├── test_immortal.py
    │   │   │   ├── test_list.py
    │   │   │   ├── test_long.py
    │   │   │   ├── test_mem.py
    │   │   │   ├── test_misc.py
    │   │   │   ├── test_number.py
    │   │   │   ├── test_object.py
    │   │   │   ├── test_opt.py
    │   │   │   ├── test_pyatomic.py
    │   │   │   ├── test_run.py
    │   │   │   ├── test_set.py
    │   │   │   ├── test_structmembers.py
    │   │   │   ├── test_sys.py
    │   │   │   ├── test_time.py
    │   │   │   ├── test_tuple.py
    │   │   │   ├── test_type.py
    │   │   │   ├── test_unicode.py
    │   │   │   └── test_watchers.py
    │   │   ├── test_cext/
    │   │   │   ├── __init__.py
    │   │   │   ├── extension.c
    │   │   │   └── setup.py
    │   │   ├── test_concurrent_futures/
    │   │   │   ├── __init__.py
    │   │   │   ├── executor.py
    │   │   │   ├── test_as_completed.py
    │   │   │   ├── test_deadlock.py
    │   │   │   ├── test_future.py
    │   │   │   ├── test_init.py
    │   │   │   ├── test_interpreter_pool.py
    │   │   │   ├── test_process_pool.py
    │   │   │   ├── test_shutdown.py
    │   │   │   ├── test_thread_pool.py
    │   │   │   ├── test_wait.py
    │   │   │   └── util.py
    │   │   ├── test_cppext/
    │   │   │   ├── __init__.py
    │   │   │   ├── extension.cpp
    │   │   │   └── setup.py
    │   │   ├── test_ctypes/
    │   │   │   ├── __init__.py
    │   │   │   ├── __main__.py
    │   │   │   ├── _support.py
    │   │   │   ├── test_aligned_structures.py
    │   │   │   ├── test_anon.py
    │   │   │   ├── test_array_in_pointer.py
    │   │   │   ├── test_arrays.py
    │   │   │   ├── test_as_parameter.py
    │   │   │   ├── test_bitfields.py
    │   │   │   ├── test_buffers.py
    │   │   │   ├── test_bytes.py
    │   │   │   ├── test_byteswap.py
    │   │   │   ├── test_c_simple_type_meta.py
    │   │   │   ├── test_callbacks.py
    │   │   │   ├── test_cast.py
    │   │   │   ├── test_cfuncs.py
    │   │   │   ├── test_checkretval.py
    │   │   │   ├── test_delattr.py
    │   │   │   ├── test_dlerror.py
    │   │   │   ├── test_errno.py
    │   │   │   ├── test_find.py
    │   │   │   ├── test_frombuffer.py
    │   │   │   ├── test_funcptr.py
    │   │   │   ├── test_functions.py
    │   │   │   ├── test_generated_structs.py
    │   │   │   ├── test_incomplete.py
    │   │   │   ├── test_init.py
    │   │   │   ├── test_internals.py
    │   │   │   ├── test_keeprefs.py
    │   │   │   ├── test_libc.py
    │   │   │   ├── test_loading.py
    │   │   │   ├── test_macholib.py
    │   │   │   ├── test_memfunctions.py
    │   │   │   ├── test_numbers.py
    │   │   │   ├── test_objects.py
    │   │   │   ├── test_parameters.py
    │   │   │   ├── test_pep3118.py
    │   │   │   ├── test_pickling.py
    │   │   │   ├── test_pointers.py
    │   │   │   ├── test_prototypes.py
    │   │   │   ├── test_python_api.py
    │   │   │   ├── test_random_things.py
    │   │   │   ├── test_refcounts.py
    │   │   │   ├── test_repr.py
    │   │   │   ├── test_returnfuncptrs.py
    │   │   │   ├── test_simplesubclasses.py
    │   │   │   ├── test_sizes.py
    │   │   │   ├── test_slicing.py
    │   │   │   ├── test_stringptr.py
    │   │   │   ├── test_strings.py
    │   │   │   ├── test_struct_fields.py
    │   │   │   ├── test_structunion.py
    │   │   │   ├── test_structures.py
    │   │   │   ├── test_unaligned_structures.py
    │   │   │   ├── test_unicode.py
    │   │   │   ├── test_values.py
    │   │   │   ├── test_varsize_struct.py
    │   │   │   ├── test_win32.py
    │   │   │   ├── test_win32_com_foreign_func.py
    │   │   │   └── test_wintypes.py
    │   │   ├── test_dataclasses/
    │   │   │   ├── __init__.py
    │   │   │   ├── dataclass_module_1.py
    │   │   │   ├── dataclass_module_1_str.py
    │   │   │   ├── dataclass_module_2.py
    │   │   │   ├── dataclass_module_2_str.py
    │   │   │   └── dataclass_textanno.py
    │   │   ├── test_doctest/
    │   │   │   ├── __init__.py
    │   │   │   ├── decorator_mod.py
    │   │   │   ├── doctest_aliases.py
    │   │   │   ├── doctest_lineno.py
    │   │   │   ├── sample_doctest.py
    │   │   │   ├── sample_doctest_no_docstrings.py
    │   │   │   ├── sample_doctest_no_doctests.py
    │   │   │   ├── sample_doctest_skip.py
    │   │   │   ├── test_doctest.py
    │   │   │   ├── test_doctest.txt
    │   │   │   ├── test_doctest2.py
    │   │   │   ├── test_doctest2.txt
    │   │   │   ├── test_doctest3.txt
    │   │   │   ├── test_doctest4.txt
    │   │   │   └── test_doctest_skip.txt
    │   │   ├── test_email/
    │   │   │   ├── __init__.py
    │   │   │   ├── __main__.py
    │   │   │   ├── test__encoded_words.py
    │   │   │   ├── test__header_value_parser.py
    │   │   │   ├── test_asian_codecs.py
    │   │   │   ├── test_contentmanager.py
    │   │   │   ├── test_defect_handling.py
    │   │   │   ├── test_email.py
    │   │   │   ├── test_generator.py
    │   │   │   ├── test_headerregistry.py
    │   │   │   ├── test_inversion.py
    │   │   │   ├── test_message.py
    │   │   │   ├── test_parser.py
    │   │   │   ├── test_pickleable.py
    │   │   │   ├── test_policy.py
    │   │   │   ├── test_utils.py
    │   │   │   ├── torture_test.py
    │   │   │   └── data/
    │   │   │       ├── msg_01.txt
    │   │   │       ├── msg_02.txt
    │   │   │       ├── msg_03.txt
    │   │   │       ├── msg_04.txt
    │   │   │       ├── msg_05.txt
    │   │   │       ├── msg_06.txt
    │   │   │       ├── msg_07.txt
    │   │   │       ├── msg_08.txt
    │   │   │       ├── msg_09.txt
    │   │   │       ├── msg_10.txt
    │   │   │       ├── msg_11.txt
    │   │   │       ├── msg_12.txt
    │   │   │       ├── msg_12a.txt
    │   │   │       ├── msg_13.txt
    │   │   │       ├── msg_14.txt
    │   │   │       ├── msg_15.txt
    │   │   │       ├── msg_16.txt
    │   │   │       ├── msg_17.txt
    │   │   │       ├── msg_18.txt
    │   │   │       ├── msg_19.txt
    │   │   │       ├── msg_20.txt
    │   │   │       ├── msg_21.txt
    │   │   │       ├── msg_22.txt
    │   │   │       ├── msg_23.txt
    │   │   │       ├── msg_24.txt
    │   │   │       ├── msg_25.txt
    │   │   │       ├── msg_26.txt
    │   │   │       ├── msg_27.txt
    │   │   │       ├── msg_28.txt
    │   │   │       ├── msg_29.txt
    │   │   │       ├── msg_30.txt
    │   │   │       ├── msg_31.txt
    │   │   │       ├── msg_32.txt
    │   │   │       ├── msg_33.txt
    │   │   │       ├── msg_34.txt
    │   │   │       ├── msg_35.txt
    │   │   │       ├── msg_36.txt
    │   │   │       ├── msg_37.txt
    │   │   │       ├── msg_38.txt
    │   │   │       ├── msg_39.txt
    │   │   │       ├── msg_40.txt
    │   │   │       ├── msg_41.txt
    │   │   │       ├── msg_42.txt
    │   │   │       ├── msg_43.txt
    │   │   │       ├── msg_44.txt
    │   │   │       ├── msg_45.txt
    │   │   │       ├── msg_46.txt
    │   │   │       ├── msg_47.txt
    │   │   │       ├── python.bmp
    │   │   │       ├── python.exr
    │   │   │       ├── python.pbm
    │   │   │       ├── python.pgm
    │   │   │       ├── python.ppm
    │   │   │       ├── python.ras
    │   │   │       ├── python.sgi
    │   │   │       ├── python.tiff
    │   │   │       ├── python.webp
    │   │   │       ├── python.xbm
    │   │   │       ├── sndhdr.aifc
    │   │   │       ├── sndhdr.aiff
    │   │   │       └── sndhdr.au
    │   │   ├── test_free_threading/
    │   │   │   ├── __init__.py
    │   │   │   ├── test_code.py
    │   │   │   ├── test_dict.py
    │   │   │   ├── test_gc.py
    │   │   │   ├── test_list.py
    │   │   │   ├── test_methodcaller.py
    │   │   │   ├── test_monitoring.py
    │   │   │   ├── test_races.py
    │   │   │   ├── test_slots.py
    │   │   │   ├── test_str.py
    │   │   │   ├── test_tokenize.py
    │   │   │   ├── test_type.py
    │   │   │   └── test_zip.py
    │   │   ├── test_future_stmt/
    │   │   │   ├── __init__.py
    │   │   │   ├── badsyntax_future.py
    │   │   │   ├── import_nested_scope_twice.py
    │   │   │   ├── nested_scope.py
    │   │   │   ├── test_future.py
    │   │   │   ├── test_future_flags.py
    │   │   │   ├── test_future_multiple_features.py
    │   │   │   ├── test_future_multiple_imports.py
    │   │   │   └── test_future_single_import.py
    │   │   ├── test_gdb/
    │   │   │   ├── __init__.py
    │   │   │   ├── gdb_sample.py
    │   │   │   ├── test_backtrace.py
    │   │   │   ├── test_cfunction.py
    │   │   │   ├── test_cfunction_full.py
    │   │   │   ├── test_misc.py
    │   │   │   ├── test_pretty_print.py
    │   │   │   └── util.py
    │   │   ├── test_import/
    │   │   │   ├── __init__.py
    │   │   │   ├── __main__.py
    │   │   │   └── data/
    │   │   │       ├── double_const.py
    │   │   │       ├── circular_imports/
    │   │   │       │   ├── basic.py
    │   │   │       │   ├── basic2.py
    │   │   │       │   ├── binding.py
    │   │   │       │   ├── binding2.py
    │   │   │       │   ├── from_cycle1.py
    │   │   │       │   ├── from_cycle2.py
    │   │   │       │   ├── import_cycle.py
    │   │   │       │   ├── indirect.py
    │   │   │       │   ├── rebinding.py
    │   │   │       │   ├── rebinding2.py
    │   │   │       │   ├── singlephase.py
    │   │   │       │   ├── source.py
    │   │   │       │   ├── subpackage.py
    │   │   │       │   ├── use.py
    │   │   │       │   ├── util.py
    │   │   │       │   ├── subpkg/
    │   │   │       │   │   ├── subpackage2.py
    │   │   │       │   │   └── util.py
    │   │   │       │   └── subpkg2/
    │   │   │       │       ├── __init__.py
    │   │   │       │       └── parent/
    │   │   │       │           ├── __init__.py
    │   │   │       │           └── child.py
    │   │   │       ├── package/
    │   │   │       │   ├── __init__.py
    │   │   │       │   └── submodule.py
    │   │   │       ├── package2/
    │   │   │       │   ├── submodule1.py
    │   │   │       │   └── submodule2.py
    │   │   │       ├── package3/
    │   │   │       │   ├── __init__.py
    │   │   │       │   └── submodule.py
    │   │   │       ├── package4/
    │   │   │       │   ├── __init__.py
    │   │   │       │   └── submodule.py
    │   │   │       └── unwritable/
    │   │   │           ├── __init__.py
    │   │   │           └── x.py
    │   │   ├── test_importlib/
    │   │   │   ├── __init__.py
    │   │   │   ├── __main__.py
    │   │   │   ├── abc.py
    │   │   │   ├── test_abc.py
    │   │   │   ├── test_api.py
    │   │   │   ├── test_lazy.py
    │   │   │   ├── test_locks.py
    │   │   │   ├── test_namespace_pkgs.py
    │   │   │   ├── test_pkg_import.py
    │   │   │   ├── test_spec.py
    │   │   │   ├── test_threaded_import.py
    │   │   │   ├── test_util.py
    │   │   │   ├── test_windows.py
    │   │   │   ├── threaded_import_hangers.py
    │   │   │   ├── util.py
    │   │   │   ├── builtin/
    │   │   │   │   ├── __init__.py
    │   │   │   │   ├── __main__.py
    │   │   │   │   ├── test_finder.py
    │   │   │   │   └── test_loader.py
    │   │   │   ├── extension/
    │   │   │   │   ├── __init__.py
    │   │   │   │   ├── __main__.py
    │   │   │   │   ├── _test_nonmodule_cases.py
    │   │   │   │   ├── test_case_sensitivity.py
    │   │   │   │   ├── test_finder.py
    │   │   │   │   ├── test_loader.py
    │   │   │   │   └── test_path_hook.py
    │   │   │   ├── frozen/
    │   │   │   │   ├── __init__.py
    │   │   │   │   ├── __main__.py
    │   │   │   │   ├── test_finder.py
    │   │   │   │   └── test_loader.py
    │   │   │   ├── import_/
    │   │   │   │   ├── __init__.py
    │   │   │   │   ├── __main__.py
    │   │   │   │   ├── test___loader__.py
    │   │   │   │   ├── test___package__.py
    │   │   │   │   ├── test_api.py
    │   │   │   │   ├── test_caching.py
    │   │   │   │   ├── test_fromlist.py
    │   │   │   │   ├── test_helpers.py
    │   │   │   │   ├── test_meta_path.py
    │   │   │   │   ├── test_packages.py
    │   │   │   │   ├── test_path.py
    │   │   │   │   └── test_relative_imports.py
    │   │   │   ├── metadata/
    │   │   │   │   ├── __init__.py
    │   │   │   │   ├── _context.py
    │   │   │   │   ├── _path.py
    │   │   │   │   ├── fixtures.py
    │   │   │   │   ├── stubs.py
    │   │   │   │   ├── test_api.py
    │   │   │   │   ├── test_main.py
    │   │   │   │   ├── test_zip.py
    │   │   │   │   └── data/
    │   │   │   │       ├── __init__.py
    │   │   │   │       └── sources/
    │   │   │   │           ├── example/
    │   │   │   │           │   ├── setup.py
    │   │   │   │           │   └── example/
    │   │   │   │           │       └── __init__.py
    │   │   │   │           └── example2/
    │   │   │   │               ├── pyproject.toml
    │   │   │   │               └── example2/
    │   │   │   │                   └── __init__.py
    │   │   │   ├── namespace_pkgs/
    │   │   │   │   ├── missing_directory.zip
    │   │   │   │   ├── nested_portion1.zip
    │   │   │   │   ├── top_level_portion1.zip
    │   │   │   │   ├── both_portions/
    │   │   │   │   │   └── foo/
    │   │   │   │   │       ├── one.py
    │   │   │   │   │       └── two.py
    │   │   │   │   ├── module_and_namespace_package/
    │   │   │   │   │   ├── a_test.py
    │   │   │   │   │   └── a_test/
    │   │   │   │   │       └── empty
    │   │   │   │   ├── not_a_namespace_pkg/
    │   │   │   │   │   └── foo/
    │   │   │   │   │       ├── __init__.py
    │   │   │   │   │       └── one.py
    │   │   │   │   ├── portion1/
    │   │   │   │   │   └── foo/
    │   │   │   │   │       └── one.py
    │   │   │   │   ├── portion2/
    │   │   │   │   │   └── foo/
    │   │   │   │   │       └── two.py
    │   │   │   │   ├── project1/
    │   │   │   │   │   └── parent/
    │   │   │   │   │       └── child/
    │   │   │   │   │           └── one.py
    │   │   │   │   ├── project2/
    │   │   │   │   │   └── parent/
    │   │   │   │   │       └── child/
    │   │   │   │   │           └── two.py
    │   │   │   │   └── project3/
    │   │   │   │       └── parent/
    │   │   │   │           └── child/
    │   │   │   │               └── three.py
    │   │   │   ├── partial/
    │   │   │   │   ├── cfimport.py
    │   │   │   │   └── pool_in_threads.py
    │   │   │   ├── resources/
    │   │   │   │   ├── __init__.py
    │   │   │   │   ├── _path.py
    │   │   │   │   ├── test_compatibilty_files.py
    │   │   │   │   ├── test_contents.py
    │   │   │   │   ├── test_custom.py
    │   │   │   │   ├── test_files.py
    │   │   │   │   ├── test_functional.py
    │   │   │   │   ├── test_open.py
    │   │   │   │   ├── test_path.py
    │   │   │   │   ├── test_read.py
    │   │   │   │   ├── test_reader.py
    │   │   │   │   ├── test_resource.py
    │   │   │   │   ├── util.py
    │   │   │   │   └── zip.py
    │   │   │   └── source/
    │   │   │       ├── __init__.py
    │   │   │       ├── __main__.py
    │   │   │       ├── test_case_sensitivity.py
    │   │   │       ├── test_file_loader.py
    │   │   │       ├── test_finder.py
    │   │   │       ├── test_path_hook.py
    │   │   │       └── test_source_encoding.py
    │   │   ├── test_inspect/
    │   │   │   ├── __init__.py
    │   │   │   ├── inspect_deferred_annotations.py
    │   │   │   ├── inspect_fodder.py
    │   │   │   ├── inspect_fodder2.py
    │   │   │   ├── inspect_stock_annotations.py
    │   │   │   ├── inspect_stringized_annotations.py
    │   │   │   ├── inspect_stringized_annotations_2.py
    │   │   │   ├── inspect_stringized_annotations_pep695.py
    │   │   │   └── test_inspect.py
    │   │   ├── test_interpreters/
    │   │   │   ├── __init__.py
    │   │   │   ├── __main__.py
    │   │   │   ├── test_api.py
    │   │   │   ├── test_channels.py
    │   │   │   ├── test_lifecycle.py
    │   │   │   ├── test_queues.py
    │   │   │   ├── test_stress.py
    │   │   │   └── utils.py
    │   │   ├── test_json/
    │   │   │   ├── __init__.py
    │   │   │   ├── __main__.py
    │   │   │   ├── test_decode.py
    │   │   │   ├── test_default.py
    │   │   │   ├── test_dump.py
    │   │   │   ├── test_encode_basestring_ascii.py
    │   │   │   ├── test_enum.py
    │   │   │   ├── test_fail.py
    │   │   │   ├── test_float.py
    │   │   │   ├── test_indent.py
    │   │   │   ├── test_pass1.py
    │   │   │   ├── test_pass2.py
    │   │   │   ├── test_pass3.py
    │   │   │   ├── test_recursion.py
    │   │   │   ├── test_scanstring.py
    │   │   │   ├── test_separators.py
    │   │   │   ├── test_speedups.py
    │   │   │   ├── test_tool.py
    │   │   │   └── test_unicode.py
    │   │   ├── test_module/
    │   │   │   ├── __init__.py
    │   │   │   ├── bad_getattr.py
    │   │   │   ├── bad_getattr2.py
    │   │   │   ├── bad_getattr3.py
    │   │   │   ├── final_a.py
    │   │   │   ├── final_b.py
    │   │   │   └── good_getattr.py
    │   │   ├── test_multiprocessing_fork/
    │   │   │   ├── __init__.py
    │   │   │   ├── test_manager.py
    │   │   │   ├── test_misc.py
    │   │   │   ├── test_processes.py
    │   │   │   └── test_threads.py
    │   │   ├── test_multiprocessing_forkserver/
    │   │   │   ├── __init__.py
    │   │   │   ├── test_manager.py
    │   │   │   ├── test_misc.py
    │   │   │   ├── test_processes.py
    │   │   │   └── test_threads.py
    │   │   ├── test_multiprocessing_spawn/
    │   │   │   ├── __init__.py
    │   │   │   ├── test_manager.py
    │   │   │   ├── test_misc.py
    │   │   │   ├── test_processes.py
    │   │   │   └── test_threads.py
    │   │   ├── test_pathlib/
    │   │   │   ├── __init__.py
    │   │   │   ├── test_pathlib.py
    │   │   │   └── test_pathlib_abc.py
    │   │   ├── test_peg_generator/
    │   │   │   ├── __init__.py
    │   │   │   ├── __main__.py
    │   │   │   ├── test_c_parser.py
    │   │   │   ├── test_first_sets.py
    │   │   │   ├── test_grammar_validator.py
    │   │   │   └── test_pegen.py
    │   │   ├── test_pydoc/
    │   │   │   ├── __init__.py
    │   │   │   ├── pydoc_mod.py
    │   │   │   ├── pydocfodder.py
    │   │   │   └── test_pydoc.py
    │   │   ├── test_pyrepl/
    │   │   │   ├── __init__.py
    │   │   │   ├── __main__.py
    │   │   │   ├── support.py
    │   │   │   ├── test_input.py
    │   │   │   ├── test_interact.py
    │   │   │   ├── test_keymap.py
    │   │   │   ├── test_pyrepl.py
    │   │   │   ├── test_reader.py
    │   │   │   ├── test_unix_console.py
    │   │   │   ├── test_unix_eventqueue.py
    │   │   │   └── test_windows_console.py
    │   │   ├── test_sqlite3/
    │   │   │   ├── __init__.py
    │   │   │   ├── __main__.py
    │   │   │   ├── test_backup.py
    │   │   │   ├── test_cli.py
    │   │   │   ├── test_dbapi.py
    │   │   │   ├── test_dump.py
    │   │   │   ├── test_factory.py
    │   │   │   ├── test_hooks.py
    │   │   │   ├── test_regression.py
    │   │   │   ├── test_transactions.py
    │   │   │   ├── test_types.py
    │   │   │   ├── test_userfunctions.py
    │   │   │   └── util.py
    │   │   ├── test_tkinter/
    │   │   │   ├── README
    │   │   │   ├── __init__.py
    │   │   │   ├── __main__.py
    │   │   │   ├── support.py
    │   │   │   ├── test_colorchooser.py
    │   │   │   ├── test_font.py
    │   │   │   ├── test_geometry_managers.py
    │   │   │   ├── test_images.py
    │   │   │   ├── test_loadtk.py
    │   │   │   ├── test_messagebox.py
    │   │   │   ├── test_misc.py
    │   │   │   ├── test_simpledialog.py
    │   │   │   ├── test_text.py
    │   │   │   ├── test_variables.py
    │   │   │   ├── test_widgets.py
    │   │   │   └── widget_tests.py
    │   │   ├── test_tomllib/
    │   │   │   ├── __init__.py
    │   │   │   ├── __main__.py
    │   │   │   ├── burntsushi.py
    │   │   │   ├── test_data.py
    │   │   │   ├── test_error.py
    │   │   │   ├── test_misc.py
    │   │   │   └── data/
    │   │   │       ├── invalid/
    │   │   │       │   ├── array-missing-comma.toml
    │   │   │       │   ├── basic-str-ends-in-escape.toml
    │   │   │       │   ├── inline-table-missing-comma.toml
    │   │   │       │   ├── invalid-comment-char.toml
    │   │   │       │   ├── invalid-escaped-unicode.toml
    │   │   │       │   ├── invalid-hex.toml
    │   │   │       │   ├── missing-closing-double-square-bracket.toml
    │   │   │       │   ├── missing-closing-square-bracket.toml
    │   │   │       │   ├── non-scalar-escaped.toml
    │   │   │       │   ├── unclosed-multiline-string.toml
    │   │   │       │   ├── unclosed-string.toml
    │   │   │       │   ├── array/
    │   │   │       │   │   ├── file-end-after-val.toml
    │   │   │       │   │   ├── unclosed-after-item.toml
    │   │   │       │   │   └── unclosed-empty.toml
    │   │   │       │   ├── array-of-tables/
    │   │   │       │   │   ├── overwrite-array-in-parent.toml
    │   │   │       │   │   └── overwrite-bool-with-aot.toml
    │   │   │       │   ├── boolean/
    │   │   │       │   │   ├── invalid-false-casing.toml
    │   │   │       │   │   └── invalid-true-casing.toml
    │   │   │       │   ├── dates-and-times/
    │   │   │       │   │   └── invalid-day.toml
    │   │   │       │   ├── dotted-keys/
    │   │   │       │   │   ├── access-non-table.toml
    │   │   │       │   │   ├── extend-defined-aot.toml
    │   │   │       │   │   ├── extend-defined-table-with-subtable.toml
    │   │   │       │   │   └── extend-defined-table.toml
    │   │   │       │   ├── inline-table/
    │   │   │       │   │   ├── define-twice-in-subtable.toml
    │   │   │       │   │   ├── define-twice.toml
    │   │   │       │   │   ├── file-end-after-key-val.toml
    │   │   │       │   │   ├── mutate.toml
    │   │   │       │   │   ├── override-val-in-table.toml
    │   │   │       │   │   ├── override-val-with-array.toml
    │   │   │       │   │   ├── override-val-with-table.toml
    │   │   │       │   │   ├── overwrite-implicitly.toml
    │   │   │       │   │   ├── overwrite-value-in-inner-array.toml
    │   │   │       │   │   ├── overwrite-value-in-inner-table.toml
    │   │   │       │   │   └── unclosed-empty.toml
    │   │   │       │   ├── keys-and-vals/
    │   │   │       │   │   ├── ends-early-table-def.toml
    │   │   │       │   │   ├── ends-early.toml
    │   │   │       │   │   ├── no-value.toml
    │   │   │       │   │   ├── only-ws-after-dot.toml
    │   │   │       │   │   └── overwrite-with-deep-table.toml
    │   │   │       │   ├── literal-str/
    │   │   │       │   │   └── unclosed.toml
    │   │   │       │   ├── multiline-basic-str/
    │   │   │       │   │   ├── carriage-return.toml
    │   │   │       │   │   ├── escape-only.toml
    │   │   │       │   │   ├── file-ends-after-opening.toml
    │   │   │       │   │   ├── last-line-escape.toml
    │   │   │       │   │   └── unclosed-ends-in-whitespace-escape.toml
    │   │   │       │   ├── multiline-literal-str/
    │   │   │       │   │   ├── file-ends-after-opening.toml
    │   │   │       │   │   └── unclosed.toml
    │   │   │       │   └── table/
    │   │   │       │       ├── eof-after-opening.toml
    │   │   │       │       ├── redefine-1.toml
    │   │   │       │       └── redefine-2.toml
    │   │   │       └── valid/
    │   │   │           ├── apostrophes-in-literal-string.json
    │   │   │           ├── apostrophes-in-literal-string.toml
    │   │   │           ├── boolean.json
    │   │   │           ├── boolean.toml
    │   │   │           ├── empty-inline-table.json
    │   │   │           ├── empty-inline-table.toml
    │   │   │           ├── five-quotes.json
    │   │   │           ├── five-quotes.toml
    │   │   │           ├── hex-char.json
    │   │   │           ├── hex-char.toml
    │   │   │           ├── no-newlines.json
    │   │   │           ├── no-newlines.toml
    │   │   │           ├── trailing-comma.json
    │   │   │           ├── trailing-comma.toml
    │   │   │           ├── array/
    │   │   │           │   ├── array-subtables.json
    │   │   │           │   ├── array-subtables.toml
    │   │   │           │   ├── open-parent-table.json
    │   │   │           │   └── open-parent-table.toml
    │   │   │           ├── dates-and-times/
    │   │   │           │   ├── datetimes.json
    │   │   │           │   ├── datetimes.toml
    │   │   │           │   ├── localtime.json
    │   │   │           │   └── localtime.toml
    │   │   │           └── multiline-basic-str/
    │   │   │               ├── ends-in-whitespace-escape.json
    │   │   │               └── ends-in-whitespace-escape.toml
    │   │   ├── test_tools/
    │   │   │   ├── __init__.py
    │   │   │   ├── __main__.py
    │   │   │   ├── test_freeze.py
    │   │   │   ├── test_i18n.py
    │   │   │   ├── test_makefile.py
    │   │   │   ├── test_makeunicodedata.py
    │   │   │   ├── test_reindent.py
    │   │   │   ├── test_sundry.py
    │   │   │   └── i18n_data/
    │   │   │       ├── docstrings.pot
    │   │   │       ├── docstrings.py
    │   │   │       ├── fileloc.pot
    │   │   │       ├── fileloc.py
    │   │   │       ├── messages.pot
    │   │   │       └── messages.py
    │   │   ├── test_ttk/
    │   │   │   ├── __init__.py
    │   │   │   ├── __main__.py
    │   │   │   ├── test_extensions.py
    │   │   │   ├── test_style.py
    │   │   │   └── test_widgets.py
    │   │   ├── test_unittest/
    │   │   │   ├── __init__.py
    │   │   │   ├── __main__.py
    │   │   │   ├── _test_warnings.py
    │   │   │   ├── dummy.py
    │   │   │   ├── support.py
    │   │   │   ├── test_assertions.py
    │   │   │   ├── test_async_case.py
    │   │   │   ├── test_break.py
    │   │   │   ├── test_case.py
    │   │   │   ├── test_discovery.py
    │   │   │   ├── test_functiontestcase.py
    │   │   │   ├── test_loader.py
    │   │   │   ├── test_program.py
    │   │   │   ├── test_result.py
    │   │   │   ├── test_runner.py
    │   │   │   ├── test_setups.py
    │   │   │   ├── test_skipping.py
    │   │   │   ├── test_suite.py
    │   │   │   ├── test_util.py
    │   │   │   ├── namespace_test_pkg/
    │   │   │   │   ├── test_foo.py
    │   │   │   │   ├── bar/
    │   │   │   │   │   ├── __init__.py
    │   │   │   │   │   └── test_bar.py
    │   │   │   │   └── noop/
    │   │   │   │       ├── test_noop.py
    │   │   │   │       └── no2/
    │   │   │   │           ├── __init__.py
    │   │   │   │           └── test_no2.py
    │   │   │   └── testmock/
    │   │   │       ├── __init__.py
    │   │   │       ├── __main__.py
    │   │   │       ├── support.py
    │   │   │       ├── testasync.py
    │   │   │       ├── testcallable.py
    │   │   │       ├── testhelpers.py
    │   │   │       ├── testmagicmethods.py
    │   │   │       ├── testmock.py
    │   │   │       ├── testpatch.py
    │   │   │       ├── testsealable.py
    │   │   │       ├── testsentinel.py
    │   │   │       ├── testthreadingmock.py
    │   │   │       └── testwith.py
    │   │   ├── test_warnings/
    │   │   │   ├── __init__.py
    │   │   │   ├── __main__.py
    │   │   │   └── data/
    │   │   │       ├── import_warning.py
    │   │   │       ├── package_helper.py
    │   │   │       └── stacklevel.py
    │   │   ├── test_zipfile/
    │   │   │   ├── __init__.py
    │   │   │   ├── __main__.py
    │   │   │   ├── test_core.py
    │   │   │   └── _path/
    │   │   │       ├── __init__.py
    │   │   │       ├── _functools.py
    │   │   │       ├── _itertools.py
    │   │   │       ├── _support.py
    │   │   │       ├── _test_params.py
    │   │   │       ├── test_complexity.py
    │   │   │       ├── test_path.py
    │   │   │       └── write-alpharep.py
    │   │   ├── test_zoneinfo/
    │   │   │   ├── __init__.py
    │   │   │   ├── __main__.py
    │   │   │   ├── _support.py
    │   │   │   ├── test_zoneinfo.py
    │   │   │   ├── test_zoneinfo_property.py
    │   │   │   └── data/
    │   │   │       ├── update_test_data.py
    │   │   │       └── zoneinfo_data.json
    │   │   ├── tkinterdata/
    │   │   │   ├── python.pgm
    │   │   │   ├── python.ppm
    │   │   │   └── python.xbm
    │   │   ├── tokenizedata/
    │   │   │   ├── __init__.py
    │   │   │   ├── bad_coding.py
    │   │   │   ├── bad_coding2.py
    │   │   │   ├── badsyntax_3131.py
    │   │   │   ├── badsyntax_pep3120.py
    │   │   │   ├── coding20731.py
    │   │   │   ├── tokenize_tests-latin1-coding-cookie-and-utf8-bom-sig.txt
    │   │   │   ├── tokenize_tests-no-coding-cookie-and-utf8-bom-sig-only.txt
    │   │   │   ├── tokenize_tests-utf8-coding-cookie-and-no-utf8-bom-sig.txt
    │   │   │   ├── tokenize_tests-utf8-coding-cookie-and-utf8-bom-sig.txt
    │   │   │   └── tokenize_tests.txt
    │   │   ├── tracedmodules/
    │   │   │   ├── __init__.py
    │   │   │   └── testmod.py
    │   │   ├── translationdata/
    │   │   │   ├── argparse/
    │   │   │   │   └── msgids.txt
    │   │   │   ├── getopt/
    │   │   │   │   └── msgids.txt
    │   │   │   └── optparse/
    │   │   │       └── msgids.txt
    │   │   ├── typinganndata/
    │   │   │   ├── __init__.py
    │   │   │   ├── _typed_dict_helper.py
    │   │   │   ├── ann_module.py
    │   │   │   ├── ann_module2.py
    │   │   │   ├── ann_module3.py
    │   │   │   ├── ann_module4.py
    │   │   │   ├── ann_module5.py
    │   │   │   ├── ann_module6.py
    │   │   │   ├── ann_module695.py
    │   │   │   ├── ann_module7.py
    │   │   │   ├── ann_module8.py
    │   │   │   ├── ann_module9.py
    │   │   │   └── mod_generics_cache.py
    │   │   ├── wheeldata/
    │   │   ├── xmltestdata/
    │   │   │   ├── expat224_utf8_bug.xml
    │   │   │   ├── simple-ns.xml
    │   │   │   ├── simple.xml
    │   │   │   ├── test.xml
    │   │   │   └── c14n-20/
    │   │   │       ├── README
    │   │   │       ├── c14nComment.xml
    │   │   │       ├── c14nDefault.xml
    │   │   │       ├── c14nPrefix.xml
    │   │   │       ├── c14nPrefixQname.xml
    │   │   │       ├── c14nPrefixQnameXpathElem.xml
    │   │   │       ├── c14nQname.xml
    │   │   │       ├── c14nQnameElem.xml
    │   │   │       ├── c14nQnameXpathElem.xml
    │   │   │       ├── c14nTrim.xml
    │   │   │       ├── doc.dtd
    │   │   │       ├── doc.xsl
    │   │   │       ├── inC14N1.xml
    │   │   │       ├── inC14N2.xml
    │   │   │       ├── inC14N3.xml
    │   │   │       ├── inC14N4.xml
    │   │   │       ├── inC14N5.xml
    │   │   │       ├── inC14N6.xml
    │   │   │       ├── inNsContent.xml
    │   │   │       ├── inNsDefault.xml
    │   │   │       ├── inNsPushdown.xml
    │   │   │       ├── inNsRedecl.xml
    │   │   │       ├── inNsSort.xml
    │   │   │       ├── inNsSuperfluous.xml
    │   │   │       ├── inNsXml.xml
    │   │   │       ├── out_inC14N1_c14nComment.xml
    │   │   │       ├── out_inC14N1_c14nDefault.xml
    │   │   │       ├── out_inC14N2_c14nDefault.xml
    │   │   │       ├── out_inC14N2_c14nTrim.xml
    │   │   │       ├── out_inC14N3_c14nDefault.xml
    │   │   │       ├── out_inC14N3_c14nPrefix.xml
    │   │   │       ├── out_inC14N3_c14nTrim.xml
    │   │   │       ├── out_inC14N4_c14nDefault.xml
    │   │   │       ├── out_inC14N4_c14nTrim.xml
    │   │   │       ├── out_inC14N5_c14nDefault.xml
    │   │   │       ├── out_inC14N5_c14nTrim.xml
    │   │   │       ├── out_inC14N6_c14nDefault.xml
    │   │   │       ├── out_inNsContent_c14nDefault.xml
    │   │   │       ├── out_inNsContent_c14nPrefixQnameXpathElem.xml
    │   │   │       ├── out_inNsContent_c14nQnameElem.xml
    │   │   │       ├── out_inNsContent_c14nQnameXpathElem.xml
    │   │   │       ├── out_inNsDefault_c14nDefault.xml
    │   │   │       ├── out_inNsDefault_c14nPrefix.xml
    │   │   │       ├── out_inNsPushdown_c14nDefault.xml
    │   │   │       ├── out_inNsPushdown_c14nPrefix.xml
    │   │   │       ├── out_inNsRedecl_c14nDefault.xml
    │   │   │       ├── out_inNsRedecl_c14nPrefix.xml
    │   │   │       ├── out_inNsSort_c14nDefault.xml
    │   │   │       ├── out_inNsSort_c14nPrefix.xml
    │   │   │       ├── out_inNsSuperfluous_c14nDefault.xml
    │   │   │       ├── out_inNsSuperfluous_c14nPrefix.xml
    │   │   │       ├── out_inNsXml_c14nDefault.xml
    │   │   │       ├── out_inNsXml_c14nPrefix.xml
    │   │   │       ├── out_inNsXml_c14nPrefixQname.xml
    │   │   │       ├── out_inNsXml_c14nQname.xml
    │   │   │       └── world.txt
    │   │   └── zipimport_data/
    │   │       ├── sparse-zip64-c0-0x000000000.part
    │   │       ├── sparse-zip64-c0-0x100000000.part
    │   │       └── sparse-zip64-c0-0x200000000.part
    │   ├── tkinter/
    │   │   ├── __init__.py
    │   │   ├── __main__.py
    │   │   ├── colorchooser.py
    │   │   ├── commondialog.py
    │   │   ├── constants.py
    │   │   ├── dialog.py
    │   │   ├── dnd.py
    │   │   ├── filedialog.py
    │   │   ├── font.py
    │   │   ├── messagebox.py
    │   │   ├── scrolledtext.py
    │   │   ├── simpledialog.py
    │   │   └── ttk.py
    │   ├── tomllib/
    │   │   ├── __init__.py
    │   │   ├── _parser.py
    │   │   ├── _re.py
    │   │   └── _types.py
    │   ├── turtledemo/
    │   │   ├── __init__.py
    │   │   ├── __main__.py
    │   │   ├── bytedesign.py
    │   │   ├── chaos.py
    │   │   ├── clock.py
    │   │   ├── colormixer.py
    │   │   ├── forest.py
    │   │   ├── fractalcurves.py
    │   │   ├── lindenmayer.py
    │   │   ├── minimal_hanoi.py
    │   │   ├── nim.py
    │   │   ├── paint.py
    │   │   ├── peace.py
    │   │   ├── penrose.py
    │   │   ├── planet_and_moon.py
    │   │   ├── rosette.py
    │   │   ├── round_dance.py
    │   │   ├── sorting_animate.py
    │   │   ├── tree.py
    │   │   ├── turtle.cfg
    │   │   ├── two_canvases.py
    │   │   └── yinyang.py
    │   ├── unittest/
    │   │   ├── __init__.py
    │   │   ├── __main__.py
    │   │   ├── _log.py
    │   │   ├── async_case.py
    │   │   ├── case.py
    │   │   ├── loader.py
    │   │   ├── main.py
    │   │   ├── mock.py
    │   │   ├── result.py
    │   │   ├── runner.py
    │   │   ├── signals.py
    │   │   ├── suite.py
    │   │   └── util.py
    │   ├── urllib/
    │   │   ├── __init__.py
    │   │   ├── error.py
    │   │   ├── parse.py
    │   │   ├── request.py
    │   │   ├── response.py
    │   │   └── robotparser.py
    │   ├── venv/
    │   │   ├── __init__.py
    │   │   ├── __main__.py
    │   │   └── scripts/
    │   │       ├── common/
    │   │       │   ├── Activate.ps1
    │   │       │   ├── activate
    │   │       │   └── activate.fish
    │   │       ├── nt/
    │   │       │   ├── activate.bat
    │   │       │   └── deactivate.bat
    │   │       └── posix/
    │   │           └── activate.csh
    │   ├── wsgiref/
    │   │   ├── __init__.py
    │   │   ├── handlers.py
    │   │   ├── headers.py
    │   │   ├── simple_server.py
    │   │   ├── types.py
    │   │   ├── util.py
    │   │   └── validate.py
    │   ├── xml/
    │   │   ├── __init__.py
    │   │   ├── dom/
    │   │   │   ├── NodeFilter.py
    │   │   │   ├── __init__.py
    │   │   │   ├── domreg.py
    │   │   │   ├── expatbuilder.py
    │   │   │   ├── minicompat.py
    │   │   │   ├── minidom.py
    │   │   │   ├── pulldom.py
    │   │   │   └── xmlbuilder.py
    │   │   ├── etree/
    │   │   │   ├── ElementInclude.py
    │   │   │   ├── ElementPath.py
    │   │   │   ├── ElementTree.py
    │   │   │   ├── __init__.py
    │   │   │   └── cElementTree.py
    │   │   ├── parsers/
    │   │   │   ├── __init__.py
    │   │   │   └── expat.py
    │   │   └── sax/
    │   │       ├── __init__.py
    │   │       ├── _exceptions.py
    │   │       ├── expatreader.py
    │   │       ├── handler.py
    │   │       ├── saxutils.py
    │   │       └── xmlreader.py
    │   ├── xmlrpc/
    │   │   ├── __init__.py
    │   │   ├── client.py
    │   │   └── server.py
    │   ├── zipfile/
    │   │   ├── __init__.py
    │   │   ├── __main__.py
    │   │   └── _path/
    │   │       ├── __init__.py
    │   │       └── glob.py
    │   └── zoneinfo/
    │       ├── __init__.py
    │       ├── _common.py
    │       ├── _tzpath.py
    │       └── _zoneinfo.py
    ├── Mac/
    │   ├── Extras.install.py
    │   ├── Makefile.in
    │   ├── README.rst
    │   ├── BuildScript/
    │   │   ├── README.rst
    │   │   ├── backport_gh110950_fix.patch
    │   │   ├── backport_gh71383_fix.patch
    │   │   ├── build-installer.py
    │   │   ├── seticon.m
    │   │   ├── tk868_on_10_8_10_9.patch
    │   │   ├── resources/
    │   │   │   ├── Conclusion.rtf
    │   │   │   ├── License.rtf
    │   │   │   ├── ReadMe.rtf
    │   │   │   ├── Welcome.rtf
    │   │   │   └── install_certificates.command
    │   │   └── scripts/
    │   │       ├── postflight.documentation
    │   │       ├── postflight.ensurepip
    │   │       ├── postflight.framework
    │   │       └── postflight.patch-profile
    │   ├── IDLE/
    │   │   └── IDLE.app/
    │   │       └── Contents/
    │   │           ├── Info.plist
    │   │           ├── PkgInfo
    │   │           ├── MacOS/
    │   │           │   └── IDLE
    │   │           └── Resources/
    │   │               ├── IDLE.icns
    │   │               ├── PythonCompiled.icns
    │   │               ├── PythonSource.icns
    │   │               └── idlemain.py
    │   ├── Icons/
    │   │   ├── Disk Image.icns
    │   │   ├── IDLE.icns
    │   │   ├── Python Folder.icns
    │   │   ├── PythonCompiled.icns
    │   │   ├── PythonLauncher.icns
    │   │   ├── PythonSource.icns
    │   │   └── ReadMe.txt
    │   ├── PythonLauncher/
    │   │   ├── FileSettings.h
    │   │   ├── FileSettings.m
    │   │   ├── Info.plist.in
    │   │   ├── Makefile.in
    │   │   ├── MyAppDelegate.h
    │   │   ├── MyAppDelegate.m
    │   │   ├── MyDocument.h
    │   │   ├── MyDocument.m
    │   │   ├── PreferencesWindowController.h
    │   │   ├── PreferencesWindowController.m
    │   │   ├── doscript.h
    │   │   ├── doscript.m
    │   │   ├── factorySettings.plist
    │   │   ├── main.m
    │   │   └── English.lproj/
    │   │       ├── Credits.rtf
    │   │       ├── MainMenu.nib/
    │   │       │   ├── classes.nib
    │   │       │   ├── info.nib
    │   │       │   └── objects.nib
    │   │       ├── MyDocument.nib/
    │   │       │   ├── classes.nib
    │   │       │   ├── info.nib
    │   │       │   └── objects.nib
    │   │       └── PreferenceWindow.nib/
    │   │           ├── classes.nib
    │   │           ├── info.nib
    │   │           └── objects.nib
    │   ├── Resources/
    │   │   ├── app-store-compliance.patch
    │   │   ├── app/
    │   │   │   ├── Info.plist.in
    │   │   │   ├── PkgInfo
    │   │   │   └── Resources/
    │   │   │       ├── PythonApplet.icns
    │   │   │       └── PythonInterpreter.icns
    │   │   ├── framework/
    │   │   │   └── Info.plist.in
    │   │   └── iconsrc/
    │   │       ├── IDE.psd
    │   │       ├── PackageManager.psd
    │   │       ├── PythonApplet.psd
    │   │       ├── PythonCompiled.psd
    │   │       ├── PythonIcon.psd
    │   │       ├── PythonSource.psd
    │   │       └── PythonWSource.psd
    │   └── Tools/
    │       ├── plistlib_generate_testdata.py
    │       └── pythonw.c
    ├── Misc/
    │   ├── ACKS
    │   ├── HISTORY
    │   ├── Porting
    │   ├── README
    │   ├── README.AIX
    │   ├── README.valgrind
    │   ├── SpecialBuilds.txt
    │   ├── externals.spdx.json
    │   ├── indent.pro
    │   ├── platform_triplet.c
    │   ├── python-config.in
    │   ├── python-config.sh.in
    │   ├── python-embed.pc.in
    │   ├── python.man
    │   ├── python.pc.in
    │   ├── sbom.spdx.json
    │   ├── stable_abi.toml
    │   ├── svnmap.txt
    │   ├── valgrind-python.supp
    │   ├── vgrindefs
    │   ├── NEWS.d/
    │   │   ├── 3.10.0a1.rst
    │   │   ├── 3.10.0a2.rst
    │   │   ├── 3.10.0a3.rst
    │   │   ├── 3.10.0a4.rst
    │   │   ├── 3.10.0a5.rst
    │   │   ├── 3.10.0a6.rst
    │   │   ├── 3.10.0a7.rst
    │   │   ├── 3.10.0b1.rst
    │   │   ├── 3.11.0a1.rst
    │   │   ├── 3.11.0a2.rst
    │   │   ├── 3.11.0a3.rst
    │   │   ├── 3.11.0a4.rst
    │   │   ├── 3.11.0a5.rst
    │   │   ├── 3.11.0a6.rst
    │   │   ├── 3.11.0a7.rst
    │   │   ├── 3.11.0b1.rst
    │   │   ├── 3.12.0a1.rst
    │   │   ├── 3.12.0a2.rst
    │   │   ├── 3.12.0a3.rst
    │   │   ├── 3.12.0a4.rst
    │   │   ├── 3.12.0a5.rst
    │   │   ├── 3.12.0a6.rst
    │   │   ├── 3.12.0a7.rst
    │   │   ├── 3.12.0b1.rst
    │   │   ├── 3.13.0a1.rst
    │   │   ├── 3.13.0a2.rst
    │   │   ├── 3.13.0a3.rst
    │   │   ├── 3.13.0a4.rst
    │   │   ├── 3.13.0a5.rst
    │   │   ├── 3.13.0a6.rst
    │   │   ├── 3.13.0b1.rst
    │   │   ├── 3.14.0a1.rst
    │   │   ├── 3.14.0a2.rst
    │   │   ├── 3.14.0a3.rst
    │   │   ├── 3.5.0.rst
    │   │   ├── 3.5.0a1.rst
    │   │   ├── 3.5.0a2.rst
    │   │   ├── 3.5.0a3.rst
    │   │   ├── 3.5.0a4.rst
    │   │   ├── 3.5.0b1.rst
    │   │   ├── 3.5.0b2.rst
    │   │   ├── 3.5.0b3.rst
    │   │   ├── 3.5.0b4.rst
    │   │   ├── 3.5.0rc1.rst
    │   │   ├── 3.5.0rc2.rst
    │   │   ├── 3.5.0rc3.rst
    │   │   ├── 3.5.0rc4.rst
    │   │   ├── 3.5.1.rst
    │   │   ├── 3.5.1rc1.rst
    │   │   ├── 3.5.2.rst
    │   │   ├── 3.5.2rc1.rst
    │   │   ├── 3.5.3.rst
    │   │   ├── 3.5.3rc1.rst
    │   │   ├── 3.5.4.rst
    │   │   ├── 3.5.4rc1.rst
    │   │   ├── 3.5.5.rst
    │   │   ├── 3.5.5rc1.rst
    │   │   ├── 3.6.0.rst
    │   │   ├── 3.6.0a1.rst
    │   │   ├── 3.6.0a2.rst
    │   │   ├── 3.6.0a3.rst
    │   │   ├── 3.6.0a4.rst
    │   │   ├── 3.6.0b1.rst
    │   │   ├── 3.6.0b2.rst
    │   │   ├── 3.6.0b3.rst
    │   │   ├── 3.6.0b4.rst
    │   │   ├── 3.6.0rc1.rst
    │   │   ├── 3.6.0rc2.rst
    │   │   ├── 3.6.1.rst
    │   │   ├── 3.6.1rc1.rst
    │   │   ├── 3.6.2.rst
    │   │   ├── 3.6.2rc1.rst
    │   │   ├── 3.6.2rc2.rst
    │   │   ├── 3.6.3.rst
    │   │   ├── 3.6.3rc1.rst
    │   │   ├── 3.6.4.rst
    │   │   ├── 3.6.4rc1.rst
    │   │   ├── 3.6.5.rst
    │   │   ├── 3.6.5rc1.rst
    │   │   ├── 3.6.6.rst
    │   │   ├── 3.6.6rc1.rst
    │   │   ├── 3.7.0.rst
    │   │   ├── 3.7.0a1.rst
    │   │   ├── 3.7.0a2.rst
    │   │   ├── 3.7.0a3.rst
    │   │   ├── 3.7.0a4.rst
    │   │   ├── 3.7.0b1.rst
    │   │   ├── 3.7.0b2.rst
    │   │   ├── 3.7.0b3.rst
    │   │   ├── 3.7.0b4.rst
    │   │   ├── 3.7.0b5.rst
    │   │   ├── 3.7.0rc1.rst
    │   │   ├── 3.8.0a1.rst
    │   │   ├── 3.8.0a2.rst
    │   │   ├── 3.8.0a3.rst
    │   │   ├── 3.8.0a4.rst
    │   │   ├── 3.8.0b1.rst
    │   │   ├── 3.9.0a1.rst
    │   │   ├── 3.9.0a2.rst
    │   │   ├── 3.9.0a3.rst
    │   │   ├── 3.9.0a4.rst
    │   │   ├── 3.9.0a5.rst
    │   │   ├── 3.9.0a6.rst
    │   │   ├── 3.9.0b1.rst
    │   │   └── next/
    │   │       ├── Build/
    │   │       │   ├── 2024-12-16-16-16-35.gh-issue-127951.lpE13-.rst
    │   │       │   ├── 2024-12-20-09-03-22.gh-issue-128104.m_SoVx.rst
    │   │       │   ├── 2024-12-21-09-56-37.gh-issue-100384.Ib-XrN.rst
    │   │       │   ├── 2024-12-28-21-05-19.gh-issue-128321.0UvbXw.rst
    │   │       │   ├── 2025-01-02-11-02-45.gh-issue-123925.TLlyUi.rst
    │   │       │   ├── 2025-01-02-12-50-46.gh-issue-115765.jko7Fg.rst
    │   │       │   ├── 2025-01-04-22-39-10.gh-issue-128472.Wt5E6M.rst
    │   │       │   └── README.rst
    │   │       ├── C_API/
    │   │       │   ├── 2024-12-11-13-01-26.gh-issue-127350.uEBZZ4.rst
    │   │       │   ├── 2024-12-16-21-59-06.gh-issue-128008.fa9Jt0.rst
    │   │       │   ├── 2025-01-08-13-13-18.gh-issue-128629.gSmzyl.rst
    │   │       │   └── README.rst
    │   │       ├── Core_and_Builtins/
    │   │       │   ├── 2024-12-02-18-15-37.gh-issue-126862.fdIK7T.rst
    │   │       │   ├── 2024-12-11-14-32-22.gh-issue-127809.0W8khe.rst
    │   │       │   ├── 2024-12-13-14-17-24.gh-issue-127903.vemHSl.rst
    │   │       │   ├── 2024-12-15-19-51-54.gh-issue-127970.vdUp-y.rst
    │   │       │   ├── 2024-12-15-21-11-26.gh-issue-66409.wv109z.rst
    │   │       │   ├── 2024-12-17-13-45-33.gh-issue-127274.deNxNC.rst
    │   │       │   ├── 2024-12-17-18-20-37.gh-issue-128035.JwqHdB.rst
    │   │       │   ├── 2024-12-17-22-28-15.gh-issue-128030.H1ptOD.rst
    │   │       │   ├── 2024-12-18-14-22-48.gh-issue-128079.SUD5le.rst
    │   │       │   ├── 2024-12-20-12-25-16.gh-issue-127705.WmCz1z.rst
    │   │       │   ├── 2024-12-20-23-07-33.gh-issue-114203.84NgoW.rst
    │   │       │   ├── 2024-12-22-15-47-44.gh-issue-126868.RpjKez.rst
    │   │       │   ├── 2024-12-23-11-14-07.gh-issue-128192.02mEhD.rst
    │   │       │   ├── 2024-12-24-01-40-12.gh-issue-128137.gsTwr_.rst
    │   │       │   └── README.rst
    │   │       ├── Documentation/
    │   │       │   └── README.rst
    │   │       ├── IDLE/
    │   │       │   └── README.rst
    │   │       ├── Library/
    │   │       │   ├── 2022-07-28-12-32-59.gh-issue-95371.F24IFC.rst
    │   │       │   ├── 2023-11-12-21-53-40.gh-issue-112015.2WPRxE.rst
    │   │       │   ├── 2024-07-13-13-25-31.gh-issue-121676.KDLS11.rst
    │   │       │   ├── 2024-08-28-16-10-37.gh-issue-123424.u96_i6.rst
    │   │       │   ├── 2024-09-04-14-13-14.gh-issue-121720.z9hhXQ.rst
    │   │       │   ├── 2024-10-04-09-56-45.gh-issue-124761.N4pSD6.rst
    │   │       │   ├── 2024-10-31-14-31-36.gh-issue-126225.vTxGXm.rst
    │   │       │   ├── 2024-11-09-15-59-51.gh-issue-126624.bN53Va.rst
    │   │       │   ├── 2024-11-11-07-56-03.gh-issue-126639.AmVSt-.rst
    │   │       │   ├── 2024-11-19-10-46-57.gh-issue-124130.OZ_vR5.rst
    │   │       │   ├── 2024-11-24-14-53-35.gh-issue-127196.8CBkUa.rst
    │   │       │   ├── 2024-11-28-14-24-12.gh-issue-127360.HVKt-c.rst
    │   │       │   ├── 2024-12-02-19-13-19.gh-issue-127529.Pj1Xtf.rst
    │   │       │   ├── 2024-12-03-14-45-16.gh-issue-98188.GX9i2b.rst
    │   │       │   ├── 2024-12-03-20-28-08.gh-issue-127586.zgotYF.rst
    │   │       │   ├── 2024-12-04-10-39-29.gh-issue-83662.CG1s3m.rst
    │   │       │   ├── 2024-12-06-21-03-11.gh-issue-127688.NJqtc-.rst
    │   │       │   ├── 2024-12-12-07-27-51.gh-issue-127847.ksfNKM.rst
    │   │       │   ├── 2024-12-13-14-21-04.gh-issue-122548.hq3Vud.rst
    │   │       │   ├── 2024-12-17-12-41-07.gh-issue-126742.l07qvT.rst
    │   │       │   ├── 2024-12-17-13-21-52.gh-issue-127060.mv2bX6.rst
    │   │       │   ├── 2024-12-17-15-23-40.gh-issue-41872.31LjKY.rst
    │   │       │   ├── 2024-12-18-00-07-50.gh-issue-128014.F3aUbz.rst
    │   │       │   ├── 2024-12-18-10-18-55.gh-issue-128062.E9oU7-.rst
    │   │       │   ├── 2024-12-19-20-46-01.gh-issue-127946.4lM3Op.rst
    │   │       │   ├── 2024-12-20-10-57-10.gh-issue-128118.mYak8i.rst
    │   │       │   ├── 2024-12-27-16-28-57.gh-issue-128302.2GMvyl.rst
    │   │       │   ├── 2024-12-29-00-33-34.gh-issue-128317.WgFina.rst
    │   │       │   ├── 2024-12-29-13-49-46.gh-issue-128302.psRpPN.rst
    │   │       │   ├── 2024-12-30-20-48-28.gh-issue-88834.RIvgwc.rst
    │   │       │   ├── 2025-01-01-19-24-43.gh-issue-128388.8UdMz_.rst
    │   │       │   ├── 2025-01-02-13-05-16.gh-issue-128400.5N43fF.rst
    │   │       │   ├── 2025-01-02-15-20-17.gh-issue-128400.UMiG4f.rst
    │   │       │   ├── 2025-01-05-11-46-14.gh-issue-128340.gKI0uU.rst
    │   │       │   ├── 2025-01-06-18-41-08.gh-issue-128552.fV-f8j.rst
    │   │       │   ├── 2025-01-06-21-35-00.gh-issue-128559.6fxcDM.rst
    │   │       │   ├── 2025-01-09-12-06-52.gh-issue-128661.ixx_0z.rst
    │   │       │   └── README.rst
    │   │       ├── Security/
    │   │       │   └── README.rst
    │   │       ├── Tests/
    │   │       │   └── README.rst
    │   │       ├── Tools-Demos/
    │   │       │   ├── 2025-01-03-23-51-07.gh-issue-128152.IhzElS.rst
    │   │       │   └── README.rst
    │   │       ├── Windows/
    │   │       │   └── README.rst
    │   │       └── macOS/
    │   │           ├── 2024-12-22-08-54-30.gh-issue-127592.iyuFCC.rst
    │   │           └── README.rst
    │   └── rhel7/
    │       ├── README.md
    │       ├── openssl.pc
    │       ├── tcl.pc
    │       └── tk.pc
    ├── Modules/
    │   ├── README
    │   ├── Setup
    │   ├── Setup.bootstrap.in
    │   ├── Setup.stdlib.in
    │   ├── _abc.c
    │   ├── _asynciomodule.c
    │   ├── _bisectmodule.c
    │   ├── _bz2module.c
    │   ├── _codecsmodule.c
    │   ├── _collectionsmodule.c
    │   ├── _complex.h
    │   ├── _contextvarsmodule.c
    │   ├── _csv.c
    │   ├── _curses_panel.c
    │   ├── _cursesmodule.c
    │   ├── _datetimemodule.c
    │   ├── _dbmmodule.c
    │   ├── _elementtree.c
    │   ├── _functoolsmodule.c
    │   ├── _gdbmmodule.c
    │   ├── _hashopenssl.c
    │   ├── _heapqmodule.c
    │   ├── _interpchannelsmodule.c
    │   ├── _interpqueuesmodule.c
    │   ├── _interpreters_common.h
    │   ├── _interpretersmodule.c
    │   ├── _json.c
    │   ├── _localemodule.c
    │   ├── _lsprof.c
    │   ├── _lzmamodule.c
    │   ├── _math.h
    │   ├── _opcode.c
    │   ├── _operator.c
    │   ├── _pickle.c
    │   ├── _posixsubprocess.c
    │   ├── _queuemodule.c
    │   ├── _randommodule.c
    │   ├── _scproxy.c
    │   ├── _ssl.c
    │   ├── _ssl.h
    │   ├── _ssl_data_111.h
    │   ├── _ssl_data_300.h
    │   ├── _ssl_data_34.h
    │   ├── _stat.c
    │   ├── _statisticsmodule.c
    │   ├── _struct.c
    │   ├── _suggestions.c
    │   ├── _sysconfig.c
    │   ├── _testbuffer.c
    │   ├── _testcapi_feature_macros.inc
    │   ├── _testcapimodule.c
    │   ├── _testclinic.c
    │   ├── _testclinic_limited.c
    │   ├── _testexternalinspection.c
    │   ├── _testimportmultiple.c
    │   ├── _testinternalcapi.c
    │   ├── _testlimitedcapi.c
    │   ├── _testmultiphase.c
    │   ├── _testsinglephase.c
    │   ├── _threadmodule.c
    │   ├── _tkinter.c
    │   ├── _tracemalloc.c
    │   ├── _typingmodule.c
    │   ├── _uuidmodule.c
    │   ├── _weakref.c
    │   ├── _winapi.c
    │   ├── _zoneinfo.c
    │   ├── addrinfo.h
    │   ├── arraymodule.c
    │   ├── atexitmodule.c
    │   ├── binascii.c
    │   ├── blake2module.c
    │   ├── cmathmodule.c
    │   ├── config.c.in
    │   ├── errnomodule.c
    │   ├── faulthandler.c
    │   ├── fcntlmodule.c
    │   ├── gc_weakref.txt
    │   ├── gcmodule.c
    │   ├── getaddrinfo.c
    │   ├── getbuildinfo.c
    │   ├── getnameinfo.c
    │   ├── getpath.c
    │   ├── getpath.py
    │   ├── getpath_noop.c
    │   ├── grpmodule.c
    │   ├── hashlib.h
    │   ├── itertoolsmodule.c
    │   ├── ld_so_aix.in
    │   ├── main.c
    │   ├── makesetup
    │   ├── makexp_aix
    │   ├── mathmodule.c
    │   ├── md5module.c
    │   ├── mmapmodule.c
    │   ├── overlapped.c
    │   ├── posixmodule.c
    │   ├── posixmodule.h
    │   ├── pwdmodule.c
    │   ├── pyexpat.c
    │   ├── readline.c
    │   ├── resource.c
    │   ├── rotatingtree.c
    │   ├── rotatingtree.h
    │   ├── selectmodule.c
    │   ├── sha1module.c
    │   ├── sha2module.c
    │   ├── sha3module.c
    │   ├── signalmodule.c
    │   ├── socketmodule.c
    │   ├── socketmodule.h
    │   ├── symtablemodule.c
    │   ├── syslogmodule.c
    │   ├── termios.c
    │   ├── timemodule.c
    │   ├── tkappinit.c
    │   ├── tkinter.h
    │   ├── unicodedata.c
    │   ├── unicodedata_db.h
    │   ├── unicodename_db.h
    │   ├── winreparse.h
    │   ├── xxlimited.c
    │   ├── xxlimited_35.c
    │   ├── xxmodule.c
    │   ├── xxsubtype.c
    │   ├── zlibmodule.c
    │   ├── _ctypes/
    │   │   ├── _ctypes.c
    │   │   ├── _ctypes_test.c
    │   │   ├── _ctypes_test.h
    │   │   ├── _ctypes_test_generated.c.h
    │   │   ├── callbacks.c
    │   │   ├── callproc.c
    │   │   ├── cfield.c
    │   │   ├── ctypes.h
    │   │   ├── malloc_closure.c
    │   │   ├── stgdict.c
    │   │   └── clinic/
    │   │       ├── _ctypes.c.h
    │   │       ├── callproc.c.h
    │   │       └── cfield.c.h
    │   ├── _decimal/
    │   │   ├── README.txt
    │   │   ├── _decimal.c
    │   │   ├── docstrings.h
    │   │   ├── libmpdec/
    │   │   │   ├── README.txt
    │   │   │   ├── basearith.c
    │   │   │   ├── basearith.h
    │   │   │   ├── bench.c
    │   │   │   ├── bench_full.c
    │   │   │   ├── bits.h
    │   │   │   ├── constants.c
    │   │   │   ├── constants.h
    │   │   │   ├── context.c
    │   │   │   ├── convolute.c
    │   │   │   ├── convolute.h
    │   │   │   ├── crt.c
    │   │   │   ├── crt.h
    │   │   │   ├── difradix2.c
    │   │   │   ├── difradix2.h
    │   │   │   ├── fnt.c
    │   │   │   ├── fnt.h
    │   │   │   ├── fourstep.c
    │   │   │   ├── fourstep.h
    │   │   │   ├── io.c
    │   │   │   ├── io.h
    │   │   │   ├── mpalloc.c
    │   │   │   ├── mpalloc.h
    │   │   │   ├── mpdecimal.c
    │   │   │   ├── mpdecimal.h
    │   │   │   ├── mpsignal.c
    │   │   │   ├── numbertheory.c
    │   │   │   ├── numbertheory.h
    │   │   │   ├── sixstep.c
    │   │   │   ├── sixstep.h
    │   │   │   ├── transpose.c
    │   │   │   ├── transpose.h
    │   │   │   ├── typearith.h
    │   │   │   ├── umodarith.h
    │   │   │   ├── vcdiv64.asm
    │   │   │   ├── examples/
    │   │   │   │   ├── README.txt
    │   │   │   │   ├── compare.c
    │   │   │   │   ├── div.c
    │   │   │   │   ├── divmod.c
    │   │   │   │   ├── multiply.c
    │   │   │   │   ├── pow.c
    │   │   │   │   ├── powmod.c
    │   │   │   │   ├── shift.c
    │   │   │   │   └── sqrt.c
    │   │   │   └── literature/
    │   │   │       ├── REFERENCES.txt
    │   │   │       ├── bignum.txt
    │   │   │       ├── fnt.py
    │   │   │       ├── matrix-transform.txt
    │   │   │       ├── mulmod-64.txt
    │   │   │       ├── mulmod-ppro.txt
    │   │   │       ├── six-step.txt
    │   │   │       └── umodarith.lisp
    │   │   ├── tests/
    │   │   │   ├── README.txt
    │   │   │   ├── bench.py
    │   │   │   ├── bignum.py
    │   │   │   ├── deccheck.py
    │   │   │   ├── formathelper.py
    │   │   │   ├── randdec.py
    │   │   │   ├── randfloat.py
    │   │   │   ├── runall-memorydebugger.sh
    │   │   │   └── runall.bat
    │   │   └── windows/
    │   │       └── mpdecimal.h
    │   ├── _hacl/
    │   │   ├── README.md
    │   │   ├── Hacl_Hash_Blake2b.c
    │   │   ├── Hacl_Hash_Blake2b.h
    │   │   ├── Hacl_Hash_Blake2b_Simd256.c
    │   │   ├── Hacl_Hash_Blake2b_Simd256.h
    │   │   ├── Hacl_Hash_Blake2b_Simd256_universal2.c
    │   │   ├── Hacl_Hash_Blake2s.c
    │   │   ├── Hacl_Hash_Blake2s.h
    │   │   ├── Hacl_Hash_Blake2s_Simd128.c
    │   │   ├── Hacl_Hash_Blake2s_Simd128.h
    │   │   ├── Hacl_Hash_Blake2s_Simd128_universal2.c
    │   │   ├── Hacl_Hash_MD5.c
    │   │   ├── Hacl_Hash_MD5.h
    │   │   ├── Hacl_Hash_SHA1.c
    │   │   ├── Hacl_Hash_SHA1.h
    │   │   ├── Hacl_Hash_SHA2.c
    │   │   ├── Hacl_Hash_SHA2.h
    │   │   ├── Hacl_Hash_SHA3.c
    │   │   ├── Hacl_Hash_SHA3.h
    │   │   ├── Hacl_Streaming_Types.h
    │   │   ├── Lib_Memzero0.c
    │   │   ├── lib_memzero0.h
    │   │   ├── libintvector.h
    │   │   ├── python_hacl_namespaces.h
    │   │   ├── refresh.sh
    │   │   ├── include/
    │   │   │   └── krml/
    │   │   │       ├── FStar_UInt128_Verified.h
    │   │   │       ├── FStar_UInt_8_16_32_64.h
    │   │   │       ├── fstar_uint128_struct_endianness.h
    │   │   │       ├── lowstar_endianness.h
    │   │   │       ├── types.h
    │   │   │       └── internal/
    │   │   │           └── target.h
    │   │   └── internal/
    │   │       ├── Hacl_Hash_Blake2b.h
    │   │       ├── Hacl_Hash_Blake2b_Simd256.h
    │   │       ├── Hacl_Hash_Blake2s.h
    │   │       ├── Hacl_Hash_Blake2s_Simd128.h
    │   │       ├── Hacl_Hash_MD5.h
    │   │       ├── Hacl_Hash_SHA1.h
    │   │       ├── Hacl_Hash_SHA2.h
    │   │       ├── Hacl_Hash_SHA3.h
    │   │       └── Hacl_Impl_Blake2_Constants.h
    │   ├── _io/
    │   │   ├── _iomodule.c
    │   │   ├── _iomodule.h
    │   │   ├── bufferedio.c
    │   │   ├── bytesio.c
    │   │   ├── fileio.c
    │   │   ├── iobase.c
    │   │   ├── stringio.c
    │   │   ├── textio.c
    │   │   ├── winconsoleio.c
    │   │   └── clinic/
    │   │       ├── _iomodule.c.h
    │   │       ├── bufferedio.c.h
    │   │       ├── bytesio.c.h
    │   │       ├── fileio.c.h
    │   │       ├── iobase.c.h
    │   │       ├── stringio.c.h
    │   │       ├── textio.c.h
    │   │       └── winconsoleio.c.h
    │   ├── _multiprocessing/
    │   │   ├── multiprocessing.c
    │   │   ├── multiprocessing.h
    │   │   ├── posixshmem.c
    │   │   ├── semaphore.c
    │   │   └── clinic/
    │   │       ├── multiprocessing.c.h
    │   │       ├── posixshmem.c.h
    │   │       └── semaphore.c.h
    │   ├── _sqlite/
    │   │   ├── blob.c
    │   │   ├── blob.h
    │   │   ├── connection.c
    │   │   ├── connection.h
    │   │   ├── cursor.c
    │   │   ├── cursor.h
    │   │   ├── microprotocols.c
    │   │   ├── microprotocols.h
    │   │   ├── module.c
    │   │   ├── module.h
    │   │   ├── prepare_protocol.c
    │   │   ├── prepare_protocol.h
    │   │   ├── row.c
    │   │   ├── row.h
    │   │   ├── statement.c
    │   │   ├── statement.h
    │   │   ├── util.c
    │   │   ├── util.h
    │   │   └── clinic/
    │   │       ├── _sqlite3.connect.c.h
    │   │       ├── blob.c.h
    │   │       ├── connection.c.h
    │   │       ├── cursor.c.h
    │   │       ├── module.c.h
    │   │       └── row.c.h
    │   ├── _sre/
    │   │   ├── sre.c
    │   │   ├── sre.h
    │   │   ├── sre_constants.h
    │   │   ├── sre_lib.h
    │   │   ├── sre_targets.h
    │   │   └── clinic/
    │   │       └── sre.c.h
    │   ├── _ssl/
    │   │   ├── cert.c
    │   │   ├── debughelpers.c
    │   │   ├── misc.c
    │   │   └── clinic/
    │   │       └── cert.c.h
    │   ├── _testcapi/
    │   │   ├── README.txt
    │   │   ├── abstract.c
    │   │   ├── buffer.c
    │   │   ├── bytes.c
    │   │   ├── code.c
    │   │   ├── codec.c
    │   │   ├── complex.c
    │   │   ├── config.c
    │   │   ├── datetime.c
    │   │   ├── dict.c
    │   │   ├── docstring.c
    │   │   ├── exceptions.c
    │   │   ├── file.c
    │   │   ├── float.c
    │   │   ├── gc.c
    │   │   ├── getargs.c
    │   │   ├── hash.c
    │   │   ├── heaptype.c
    │   │   ├── immortal.c
    │   │   ├── list.c
    │   │   ├── long.c
    │   │   ├── mem.c
    │   │   ├── monitoring.c
    │   │   ├── numbers.c
    │   │   ├── object.c
    │   │   ├── parts.h
    │   │   ├── pyatomic.c
    │   │   ├── run.c
    │   │   ├── set.c
    │   │   ├── structmember.c
    │   │   ├── time.c
    │   │   ├── tuple.c
    │   │   ├── unicode.c
    │   │   ├── util.h
    │   │   ├── vectorcall.c
    │   │   ├── watchers.c
    │   │   └── clinic/
    │   │       ├── exceptions.c.h
    │   │       ├── file.c.h
    │   │       ├── float.c.h
    │   │       ├── long.c.h
    │   │       ├── vectorcall.c.h
    │   │       └── watchers.c.h
    │   ├── _testinternalcapi/
    │   │   ├── README.txt
    │   │   ├── parts.h
    │   │   ├── pytime.c
    │   │   ├── set.c
    │   │   ├── test_critical_sections.c
    │   │   ├── test_lock.c
    │   │   └── clinic/
    │   │       └── test_lock.c.h
    │   ├── _testlimitedcapi/
    │   │   ├── abstract.c
    │   │   ├── bytearray.c
    │   │   ├── bytes.c
    │   │   ├── codec.c
    │   │   ├── complex.c
    │   │   ├── dict.c
    │   │   ├── eval.c
    │   │   ├── float.c
    │   │   ├── heaptype_relative.c
    │   │   ├── list.c
    │   │   ├── long.c
    │   │   ├── object.c
    │   │   ├── parts.h
    │   │   ├── pyos.c
    │   │   ├── set.c
    │   │   ├── sys.c
    │   │   ├── testcapi_long.h
    │   │   ├── tuple.c
    │   │   ├── unicode.c
    │   │   ├── util.h
    │   │   ├── vectorcall_limited.c
    │   │   ├── version.c
    │   │   └── clinic/
    │   │       ├── heaptype_relative.c.h
    │   │       ├── long.c.h
    │   │       ├── vectorcall_limited.c.h
    │   │       └── version.c.h
    │   ├── _xxtestfuzz/
    │   │   ├── README.rst
    │   │   ├── _xxtestfuzz.c
    │   │   ├── fuzz_tests.txt
    │   │   ├── fuzzer.c
    │   │   ├── dictionaries/
    │   │   │   ├── fuzz_elementtree_parsewhole.dict
    │   │   │   ├── fuzz_json_loads.dict
    │   │   │   ├── fuzz_pycompile.dict
    │   │   │   └── fuzz_sre_compile.dict
    │   │   ├── fuzz_csv_reader_corpus/
    │   │   │   └── test.csv
    │   │   ├── fuzz_elementtree_parsewhole_corpus/
    │   │   │   ├── c14nComment.xml
    │   │   │   ├── c14nDefault.xml
    │   │   │   ├── c14nPrefix.xml
    │   │   │   ├── c14nPrefixQname.xml
    │   │   │   ├── c14nPrefixQnameXpathElem.xml
    │   │   │   ├── c14nQname.xml
    │   │   │   ├── c14nQnameElem.xml
    │   │   │   ├── c14nQnameXpathElem.xml
    │   │   │   ├── c14nTrim.xml
    │   │   │   ├── expat224_utf8_bug.xml
    │   │   │   ├── inC14N1.xml
    │   │   │   ├── inC14N2.xml
    │   │   │   ├── inC14N3.xml
    │   │   │   ├── inC14N4.xml
    │   │   │   ├── inC14N5.xml
    │   │   │   ├── inC14N6.xml
    │   │   │   ├── inNsContent.xml
    │   │   │   ├── inNsDefault.xml
    │   │   │   ├── inNsPushdown.xml
    │   │   │   ├── inNsRedecl.xml
    │   │   │   ├── inNsSort.xml
    │   │   │   ├── inNsSuperfluous.xml
    │   │   │   ├── inNsXml.xml
    │   │   │   ├── out_inC14N1_c14nComment.xml
    │   │   │   ├── out_inC14N1_c14nDefault.xml
    │   │   │   ├── out_inC14N2_c14nDefault.xml
    │   │   │   ├── out_inC14N2_c14nTrim.xml
    │   │   │   ├── out_inC14N3_c14nDefault.xml
    │   │   │   ├── out_inC14N3_c14nPrefix.xml
    │   │   │   ├── out_inC14N3_c14nTrim.xml
    │   │   │   ├── out_inC14N4_c14nDefault.xml
    │   │   │   ├── out_inC14N4_c14nTrim.xml
    │   │   │   ├── out_inC14N5_c14nDefault.xml
    │   │   │   ├── out_inC14N5_c14nTrim.xml
    │   │   │   ├── out_inC14N6_c14nDefault.xml
    │   │   │   ├── out_inNsContent_c14nDefault.xml
    │   │   │   ├── out_inNsContent_c14nPrefixQnameXpathElem.xml
    │   │   │   ├── out_inNsContent_c14nQnameElem.xml
    │   │   │   ├── out_inNsContent_c14nQnameXpathElem.xml
    │   │   │   ├── out_inNsDefault_c14nDefault.xml
    │   │   │   ├── out_inNsDefault_c14nPrefix.xml
    │   │   │   ├── out_inNsPushdown_c14nDefault.xml
    │   │   │   ├── out_inNsPushdown_c14nPrefix.xml
    │   │   │   ├── out_inNsRedecl_c14nDefault.xml
    │   │   │   ├── out_inNsRedecl_c14nPrefix.xml
    │   │   │   ├── out_inNsSort_c14nDefault.xml
    │   │   │   ├── out_inNsSort_c14nPrefix.xml
    │   │   │   ├── out_inNsSuperfluous_c14nDefault.xml
    │   │   │   ├── out_inNsSuperfluous_c14nPrefix.xml
    │   │   │   ├── out_inNsXml_c14nDefault.xml
    │   │   │   ├── out_inNsXml_c14nPrefix.xml
    │   │   │   ├── out_inNsXml_c14nPrefixQname.xml
    │   │   │   ├── out_inNsXml_c14nQname.xml
    │   │   │   ├── simple-ns.xml
    │   │   │   ├── simple.xml
    │   │   │   └── test.xml
    │   │   ├── fuzz_json_loads_corpus/
    │   │   │   ├── empty_array.json
    │   │   │   ├── empty_object.json
    │   │   │   ├── pass1.json
    │   │   │   ├── pass2.json
    │   │   │   ├── pass3.json
    │   │   │   └── simple_array.json
    │   │   ├── fuzz_pycompile_corpus/
    │   │   │   ├── input1.py
    │   │   │   ├── input2.py
    │   │   │   ├── input3.py
    │   │   │   ├── input4.py
    │   │   │   ├── input5.py
    │   │   │   └── input6.py
    │   │   ├── fuzz_sre_compile_corpus/
    │   │   │   ├── anchor_links
    │   │   │   ├── characters
    │   │   │   ├── isbn
    │   │   │   └── phone_number
    │   │   └── fuzz_struct_unpack_corpus/
    │   │       ├── hello_string
    │   │       ├── long_zero
    │   │       └── varied_format_string
    │   ├── cjkcodecs/
    │   │   ├── README
    │   │   ├── _codecs_cn.c
    │   │   ├── _codecs_hk.c
    │   │   ├── _codecs_iso2022.c
    │   │   ├── _codecs_jp.c
    │   │   ├── _codecs_kr.c
    │   │   ├── _codecs_tw.c
    │   │   ├── alg_jisx0201.h
    │   │   ├── cjkcodecs.h
    │   │   ├── emu_jisx0213_2000.h
    │   │   ├── mappings_cn.h
    │   │   ├── mappings_hk.h
    │   │   ├── mappings_jisx0213_pair.h
    │   │   ├── mappings_jp.h
    │   │   ├── mappings_kr.h
    │   │   ├── mappings_tw.h
    │   │   ├── multibytecodec.c
    │   │   ├── multibytecodec.h
    │   │   └── clinic/
    │   │       └── multibytecodec.c.h
    │   ├── clinic/
    │   │   ├── _abc.c.h
    │   │   ├── _asynciomodule.c.h
    │   │   ├── _bisectmodule.c.h
    │   │   ├── _bz2module.c.h
    │   │   ├── _codecsmodule.c.h
    │   │   ├── _collectionsmodule.c.h
    │   │   ├── _contextvarsmodule.c.h
    │   │   ├── _csv.c.h
    │   │   ├── _curses_panel.c.h
    │   │   ├── _cursesmodule.c.h
    │   │   ├── _datetimemodule.c.h
    │   │   ├── _dbmmodule.c.h
    │   │   ├── _elementtree.c.h
    │   │   ├── _functoolsmodule.c.h
    │   │   ├── _gdbmmodule.c.h
    │   │   ├── _hashopenssl.c.h
    │   │   ├── _heapqmodule.c.h
    │   │   ├── _localemodule.c.h
    │   │   ├── _lsprof.c.h
    │   │   ├── _lzmamodule.c.h
    │   │   ├── _opcode.c.h
    │   │   ├── _operator.c.h
    │   │   ├── _pickle.c.h
    │   │   ├── _posixsubprocess.c.h
    │   │   ├── _queuemodule.c.h
    │   │   ├── _randommodule.c.h
    │   │   ├── _ssl.c.h
    │   │   ├── _statisticsmodule.c.h
    │   │   ├── _struct.c.h
    │   │   ├── _suggestions.c.h
    │   │   ├── _sysconfig.c.h
    │   │   ├── _testclinic.c.h
    │   │   ├── _testclinic_depr.c.h
    │   │   ├── _testclinic_limited.c.h
    │   │   ├── _testinternalcapi.c.h
    │   │   ├── _testmultiphase.c.h
    │   │   ├── _threadmodule.c.h
    │   │   ├── _tkinter.c.h
    │   │   ├── _tracemalloc.c.h
    │   │   ├── _typingmodule.c.h
    │   │   ├── _weakref.c.h
    │   │   ├── _winapi.c.h
    │   │   ├── _zoneinfo.c.h
    │   │   ├── arraymodule.c.h
    │   │   ├── binascii.c.h
    │   │   ├── blake2module.c.h
    │   │   ├── cmathmodule.c.h
    │   │   ├── fcntlmodule.c.h
    │   │   ├── gcmodule.c.h
    │   │   ├── grpmodule.c.h
    │   │   ├── itertoolsmodule.c.h
    │   │   ├── mathmodule.c.h
    │   │   ├── md5module.c.h
    │   │   ├── overlapped.c.h
    │   │   ├── posixmodule.c.h
    │   │   ├── pwdmodule.c.h
    │   │   ├── pyexpat.c.h
    │   │   ├── readline.c.h
    │   │   ├── resource.c.h
    │   │   ├── selectmodule.c.h
    │   │   ├── sha1module.c.h
    │   │   ├── sha2module.c.h
    │   │   ├── sha3module.c.h
    │   │   ├── signalmodule.c.h
    │   │   ├── socketmodule.c.h
    │   │   ├── symtablemodule.c.h
    │   │   ├── syslogmodule.c.h
    │   │   ├── termios.c.h
    │   │   ├── timemodule.c.h
    │   │   ├── unicodedata.c.h
    │   │   └── zlibmodule.c.h
    │   └── expat/
    │       ├── COPYING
    │       ├── ascii.h
    │       ├── asciitab.h
    │       ├── expat.h
    │       ├── expat_config.h
    │       ├── expat_external.h
    │       ├── iasciitab.h
    │       ├── internal.h
    │       ├── latin1tab.h
    │       ├── nametab.h
    │       ├── pyexpatns.h
    │       ├── refresh.sh
    │       ├── siphash.h
    │       ├── utf8tab.h
    │       ├── winconfig.h
    │       ├── xmlparse.c
    │       ├── xmlrole.c
    │       ├── xmlrole.h
    │       ├── xmltok.c
    │       ├── xmltok.h
    │       ├── xmltok_impl.c
    │       ├── xmltok_impl.h
    │       └── xmltok_ns.c
    ├── Objects/
    │   ├── README
    │   ├── abstract.c
    │   ├── boolobject.c
    │   ├── bytearrayobject.c
    │   ├── bytes_methods.c
    │   ├── bytesobject.c
    │   ├── call.c
    │   ├── capsule.c
    │   ├── cellobject.c
    │   ├── classobject.c
    │   ├── codeobject.c
    │   ├── complexobject.c
    │   ├── descrobject.c
    │   ├── dictnotes.txt
    │   ├── dictobject.c
    │   ├── enumobject.c
    │   ├── exceptions.c
    │   ├── fileobject.c
    │   ├── floatobject.c
    │   ├── frameobject.c
    │   ├── funcobject.c
    │   ├── genericaliasobject.c
    │   ├── genobject.c
    │   ├── iterobject.c
    │   ├── listobject.c
    │   ├── listsort.txt
    │   ├── lnotab_notes.txt
    │   ├── longobject.c
    │   ├── memoryobject.c
    │   ├── methodobject.c
    │   ├── moduleobject.c
    │   ├── namespaceobject.c
    │   ├── object.c
    │   ├── object_layout.md
    │   ├── object_layout_312.gv
    │   ├── object_layout_313.gv
    │   ├── object_layout_full_312.gv
    │   ├── object_layout_full_313.gv
    │   ├── obmalloc.c
    │   ├── odictobject.c
    │   ├── picklebufobject.c
    │   ├── rangeobject.c
    │   ├── setobject.c
    │   ├── sliceobject.c
    │   ├── structseq.c
    │   ├── tupleobject.c
    │   ├── typeobject.c
    │   ├── typeslots.inc
    │   ├── typeslots.py
    │   ├── typevarobject.c
    │   ├── unicodectype.c
    │   ├── unicodeobject.c
    │   ├── unicodetype_db.h
    │   ├── unionobject.c
    │   ├── weakrefobject.c
    │   ├── clinic/
    │   │   ├── bytearrayobject.c.h
    │   │   ├── bytesobject.c.h
    │   │   ├── classobject.c.h
    │   │   ├── codeobject.c.h
    │   │   ├── complexobject.c.h
    │   │   ├── descrobject.c.h
    │   │   ├── dictobject.c.h
    │   │   ├── enumobject.c.h
    │   │   ├── floatobject.c.h
    │   │   ├── funcobject.c.h
    │   │   ├── listobject.c.h
    │   │   ├── longobject.c.h
    │   │   ├── memoryobject.c.h
    │   │   ├── moduleobject.c.h
    │   │   ├── odictobject.c.h
    │   │   ├── setobject.c.h
    │   │   ├── structseq.c.h
    │   │   ├── tupleobject.c.h
    │   │   ├── typeobject.c.h
    │   │   ├── typevarobject.c.h
    │   │   └── unicodeobject.c.h
    │   ├── mimalloc/
    │   │   ├── alloc-aligned.c
    │   │   ├── alloc-override.c
    │   │   ├── alloc-posix.c
    │   │   ├── alloc.c
    │   │   ├── arena.c
    │   │   ├── bitmap.c
    │   │   ├── bitmap.h
    │   │   ├── heap.c
    │   │   ├── init.c
    │   │   ├── options.c
    │   │   ├── os.c
    │   │   ├── page-queue.c
    │   │   ├── page.c
    │   │   ├── random.c
    │   │   ├── segment-map.c
    │   │   ├── segment.c
    │   │   ├── static.c
    │   │   ├── stats.c
    │   │   └── prim/
    │   │       ├── readme.md
    │   │       ├── prim.c
    │   │       ├── osx/
    │   │       │   ├── alloc-override-zone.c
    │   │       │   └── prim.c
    │   │       ├── unix/
    │   │       │   └── prim.c
    │   │       ├── wasi/
    │   │       │   └── prim.c
    │   │       └── windows/
    │   │           ├── readme.md
    │   │           ├── etw-mimalloc.wprp
    │   │           ├── etw.h
    │   │           ├── etw.man
    │   │           └── prim.c
    │   └── stringlib/
    │       ├── README.txt
    │       ├── asciilib.h
    │       ├── codecs.h
    │       ├── count.h
    │       ├── ctype.h
    │       ├── eq.h
    │       ├── fastsearch.h
    │       ├── find.h
    │       ├── find_max_char.h
    │       ├── join.h
    │       ├── localeutil.h
    │       ├── partition.h
    │       ├── replace.h
    │       ├── repr.h
    │       ├── split.h
    │       ├── stringdefs.h
    │       ├── stringlib_find_two_way_notes.txt
    │       ├── transmogrify.h
    │       ├── ucs1lib.h
    │       ├── ucs2lib.h
    │       ├── ucs4lib.h
    │       ├── undef.h
    │       ├── unicode_format.h
    │       └── clinic/
    │           └── transmogrify.h.h
    ├── PC/
    │   ├── WinMain.c
    │   ├── _testconsole.c
    │   ├── _wmimodule.cpp
    │   ├── classicAppCompat.can.xml
    │   ├── classicAppCompat.cat
    │   ├── classicAppCompat.sccd
    │   ├── config.c
    │   ├── config_minimal.c
    │   ├── crtlicense.txt
    │   ├── dl_nt.c
    │   ├── errmap.h
    │   ├── frozen_dllmain.c
    │   ├── invalid_parameter_handler.c
    │   ├── launcher-usage.txt
    │   ├── launcher.c
    │   ├── launcher2.c
    │   ├── msvcrtmodule.c
    │   ├── pyconfig.h.in
    │   ├── pylauncher.rc
    │   ├── pyshellext.cpp
    │   ├── pyshellext.def
    │   ├── pyshellext.rc
    │   ├── python.manifest
    │   ├── python3dll.c
    │   ├── python_exe.rc
    │   ├── python_nt.rc
    │   ├── python_uwp.cpp
    │   ├── python_ver_rc.h
    │   ├── pythonw_exe.rc
    │   ├── readme.txt
    │   ├── sqlite3.rc
    │   ├── store_info.txt
    │   ├── validate_ucrtbase.py
    │   ├── venvlauncher.c
    │   ├── winreg.c
    │   ├── winsound.c
    │   ├── clinic/
    │   │   ├── _testconsole.c.h
    │   │   ├── _wmimodule.cpp.h
    │   │   ├── msvcrtmodule.c.h
    │   │   ├── winreg.c.h
    │   │   └── winsound.c.h
    │   ├── icons/
    │   │   ├── launcher.icns
    │   │   ├── py.icns
    │   │   ├── pyc.icns
    │   │   ├── pyd.icns
    │   │   ├── python.icns
    │   │   ├── pythonw.icns
    │   │   └── setup.icns
    │   └── layout/
    │       ├── __init__.py
    │       ├── __main__.py
    │       ├── main.py
    │       └── support/
    │           ├── __init__.py
    │           ├── appxmanifest.py
    │           ├── catalog.py
    │           ├── constants.py
    │           ├── filesets.py
    │           ├── logging.py
    │           ├── nuspec.py
    │           ├── options.py
    │           ├── pip.py
    │           ├── props.py
    │           └── python.props
    ├── PCbuild/
    │   ├── Directory.Build.props
    │   ├── Directory.Build.targets
    │   ├── _asyncio.vcxproj
    │   ├── _asyncio.vcxproj.filters
    │   ├── _bz2.vcxproj
    │   ├── _bz2.vcxproj.filters
    │   ├── _ctypes.vcxproj
    │   ├── _ctypes.vcxproj.filters
    │   ├── _ctypes_test.vcxproj
    │   ├── _ctypes_test.vcxproj.filters
    │   ├── _decimal.vcxproj
    │   ├── _decimal.vcxproj.filters
    │   ├── _elementtree.vcxproj
    │   ├── _elementtree.vcxproj.filters
    │   ├── _freeze_module.vcxproj
    │   ├── _freeze_module.vcxproj.filters
    │   ├── _hashlib.vcxproj
    │   ├── _hashlib.vcxproj.filters
    │   ├── _lzma.vcxproj
    │   ├── _lzma.vcxproj.filters
    │   ├── _multiprocessing.vcxproj
    │   ├── _multiprocessing.vcxproj.filters
    │   ├── _overlapped.vcxproj
    │   ├── _overlapped.vcxproj.filters
    │   ├── _queue.vcxproj
    │   ├── _queue.vcxproj.filters
    │   ├── _socket.vcxproj
    │   ├── _socket.vcxproj.filters
    │   ├── _sqlite3.vcxproj
    │   ├── _sqlite3.vcxproj.filters
    │   ├── _ssl.vcxproj
    │   ├── _ssl.vcxproj.filters
    │   ├── _testbuffer.vcxproj
    │   ├── _testbuffer.vcxproj.filters
    │   ├── _testcapi.vcxproj
    │   ├── _testcapi.vcxproj.filters
    │   ├── _testclinic.vcxproj
    │   ├── _testclinic.vcxproj.filters
    │   ├── _testclinic_limited.vcxproj
    │   ├── _testclinic_limited.vcxproj.filters
    │   ├── _testconsole.vcxproj
    │   ├── _testconsole.vcxproj.filters
    │   ├── _testembed.vcxproj
    │   ├── _testembed.vcxproj.filters
    │   ├── _testimportmultiple.vcxproj
    │   ├── _testimportmultiple.vcxproj.filters
    │   ├── _testinternalcapi.vcxproj
    │   ├── _testinternalcapi.vcxproj.filters
    │   ├── _testlimitedcapi.vcxproj
    │   ├── _testlimitedcapi.vcxproj.filters
    │   ├── _testmultiphase.vcxproj
    │   ├── _testmultiphase.vcxproj.filters
    │   ├── _testsinglephase.vcxproj
    │   ├── _testsinglephase.vcxproj.filters
    │   ├── _tkinter.vcxproj
    │   ├── _tkinter.vcxproj.filters
    │   ├── _uuid.vcxproj
    │   ├── _uuid.vcxproj.filters
    │   ├── _wmi.vcxproj
    │   ├── _wmi.vcxproj.filters
    │   ├── _zoneinfo.vcxproj
    │   ├── _zoneinfo.vcxproj.filters
    │   ├── blurb.bat
    │   ├── build.bat
    │   ├── build_env.bat
    │   ├── clean.bat
    │   ├── env.bat
    │   ├── env.ps1
    │   ├── field3.py
    │   ├── find_msbuild.bat
    │   ├── find_python.bat
    │   ├── fix_encoding.py
    │   ├── get_external.py
    │   ├── get_externals.bat
    │   ├── idle.bat
    │   ├── libffi.props
    │   ├── liblzma.vcxproj
    │   ├── liblzma.vcxproj.filters
    │   ├── openssl.props
    │   ├── openssl.vcxproj
    │   ├── pcbuild.proj
    │   ├── pcbuild.sln
    │   ├── prepare_libffi.bat
    │   ├── prepare_ssl.bat
    │   ├── prepare_ssl.py
    │   ├── prepare_tcltk.bat
    │   ├── pyexpat.vcxproj
    │   ├── pyexpat.vcxproj.filters
    │   ├── pylauncher.vcxproj
    │   ├── pylauncher.vcxproj.filters
    │   ├── pyproject.props
    │   ├── pyshellext.vcxproj
    │   ├── pyshellext.vcxproj.filters
    │   ├── python.props
    │   ├── python.vcxproj
    │   ├── python.vcxproj.filters
    │   ├── python3dll.vcxproj
    │   ├── python3dll.vcxproj.filters
    │   ├── python_uwp.vcxproj
    │   ├── python_uwp.vcxproj.filters
    │   ├── pythoncore.vcxproj
    │   ├── pythoncore.vcxproj.filters
    │   ├── pythonw.vcxproj
    │   ├── pythonw.vcxproj.filters
    │   ├── pythonw_uwp.vcxproj
    │   ├── pythonw_uwp.vcxproj.filters
    │   ├── pywlauncher.vcxproj
    │   ├── pywlauncher.vcxproj.filters
    │   ├── readme.txt
    │   ├── regen.targets
    │   ├── rmpyc.py
    │   ├── rt.bat
    │   ├── select.vcxproj
    │   ├── select.vcxproj.filters
    │   ├── sqlite3.vcxproj
    │   ├── sqlite3.vcxproj.filters
    │   ├── tcl.vcxproj
    │   ├── tcltk.props
    │   ├── tk.vcxproj
    │   ├── unicodedata.vcxproj
    │   ├── unicodedata.vcxproj.filters
    │   ├── urlretrieve.py
    │   ├── venvlauncher.vcxproj
    │   ├── venvlauncher.vcxproj.filters
    │   ├── venvwlauncher.vcxproj
    │   ├── venvwlauncher.vcxproj.filters
    │   ├── winsound.vcxproj
    │   ├── winsound.vcxproj.filters
    │   ├── xxlimited.vcxproj
    │   ├── xxlimited.vcxproj.filters
    │   ├── xxlimited_35.vcxproj
    │   └── xxlimited_35.vcxproj.filters
    ├── Parser/
    │   ├── Python.asdl
    │   ├── action_helpers.c
    │   ├── asdl.py
    │   ├── asdl_c.py
    │   ├── myreadline.c
    │   ├── parser.c
    │   ├── peg_api.c
    │   ├── pegen.c
    │   ├── pegen.h
    │   ├── pegen_errors.c
    │   ├── string_parser.c
    │   ├── string_parser.h
    │   ├── token.c
    │   ├── lexer/
    │   │   ├── buffer.c
    │   │   ├── buffer.h
    │   │   ├── lexer.c
    │   │   ├── lexer.h
    │   │   ├── state.c
    │   │   └── state.h
    │   └── tokenizer/
    │       ├── file_tokenizer.c
    │       ├── helpers.c
    │       ├── helpers.h
    │       ├── readline_tokenizer.c
    │       ├── string_tokenizer.c
    │       ├── tokenizer.h
    │       └── utf8_tokenizer.c
    ├── Programs/
    │   ├── README
    │   ├── _bootstrap_python.c
    │   ├── _freeze_module.c
    │   ├── _freeze_module.py
    │   ├── _testembed.c
    │   ├── freeze_test_frozenmain.py
    │   ├── python.c
    │   ├── test_frozenmain.h
    │   └── test_frozenmain.py
    ├── Python/
    │   ├── Python-ast.c
    │   ├── Python-tokenize.c
    │   ├── README
    │   ├── _warnings.c
    │   ├── asdl.c
    │   ├── asm_trampoline.S
    │   ├── assemble.c
    │   ├── ast.c
    │   ├── ast_opt.c
    │   ├── ast_unparse.c
    │   ├── bltinmodule.c
    │   ├── bootstrap_hash.c
    │   ├── brc.c
    │   ├── bytecodes.c
    │   ├── ceval.c
    │   ├── ceval_gil.c
    │   ├── ceval_macros.h
    │   ├── codecs.c
    │   ├── codegen.c
    │   ├── compile.c
    │   ├── condvar.h
    │   ├── config_common.h
    │   ├── context.c
    │   ├── critical_section.c
    │   ├── crossinterp.c
    │   ├── crossinterp_data_lookup.h
    │   ├── crossinterp_exceptions.h
    │   ├── dtoa.c
    │   ├── dup2.c
    │   ├── dynamic_annotations.c
    │   ├── dynload_hpux.c
    │   ├── dynload_shlib.c
    │   ├── dynload_stub.c
    │   ├── dynload_win.c
    │   ├── emscripten_signal.c
    │   ├── emscripten_trampoline.c
    │   ├── errors.c
    │   ├── executor_cases.c.h
    │   ├── fileutils.c
    │   ├── flowgraph.c
    │   ├── formatter_unicode.c
    │   ├── frame.c
    │   ├── frozen.c
    │   ├── frozenmain.c
    │   ├── future.c
    │   ├── gc.c
    │   ├── gc_free_threading.c
    │   ├── gc_gil.c
    │   ├── generated_cases.c.h
    │   ├── getargs.c
    │   ├── getcompiler.c
    │   ├── getcopyright.c
    │   ├── getopt.c
    │   ├── getplatform.c
    │   ├── getversion.c
    │   ├── hamt.c
    │   ├── hashtable.c
    │   ├── import.c
    │   ├── importdl.c
    │   ├── index_pool.c
    │   ├── initconfig.c
    │   ├── instruction_sequence.c
    │   ├── instrumentation.c
    │   ├── interpconfig.c
    │   ├── intrinsics.c
    │   ├── jit.c
    │   ├── legacy_tracing.c
    │   ├── lock.c
    │   ├── marshal.c
    │   ├── modsupport.c
    │   ├── mysnprintf.c
    │   ├── mystrtoul.c
    │   ├── object_stack.c
    │   ├── opcode_targets.h
    │   ├── optimizer.c
    │   ├── optimizer_analysis.c
    │   ├── optimizer_bytecodes.c
    │   ├── optimizer_cases.c.h
    │   ├── optimizer_symbols.c
    │   ├── parking_lot.c
    │   ├── pathconfig.c
    │   ├── perf_jit_trampoline.c
    │   ├── perf_trampoline.c
    │   ├── preconfig.c
    │   ├── pyarena.c
    │   ├── pyctype.c
    │   ├── pyfpe.c
    │   ├── pyhash.c
    │   ├── pylifecycle.c
    │   ├── pymath.c
    │   ├── pystate.c
    │   ├── pystrcmp.c
    │   ├── pystrhex.c
    │   ├── pystrtod.c
    │   ├── pythonrun.c
    │   ├── pytime.c
    │   ├── qsbr.c
    │   ├── specialize.c
    │   ├── stackrefs.c
    │   ├── stdlib_module_names.h
    │   ├── structmember.c
    │   ├── suggestions.c
    │   ├── symtable.c
    │   ├── sysmodule.c
    │   ├── thread.c
    │   ├── thread_nt.h
    │   ├── thread_pthread.h
    │   ├── thread_pthread_stubs.h
    │   ├── tier2_engine.md
    │   ├── traceback.c
    │   ├── tracemalloc.c
    │   ├── uniqueid.c
    │   ├── vm-state.md
    │   ├── clinic/
    │   │   ├── Python-tokenize.c.h
    │   │   ├── _warnings.c.h
    │   │   ├── bltinmodule.c.h
    │   │   ├── context.c.h
    │   │   ├── import.c.h
    │   │   ├── instruction_sequence.c.h
    │   │   ├── instrumentation.c.h
    │   │   ├── marshal.c.h
    │   │   ├── sysmodule.c.h
    │   │   └── traceback.c.h
    │   └── frozen_modules/
    │       └── README.txt
    ├── Tools/
    │   ├── README
    │   ├── requirements-dev.txt
    │   ├── requirements-hypothesis.txt
    │   ├── build/
    │   │   ├── check_extension_modules.py
    │   │   ├── check_warnings.py
    │   │   ├── deepfreeze.py
    │   │   ├── freeze_modules.py
    │   │   ├── generate_global_objects.py
    │   │   ├── generate_levenshtein_examples.py
    │   │   ├── generate_re_casefix.py
    │   │   ├── generate_sbom.py
    │   │   ├── generate_sre_constants.py
    │   │   ├── generate_stdlib_module_names.py
    │   │   ├── generate_token.py
    │   │   ├── mypy.ini
    │   │   ├── parse_html5_entities.py
    │   │   ├── regen-configure.sh
    │   │   ├── smelly.py
    │   │   ├── stable_abi.py
    │   │   ├── umarshal.py
    │   │   ├── update_file.py
    │   │   ├── verify_ensurepip_wheels.py
    │   │   ├── .ruff.toml
    │   │   ├── .warningignore_macos
    │   │   └── .warningignore_ubuntu
    │   ├── buildbot/
    │   │   ├── build.bat
    │   │   ├── buildmsi.bat
    │   │   ├── clean.bat
    │   │   ├── remoteDeploy.bat
    │   │   ├── remotePythonInfo.bat
    │   │   └── test.bat
    │   ├── c-analyzer/
    │   │   ├── README
    │   │   ├── TODO
    │   │   ├── c-analyzer.py
    │   │   ├── check-c-globals.py
    │   │   ├── must-resolve.sh
    │   │   ├── table-file.py
    │   │   ├── c_analyzer/
    │   │   │   ├── __init__.py
    │   │   │   ├── __main__.py
    │   │   │   ├── analyze.py
    │   │   │   ├── datafiles.py
    │   │   │   ├── info.py
    │   │   │   └── match.py
    │   │   ├── c_common/
    │   │   │   ├── __init__.py
    │   │   │   ├── clsutil.py
    │   │   │   ├── fsutil.py
    │   │   │   ├── iterutil.py
    │   │   │   ├── logging.py
    │   │   │   ├── misc.py
    │   │   │   ├── scriptutil.py
    │   │   │   ├── strutil.py
    │   │   │   └── tables.py
    │   │   ├── c_parser/
    │   │   │   ├── __init__.py
    │   │   │   ├── __main__.py
    │   │   │   ├── datafiles.py
    │   │   │   ├── info.py
    │   │   │   ├── match.py
    │   │   │   ├── source.py
    │   │   │   ├── parser/
    │   │   │   │   ├── __init__.py
    │   │   │   │   ├── _common.py
    │   │   │   │   ├── _compound_decl_body.py
    │   │   │   │   ├── _func_body.py
    │   │   │   │   ├── _global.py
    │   │   │   │   ├── _info.py
    │   │   │   │   └── _regexes.py
    │   │   │   └── preprocessor/
    │   │   │       ├── __init__.py
    │   │   │       ├── __main__.py
    │   │   │       ├── common.py
    │   │   │       ├── errors.py
    │   │   │       ├── gcc.py
    │   │   │       └── pure.py
    │   │   ├── cpython/
    │   │   │   ├── __init__.py
    │   │   │   ├── __main__.py
    │   │   │   ├── _analyzer.py
    │   │   │   ├── _builtin_types.py
    │   │   │   ├── _capi.py
    │   │   │   ├── _files.py
    │   │   │   ├── _parser.py
    │   │   │   ├── globals-to-fix.tsv
    │   │   │   ├── ignored.tsv
    │   │   │   └── known.tsv
    │   │   └── distutils/
    │   │       ├── README
    │   │       ├── __init__.py
    │   │       ├── _msvccompiler.py
    │   │       ├── bcppcompiler.py
    │   │       ├── ccompiler.py
    │   │       ├── cygwinccompiler.py
    │   │       ├── debug.py
    │   │       ├── dep_util.py
    │   │       ├── errors.py
    │   │       ├── log.py
    │   │       ├── msvc9compiler.py
    │   │       ├── msvccompiler.py
    │   │       ├── spawn.py
    │   │       ├── unixccompiler.py
    │   │       └── util.py
    │   ├── cases_generator/
    │   │   ├── README.md
    │   │   ├── _typing_backports.py
    │   │   ├── analyzer.py
    │   │   ├── cwriter.py
    │   │   ├── generators_common.py
    │   │   ├── interpreter_definition.md
    │   │   ├── lexer.py
    │   │   ├── mypy.ini
    │   │   ├── opcode_id_generator.py
    │   │   ├── opcode_metadata_generator.py
    │   │   ├── optimizer_generator.py
    │   │   ├── parser.py
    │   │   ├── parsing.py
    │   │   ├── plexer.py
    │   │   ├── py_metadata_generator.py
    │   │   ├── stack.py
    │   │   ├── target_generator.py
    │   │   ├── tier1_generator.py
    │   │   ├── tier2_generator.py
    │   │   ├── uop_id_generator.py
    │   │   └── uop_metadata_generator.py
    │   ├── clinic/
    │   │   ├── clinic.py
    │   │   ├── mypy.ini
    │   │   ├── .ruff.toml
    │   │   └── libclinic/
    │   │       ├── __init__.py
    │   │       ├── app.py
    │   │       ├── block_parser.py
    │   │       ├── clanguage.py
    │   │       ├── cli.py
    │   │       ├── codegen.py
    │   │       ├── converter.py
    │   │       ├── converters.py
    │   │       ├── cpp.py
    │   │       ├── dsl_parser.py
    │   │       ├── errors.py
    │   │       ├── formatting.py
    │   │       ├── function.py
    │   │       ├── identifiers.py
    │   │       ├── language.py
    │   │       ├── parse_args.py
    │   │       ├── parser.py
    │   │       ├── return_converters.py
    │   │       └── utils.py
    │   ├── freeze/
    │   │   ├── README
    │   │   ├── bkfile.py
    │   │   ├── checkextensions.py
    │   │   ├── checkextensions_win32.py
    │   │   ├── extensions_win32.ini
    │   │   ├── flag.py
    │   │   ├── freeze.py
    │   │   ├── hello.py
    │   │   ├── makeconfig.py
    │   │   ├── makefreeze.py
    │   │   ├── makemakefile.py
    │   │   ├── parsesetup.py
    │   │   ├── regen_frozen.py
    │   │   ├── win32.html
    │   │   ├── winmakemakefile.py
    │   │   └── test/
    │   │       ├── Makefile
    │   │       ├── freeze.py
    │   │       └── ok.py
    │   ├── ftscalingbench/
    │   │   └── ftscalingbench.py
    │   ├── gdb/
    │   │   └── libpython.py
    │   ├── i18n/
    │   │   ├── makelocalealias.py
    │   │   ├── msgfmt.py
    │   │   └── pygettext.py
    │   ├── importbench/
    │   │   ├── README
    │   │   └── importbench.py
    │   ├── jit/
    │   │   ├── README.md
    │   │   ├── _llvm.py
    │   │   ├── _schema.py
    │   │   ├── _stencils.py
    │   │   ├── _targets.py
    │   │   ├── _writer.py
    │   │   ├── build.py
    │   │   ├── jit.h
    │   │   ├── mypy.ini
    │   │   ├── shim.c
    │   │   └── template.c
    │   ├── lockbench/
    │   │   └── lockbench.py
    │   ├── msi/
    │   │   ├── README.txt
    │   │   ├── build.bat
    │   │   ├── buildrelease.bat
    │   │   ├── common.wxs
    │   │   ├── common_en-US.wxl_template
    │   │   ├── csv_to_wxs.py
    │   │   ├── generate_md5.py
    │   │   ├── get_externals.bat
    │   │   ├── make_appx.ps1
    │   │   ├── make_cat.ps1
    │   │   ├── make_zip.proj
    │   │   ├── msi.props
    │   │   ├── msi.targets
    │   │   ├── purge.py
    │   │   ├── sdktools.psm1
    │   │   ├── sign_build.ps1
    │   │   ├── testrelease.bat
    │   │   ├── uploadrelease.bat
    │   │   ├── uploadrelease.proj
    │   │   ├── uploadrelease.ps1
    │   │   ├── wix.props
    │   │   ├── appendpath/
    │   │   │   ├── appendpath.wixproj
    │   │   │   ├── appendpath.wxs
    │   │   │   └── appendpath_en-US.wxl
    │   │   ├── bundle/
    │   │   │   ├── Default.ARM64.xsl
    │   │   │   ├── Default.thm
    │   │   │   ├── Default.wxl
    │   │   │   ├── bundle.targets
    │   │   │   ├── bundle.wxl
    │   │   │   ├── bundle.wxs
    │   │   │   ├── full.wixproj
    │   │   │   ├── releaselocal.wixproj
    │   │   │   ├── releaseweb.wixproj
    │   │   │   ├── snapshot.wixproj
    │   │   │   ├── bootstrap/
    │   │   │   │   ├── LICENSE.txt
    │   │   │   │   ├── PythonBootstrapperApplication.cpp
    │   │   │   │   ├── pch.cpp
    │   │   │   │   ├── pch.h
    │   │   │   │   ├── pythonba.cpp
    │   │   │   │   ├── pythonba.def
    │   │   │   │   ├── pythonba.sln
    │   │   │   │   ├── pythonba.vcxproj
    │   │   │   │   └── resource.h
    │   │   │   └── packagegroups/
    │   │   │       ├── core.wxs
    │   │   │       ├── crt.wxs
    │   │   │       ├── dev.wxs
    │   │   │       ├── doc.wxs
    │   │   │       ├── exe.wxs
    │   │   │       ├── freethreaded.wxs
    │   │   │       ├── launcher.wxs
    │   │   │       ├── lib.wxs
    │   │   │       ├── packageinstall.wxs
    │   │   │       ├── pip.wxs
    │   │   │       ├── postinstall.wxs
    │   │   │       ├── tcltk.wxs
    │   │   │       └── test.wxs
    │   │   ├── core/
    │   │   │   ├── core.wixproj
    │   │   │   ├── core.wxs
    │   │   │   ├── core_d.wixproj
    │   │   │   ├── core_d.wxs
    │   │   │   ├── core_en-US.wxl
    │   │   │   ├── core_files.wxs
    │   │   │   ├── core_pdb.wixproj
    │   │   │   └── core_pdb.wxs
    │   │   ├── dev/
    │   │   │   ├── dev.wixproj
    │   │   │   ├── dev.wxs
    │   │   │   ├── dev_d.wixproj
    │   │   │   ├── dev_d.wxs
    │   │   │   ├── dev_en-US.wxl
    │   │   │   └── dev_files.wxs
    │   │   ├── doc/
    │   │   │   ├── doc.wixproj
    │   │   │   ├── doc.wxs
    │   │   │   └── doc_en-US.wxl_template
    │   │   ├── exe/
    │   │   │   ├── exe.wixproj
    │   │   │   ├── exe.wxs
    │   │   │   ├── exe_d.wixproj
    │   │   │   ├── exe_d.wxs
    │   │   │   ├── exe_en-US.wxl_template
    │   │   │   ├── exe_files.wxs
    │   │   │   ├── exe_pdb.wixproj
    │   │   │   ├── exe_pdb.wxs
    │   │   │   └── exe_reg.wxs
    │   │   ├── freethreaded/
    │   │   │   ├── freethreaded.wixproj
    │   │   │   ├── freethreaded.wxs
    │   │   │   ├── freethreaded_d.wixproj
    │   │   │   ├── freethreaded_d.wxs
    │   │   │   ├── freethreaded_en-US.wxl_template
    │   │   │   ├── freethreaded_files.wxs
    │   │   │   ├── freethreaded_pdb.wixproj
    │   │   │   └── freethreaded_pdb.wxs
    │   │   ├── launcher/
    │   │   │   ├── launcher.wixproj
    │   │   │   ├── launcher.wxs
    │   │   │   ├── launcher_en-US.wxl
    │   │   │   ├── launcher_files.wxs
    │   │   │   └── launcher_reg.wxs
    │   │   ├── lib/
    │   │   │   ├── lib.wixproj
    │   │   │   ├── lib.wxs
    │   │   │   ├── lib_d.wixproj
    │   │   │   ├── lib_d.wxs
    │   │   │   ├── lib_en-US.wxl
    │   │   │   ├── lib_files.wxs
    │   │   │   ├── lib_pdb.wixproj
    │   │   │   └── lib_pdb.wxs
    │   │   ├── path/
    │   │   │   ├── path.wixproj
    │   │   │   ├── path.wxs
    │   │   │   └── path_en-US.wxl
    │   │   ├── pip/
    │   │   │   ├── pip.wixproj
    │   │   │   ├── pip.wxs
    │   │   │   └── pip_en-US.wxl
    │   │   ├── tcltk/
    │   │   │   ├── tcltk.wixproj
    │   │   │   ├── tcltk.wxs
    │   │   │   ├── tcltk_d.wixproj
    │   │   │   ├── tcltk_d.wxs
    │   │   │   ├── tcltk_en-US.wxl_template
    │   │   │   ├── tcltk_files.wxs
    │   │   │   ├── tcltk_pdb.wixproj
    │   │   │   ├── tcltk_pdb.wxs
    │   │   │   └── tcltk_reg.wxs
    │   │   ├── test/
    │   │   │   ├── test.wixproj
    │   │   │   ├── test.wxs
    │   │   │   ├── test_d.wixproj
    │   │   │   ├── test_d.wxs
    │   │   │   ├── test_en-US.wxl
    │   │   │   ├── test_files.wxs
    │   │   │   ├── test_pdb.wixproj
    │   │   │   └── test_pdb.wxs
    │   │   └── ucrt/
    │   │       ├── ucrt.wixproj
    │   │       ├── ucrt.wxs
    │   │       └── ucrt_en-US.wxl
    │   ├── nuget/
    │   │   ├── build.bat
    │   │   ├── make_pkg.proj
    │   │   ├── python.nuspec
    │   │   ├── pythonarm32.nuspec
    │   │   ├── pythondaily.nuspec
    │   │   ├── pythondaily.symbols.nuspec
    │   │   └── pythonx86.nuspec
    │   ├── patchcheck/
    │   │   ├── patchcheck.py
    │   │   ├── reindent.py
    │   │   └── untabify.py
    │   ├── peg_generator/
    │   │   ├── Makefile
    │   │   ├── mypy.ini
    │   │   ├── pyproject.toml
    │   │   ├── .clang-format
    │   │   ├── .gitignore
    │   │   ├── peg_extension/
    │   │   │   ├── __init__.py
    │   │   │   └── peg_extension.c
    │   │   └── pegen/
    │   │       ├── __init__.py
    │   │       ├── __main__.py
    │   │       ├── ast_dump.py
    │   │       ├── build.py
    │   │       ├── c_generator.py
    │   │       ├── first_sets.py
    │   │       ├── grammar.py
    │   │       ├── grammar_parser.py
    │   │       ├── grammar_visualizer.py
    │   │       ├── keywordgen.py
    │   │       ├── metagrammar.gram
    │   │       ├── parser.py
    │   │       ├── parser_generator.py
    │   │       ├── python_generator.py
    │   │       ├── sccutils.py
    │   │       ├── testutil.py
    │   │       ├── tokenizer.py
    │   │       └── validator.py
    │   ├── scripts/
    │   │   ├── README
    │   │   ├── checkpip.py
    │   │   ├── combinerefs.py
    │   │   ├── divmod_threshold.py
    │   │   ├── idle3
    │   │   ├── pydoc3
    │   │   ├── sortperf.py
    │   │   ├── summarize_stats.py
    │   │   └── var_access_benchmark.py
    │   ├── ssl/
    │   │   ├── make_ssl_data.py
    │   │   └── multissltests.py
    │   ├── tsan/
    │   │   ├── suppressions_free_threading.txt
    │   │   └── supressions.txt
    │   ├── tz/
    │   │   └── zdump.py
    │   ├── unicode/
    │   │   ├── Makefile
    │   │   ├── comparecodecs.py
    │   │   ├── dawg.py
    │   │   ├── gencjkcodecs.py
    │   │   ├── gencodec.py
    │   │   ├── genmap_japanese.py
    │   │   ├── genmap_korean.py
    │   │   ├── genmap_schinese.py
    │   │   ├── genmap_support.py
    │   │   ├── genmap_tchinese.py
    │   │   ├── genwincodec.py
    │   │   ├── genwincodecs.bat
    │   │   ├── listcodecs.py
    │   │   ├── makeunicodedata.py
    │   │   ├── mkstringprep.py
    │   │   └── python-mappings/
    │   │       ├── CP1140.TXT
    │   │       ├── CP273.TXT
    │   │       ├── GB2312.TXT
    │   │       ├── KOI8-U.TXT
    │   │       ├── TIS-620.TXT
    │   │       ├── gb-18030-2000.xml
    │   │       ├── jisx0213-2004-std.txt
    │   │       └── diff/
    │   │           ├── jisx0213-2000-std.txt.diff
    │   │           └── jisx0213-2004-std.txt.diff
    │   ├── unittestgui/
    │   │   ├── README.txt
    │   │   └── unittestgui.py
    │   └── wasm/
    │       ├── README.md
    │       ├── config.site-wasm32-emscripten
    │       ├── config.site-wasm32-wasi
    │       ├── mypy.ini
    │       ├── wasi-env
    │       ├── wasi.py
    │       ├── wasm_build.py
    │       ├── .editorconfig
    │       └── emscripten/
    │           ├── __main__.py
    │           ├── make_libffi.sh
    │           ├── node_entry.mjs
    │           └── web_example/
    │               ├── python.html
    │               ├── python.worker.mjs
    │               ├── server.py
    │               └── wasm_assets.py
    ├── iOS/
    │   ├── README.rst
    │   ├── Resources/
    │   │   ├── Info.plist.in
    │   │   ├── dylib-Info-template.plist
    │   │   ├── pyconfig.h
    │   │   └── bin/
    │   │       ├── arm64-apple-ios-ar
    │   │       ├── arm64-apple-ios-clang
    │   │       ├── arm64-apple-ios-clang++
    │   │       ├── arm64-apple-ios-cpp
    │   │       ├── arm64-apple-ios-simulator-ar
    │   │       ├── arm64-apple-ios-simulator-clang
    │   │       ├── arm64-apple-ios-simulator-clang++
    │   │       ├── arm64-apple-ios-simulator-cpp
    │   │       ├── x86_64-apple-ios-simulator-ar
    │   │       ├── x86_64-apple-ios-simulator-clang
    │   │       ├── x86_64-apple-ios-simulator-clang++
    │   │       └── x86_64-apple-ios-simulator-cpp
    │   └── testbed/
    │       ├── __main__.py
    │       ├── Python.xcframework/
    │       │   ├── Info.plist
    │       │   ├── ios-arm64/
    │       │   │   └── README
    │       │   └── ios-arm64_x86_64-simulator/
    │       │       └── README
    │       ├── iOSTestbed/
    │       │   ├── AppDelegate.h
    │       │   ├── AppDelegate.m
    │       │   ├── dylib-Info-template.plist
    │       │   ├── iOSTestbed-Info.plist
    │       │   ├── main.m
    │       │   ├── Assets.xcassets/
    │       │   │   ├── Contents.json
    │       │   │   ├── AccentColor.colorset/
    │       │   │   │   └── Contents.json
    │       │   │   └── AppIcon.appiconset/
    │       │   │       └── Contents.json
    │       │   ├── Base.lproj/
    │       │   │   └── LaunchScreen.storyboard
    │       │   ├── app/
    │       │   │   └── README
    │       │   └── app_packages/
    │       │       └── README
    │       ├── iOSTestbed.xcodeproj/
    │       │   └── project.pbxproj
    │       └── iOSTestbedTests/
    │           └── iOSTestbedTests.m
    ├── .azure-pipelines/
    │   ├── ci.yml
    │   ├── prebuild-checks.yml
    │   ├── windows-layout-steps.yml
    │   └── windows-steps.yml
    ├── .devcontainer/
    │   └── devcontainer.json
    └── .github/
        ├── CODEOWNERS
        ├── CONTRIBUTING.rst
        ├── PULL_REQUEST_TEMPLATE.md
        ├── SECURITY.md
        ├── actionlint.yaml
        ├── dependabot.yml
        ├── zizmor.yml
        ├── ISSUE_TEMPLATE/
        │   ├── bug.yml
        │   ├── config.yml
        │   ├── crash.yml
        │   ├── documentation.md
        │   └── feature.yml
        ├── problem-matchers/
        │   ├── gcc.json
        │   └── msvc.json
        └── workflows/
            ├── add-issue-header.yml
            ├── build.yml
            ├── documentation-links.yml
            ├── jit.yml
            ├── lint.yml
            ├── mypy.yml
            ├── new-bugs-announce-notifier.yml
            ├── posix-deps-apt.sh
            ├── project-updater.yml
            ├── regen-abidump.sh
            ├── require-pr-label.yml
            ├── reusable-change-detection.yml
            ├── reusable-docs.yml
            ├── reusable-macos.yml
            ├── reusable-tsan.yml
            ├── reusable-ubuntu.yml
            ├── reusable-wasi.yml
            ├── reusable-windows-msi.yml
            ├── reusable-windows.yml
            ├── stale.yml
            └── verify-ensurepip-wheels.yml

================================================
File: /LICENSE
================================================
A. HISTORY OF THE SOFTWARE
==========================

Python was created in the early 1990s by Guido van Rossum at Stichting
Mathematisch Centrum (CWI, see https://www.cwi.nl) in the Netherlands
as a successor of a language called ABC.  Guido remains Python's
principal author, although it includes many contributions from others.

In 1995, Guido continued his work on Python at the Corporation for
National Research Initiatives (CNRI, see https://www.cnri.reston.va.us)
in Reston, Virginia where he released several versions of the
software.

In May 2000, Guido and the Python core development team moved to
BeOpen.com to form the BeOpen PythonLabs team.  In October of the same
year, the PythonLabs team moved to Digital Creations, which became
Zope Corporation.  In 2001, the Python Software Foundation (PSF, see
https://www.python.org/psf/) was formed, a non-profit organization
created specifically to own Python-related Intellectual Property.
Zope Corporation was a sponsoring member of the PSF.

All Python releases are Open Source (see https://opensource.org for
the Open Source Definition).  Historically, most, but not all, Python
releases have also been GPL-compatible; the table below summarizes
the various releases.

    Release         Derived     Year        Owner       GPL-
                    from                                compatible? (1)

    0.9.0 thru 1.2              1991-1995   CWI         yes
    1.3 thru 1.5.2  1.2         1995-1999   CNRI        yes
    1.6             1.5.2       2000        CNRI        no
    2.0             1.6         2000        BeOpen.com  no
    1.6.1           1.6         2001        CNRI        yes (2)
    2.1             2.0+1.6.1   2001        PSF         no
    2.0.1           2.0+1.6.1   2001        PSF         yes
    2.1.1           2.1+2.0.1   2001        PSF         yes
    2.1.2           2.1.1       2002        PSF         yes
    2.1.3           2.1.2       2002        PSF         yes
    2.2 and above   2.1.1       2001-now    PSF         yes

Footnotes:

(1) GPL-compatible doesn't mean that we're distributing Python under
    the GPL.  All Python licenses, unlike the GPL, let you distribute
    a modified version without making your changes open source.  The
    GPL-compatible licenses make it possible to combine Python with
    other software that is released under the GPL; the others don't.

(2) According to Richard Stallman, 1.6.1 is not GPL-compatible,
    because its license has a choice of law clause.  According to
    CNRI, however, Stallman's lawyer has told CNRI's lawyer that 1.6.1
    is "not incompatible" with the GPL.

Thanks to the many outside volunteers who have worked under Guido's
direction to make these releases possible.


B. TERMS AND CONDITIONS FOR ACCESSING OR OTHERWISE USING PYTHON
===============================================================

Python software and documentation are licensed under the
Python Software Foundation License Version 2.

Starting with Python 3.8.6, examples, recipes, and other code in
the documentation are dual licensed under the PSF License Version 2
and the Zero-Clause BSD license.

Some software incorporated into Python is under different licenses.
The licenses are listed with code falling under that license.


PYTHON SOFTWARE FOUNDATION LICENSE VERSION 2
--------------------------------------------

1. This LICENSE AGREEMENT is between the Python Software Foundation
("PSF"), and the Individual or Organization ("Licensee") accessing and
otherwise using this software ("Python") in source or binary form and
its associated documentation.

2. Subject to the terms and conditions of this License Agreement, PSF hereby
grants Licensee a nonexclusive, royalty-free, world-wide license to reproduce,
analyze, test, perform and/or display publicly, prepare derivative works,
distribute, and otherwise use Python alone or in any derivative version,
provided, however, that PSF's License Agreement and PSF's notice of copyright,
i.e., "Copyright (c) 2001 Python Software Foundation; All Rights Reserved"
are retained in Python alone or in any derivative version prepared by Licensee.

3. In the event Licensee prepares a derivative work that is based on
or incorporates Python or any part thereof, and wants to make
the derivative work available to others as provided herein, then
Licensee hereby agrees to include in any such work a brief summary of
the changes made to Python.

4. PSF is making Python available to Licensee on an "AS IS"
basis.  PSF MAKES NO REPRESENTATIONS OR WARRANTIES, EXPRESS OR
IMPLIED.  BY WAY OF EXAMPLE, BUT NOT LIMITATION, PSF MAKES NO AND
DISCLAIMS ANY REPRESENTATION OR WARRANTY OF MERCHANTABILITY OR FITNESS
FOR ANY PARTICULAR PURPOSE OR THAT THE USE OF PYTHON WILL NOT
INFRINGE ANY THIRD PARTY RIGHTS.

5. PSF SHALL NOT BE LIABLE TO LICENSEE OR ANY OTHER USERS OF PYTHON
FOR ANY INCIDENTAL, SPECIAL, OR CONSEQUENTIAL DAMAGES OR LOSS AS
A RESULT OF MODIFYING, DISTRIBUTING, OR OTHERWISE USING PYTHON,
OR ANY DERIVATIVE THEREOF, EVEN IF ADVISED OF THE POSSIBILITY THEREOF.

6. This License Agreement will automatically terminate upon a material
breach of its terms and conditions.

7. Nothing in this License Agreement shall be deemed to create any
relationship of agency, partnership, or joint venture between PSF and
Licensee.  This License Agreement does not grant permission to use PSF
trademarks or trade name in a trademark sense to endorse or promote
products or services of Licensee, or any third party.

8. By copying, installing or otherwise using Python, Licensee
agrees to be bound by the terms and conditions of this License
Agreement.


BEOPEN.COM LICENSE AGREEMENT FOR PYTHON 2.0
-------------------------------------------

BEOPEN PYTHON OPEN SOURCE LICENSE AGREEMENT VERSION 1

1. This LICENSE AGREEMENT is between BeOpen.com ("BeOpen"), having an
office at 160 Saratoga Avenue, Santa Clara, CA 95051, and the
Individual or Organization ("Licensee") accessing and otherwise using
this software in source or binary form and its associated
documentation ("the Software").

2. Subject to the terms and conditions of this BeOpen Python License
Agreement, BeOpen hereby grants Licensee a non-exclusive,
royalty-free, world-wide license to reproduce, analyze, test, perform
and/or display publicly, prepare derivative works, distribute, and
otherwise use the Software alone or in any derivative version,
provided, however, that the BeOpen Python License is retained in the
Software, alone or in any derivative version prepared by Licensee.

3. BeOpen is making the Software available to Licensee on an "AS IS"
basis.  BEOPEN MAKES NO REPRESENTATIONS OR WARRANTIES, EXPRESS OR
IMPLIED.  BY WAY OF EXAMPLE, BUT NOT LIMITATION, BEOPEN MAKES NO AND
DISCLAIMS ANY REPRESENTATION OR WARRANTY OF MERCHANTABILITY OR FITNESS
FOR ANY PARTICULAR PURPOSE OR THAT THE USE OF THE SOFTWARE WILL NOT
INFRINGE ANY THIRD PARTY RIGHTS.

4. BEOPEN SHALL NOT BE LIABLE TO LICENSEE OR ANY OTHER USERS OF THE
SOFTWARE FOR ANY INCIDENTAL, SPECIAL, OR CONSEQUENTIAL DAMAGES OR LOSS
AS A RESULT OF USING, MODIFYING OR DISTRIBUTING THE SOFTWARE, OR ANY
DERIVATIVE THEREOF, EVEN IF ADVISED OF THE POSSIBILITY THEREOF.

5. This License Agreement will automatically terminate upon a material
breach of its terms and conditions.

6. This License Agreement shall be governed by and interpreted in all
respects by the law of the State of California, excluding conflict of
law provisions.  Nothing in this License Agreement shall be deemed to
create any relationship of agency, partnership, or joint venture
between BeOpen and Licensee.  This License Agreement does not grant
permission to use BeOpen trademarks or trade names in a trademark
sense to endorse or promote products or services of Licensee, or any
third party.  As an exception, the "BeOpen Python" logos available at
http://www.pythonlabs.com/logos.html may be used according to the
permissions granted on that web page.

7. By copying, installing or otherwise using the software, Licensee
agrees to be bound by the terms and conditions of this License
Agreement.


CNRI LICENSE AGREEMENT FOR PYTHON 1.6.1
---------------------------------------

1. This LICENSE AGREEMENT is between the Corporation for National
Research Initiatives, having an office at 1895 Preston White Drive,
Reston, VA 20191 ("CNRI"), and the Individual or Organization
("Licensee") accessing and otherwise using Python 1.6.1 software in
source or binary form and its associated documentation.

2. Subject to the terms and conditions of this License Agreement, CNRI
hereby grants Licensee a nonexclusive, royalty-free, world-wide
license to reproduce, analyze, test, perform and/or display publicly,
prepare derivative works, distribute, and otherwise use Python 1.6.1
alone or in any derivative version, provided, however, that CNRI's
License Agreement and CNRI's notice of copyright, i.e., "Copyright (c)
1995-2001 Corporation for National Research Initiatives; All Rights
Reserved" are retained in Python 1.6.1 alone or in any derivative
version prepared by Licensee.  Alternately, in lieu of CNRI's License
Agreement, Licensee may substitute the following text (omitting the
quotes): "Python 1.6.1 is made available subject to the terms and
conditions in CNRI's License Agreement.  This Agreement together with
Python 1.6.1 may be located on the internet using the following
unique, persistent identifier (known as a handle): 1895.22/1013.  This
Agreement may also be obtained from a proxy server on the internet
using the following URL: http://hdl.handle.net/1895.22/1013".

3. In the event Licensee prepares a derivative work that is based on
or incorporates Python 1.6.1 or any part thereof, and wants to make
the derivative work available to others as provided herein, then
Licensee hereby agrees to include in any such work a brief summary of
the changes made to Python 1.6.1.

4. CNRI is making Python 1.6.1 available to Licensee on an "AS IS"
basis.  CNRI MAKES NO REPRESENTATIONS OR WARRANTIES, EXPRESS OR
IMPLIED.  BY WAY OF EXAMPLE, BUT NOT LIMITATION, CNRI MAKES NO AND
DISCLAIMS ANY REPRESENTATION OR WARRANTY OF MERCHANTABILITY OR FITNESS
FOR ANY PARTICULAR PURPOSE OR THAT THE USE OF PYTHON 1.6.1 WILL NOT
INFRINGE ANY THIRD PARTY RIGHTS.

5. CNRI SHALL NOT BE LIABLE TO LICENSEE OR ANY OTHER USERS OF PYTHON
1.6.1 FOR ANY INCIDENTAL, SPECIAL, OR CONSEQUENTIAL DAMAGES OR LOSS AS
A RESULT OF MODIFYING, DISTRIBUTING, OR OTHERWISE USING PYTHON 1.6.1,
OR ANY DERIVATIVE THEREOF, EVEN IF ADVISED OF THE POSSIBILITY THEREOF.

6. This License Agreement will automatically terminate upon a material
breach of its terms and conditions.

7. This License Agreement shall be governed by the federal
intellectual property law of the United States, including without
limitation the federal copyright law, and, to the extent such
U.S. federal law does not apply, by the law of the Commonwealth of
Virginia, excluding Virginia's conflict of law provisions.
Notwithstanding the foregoing, with regard to derivative works based
on Python 1.6.1 that incorporate non-separable material that was
previously distributed under the GNU General Public License (GPL), the
law of the Commonwealth of Virginia shall govern this License
Agreement only as to issues arising under or with respect to
Paragraphs 4, 5, and 7 of this License Agreement.  Nothing in this
License Agreement shall be deemed to create any relationship of
agency, partnership, or joint venture between CNRI and Licensee.  This
License Agreement does not grant permission to use CNRI trademarks or
trade name in a trademark sense to endorse or promote products or
services of Licensee, or any third party.

8. By clicking on the "ACCEPT" button where indicated, or by copying,
installing or otherwise using Python 1.6.1, Licensee agrees to be
bound by the terms and conditions of this License Agreement.

        ACCEPT


CWI LICENSE AGREEMENT FOR PYTHON 0.9.0 THROUGH 1.2
--------------------------------------------------

Copyright (c) 1991 - 1995, Stichting Mathematisch Centrum Amsterdam,
The Netherlands.  All rights reserved.

Permission to use, copy, modify, and distribute this software and its
documentation for any purpose and without fee is hereby granted,
provided that the above copyright notice appear in all copies and that
both that copyright notice and this permission notice appear in
supporting documentation, and that the name of Stichting Mathematisch
Centrum or CWI not be used in advertising or publicity pertaining to
distribution of the software without specific, written prior
permission.

STICHTING MATHEMATISCH CENTRUM DISCLAIMS ALL WARRANTIES WITH REGARD TO
THIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND
FITNESS, IN NO EVENT SHALL STICHTING MATHEMATISCH CENTRUM BE LIABLE
FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT
OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

ZERO-CLAUSE BSD LICENSE FOR CODE IN THE PYTHON DOCUMENTATION
----------------------------------------------------------------------

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.


================================================
File: /README.rst
================================================
This is Python version 3.14.0 alpha 3
=====================================

.. image:: https://github.com/python/cpython/actions/workflows/build.yml/badge.svg?branch=main&event=push
   :alt: CPython build status on GitHub Actions
   :target: https://github.com/python/cpython/actions

.. image:: https://dev.azure.com/python/cpython/_apis/build/status/Azure%20Pipelines%20CI?branchName=main
   :alt: CPython build status on Azure DevOps
   :target: https://dev.azure.com/python/cpython/_build/latest?definitionId=4&branchName=main

.. image:: https://img.shields.io/badge/discourse-join_chat-brightgreen.svg
   :alt: Python Discourse chat
   :target: https://discuss.python.org/


Copyright © 2001 Python Software Foundation.  All rights reserved.

See the end of this file for further copyright and license information.

.. contents::

General Information
-------------------

- Website: https://www.python.org
- Source code: https://github.com/python/cpython
- Issue tracker: https://github.com/python/cpython/issues
- Documentation: https://docs.python.org
- Developer's Guide: https://devguide.python.org/

Contributing to CPython
-----------------------

For more complete instructions on contributing to CPython development,
see the `Developer Guide`_.

.. _Developer Guide: https://devguide.python.org/

Using Python
------------

Installable Python kits, and information about using Python, are available at
`python.org`_.

.. _python.org: https://www.python.org/

Build Instructions
------------------

On Unix, Linux, BSD, macOS, and Cygwin::

    ./configure
    make
    make test
    sudo make install

This will install Python as ``python3``.

You can pass many options to the configure script; run ``./configure --help``
to find out more.  On macOS case-insensitive file systems and on Cygwin,
the executable is called ``python.exe``; elsewhere it's just ``python``.

Building a complete Python installation requires the use of various
additional third-party libraries, depending on your build platform and
configure options.  Not all standard library modules are buildable or
usable on all platforms.  Refer to the
`Install dependencies <https://devguide.python.org/getting-started/setup-building.html#build-dependencies>`_
section of the `Developer Guide`_ for current detailed information on
dependencies for various Linux distributions and macOS.

On macOS, there are additional configure and build options related
to macOS framework and universal builds.  Refer to `Mac/README.rst
<https://github.com/python/cpython/blob/main/Mac/README.rst>`_.

On Windows, see `PCbuild/readme.txt
<https://github.com/python/cpython/blob/main/PCbuild/readme.txt>`_.

To build Windows installer, see `Tools/msi/README.txt
<https://github.com/python/cpython/blob/main/Tools/msi/README.txt>`_.

If you wish, you can create a subdirectory and invoke configure from there.
For example::

    mkdir debug
    cd debug
    ../configure --with-pydebug
    make
    make test

(This will fail if you *also* built at the top-level directory.  You should do
a ``make clean`` at the top-level first.)

To get an optimized build of Python, ``configure --enable-optimizations``
before you run ``make``.  This sets the default make targets up to enable
Profile Guided Optimization (PGO) and may be used to auto-enable Link Time
Optimization (LTO) on some platforms.  For more details, see the sections
below.

Profile Guided Optimization
^^^^^^^^^^^^^^^^^^^^^^^^^^^

PGO takes advantage of recent versions of the GCC or Clang compilers.  If used,
either via ``configure --enable-optimizations`` or by manually running
``make profile-opt`` regardless of configure flags, the optimized build
process will perform the following steps:

The entire Python directory is cleaned of temporary files that may have
resulted from a previous compilation.

An instrumented version of the interpreter is built, using suitable compiler
flags for each flavor. Note that this is just an intermediary step.  The
binary resulting from this step is not good for real-life workloads as it has
profiling instructions embedded inside.

After the instrumented interpreter is built, the Makefile will run a training
workload.  This is necessary in order to profile the interpreter's execution.
Note also that any output, both stdout and stderr, that may appear at this step
is suppressed.

The final step is to build the actual interpreter, using the information
collected from the instrumented one.  The end result will be a Python binary
that is optimized; suitable for distribution or production installation.


Link Time Optimization
^^^^^^^^^^^^^^^^^^^^^^

Enabled via configure's ``--with-lto`` flag.  LTO takes advantage of the
ability of recent compiler toolchains to optimize across the otherwise
arbitrary ``.o`` file boundary when building final executables or shared
libraries for additional performance gains.


What's New
----------

We have a comprehensive overview of the changes in the `What's New in Python
3.14 <https://docs.python.org/3.14/whatsnew/3.14.html>`_ document.  For a more
detailed change log, read `Misc/NEWS
<https://github.com/python/cpython/tree/main/Misc/NEWS.d>`_, but a full
accounting of changes can only be gleaned from the `commit history
<https://github.com/python/cpython/commits/main>`_.

If you want to install multiple versions of Python, see the section below
entitled "Installing multiple versions".


Documentation
-------------

`Documentation for Python 3.14 <https://docs.python.org/3.14/>`_ is online,
updated daily.

It can also be downloaded in many formats for faster access.  The documentation
is downloadable in HTML, PDF, and reStructuredText formats; the latter version
is primarily for documentation authors, translators, and people with special
formatting requirements.

For information about building Python's documentation, refer to `Doc/README.rst
<https://github.com/python/cpython/blob/main/Doc/README.rst>`_.


Testing
-------

To test the interpreter, type ``make test`` in the top-level directory.  The
test set produces some output.  You can generally ignore the messages about
skipped tests due to optional features which can't be imported.  If a message
is printed about a failed test or a traceback or core dump is produced,
something is wrong.

By default, tests are prevented from overusing resources like disk space and
memory.  To enable these tests, run ``make buildbottest``.

If any tests fail, you can re-run the failing test(s) in verbose mode.  For
example, if ``test_os`` and ``test_gdb`` failed, you can run::

    make test TESTOPTS="-v test_os test_gdb"

If the failure persists and appears to be a problem with Python rather than
your environment, you can `file a bug report
<https://github.com/python/cpython/issues>`_ and include relevant output from
that command to show the issue.

See `Running & Writing Tests <https://devguide.python.org/testing/run-write-tests.html>`_
for more on running tests.

Installing multiple versions
----------------------------

On Unix and Mac systems if you intend to install multiple versions of Python
using the same installation prefix (``--prefix`` argument to the configure
script) you must take care that your primary python executable is not
overwritten by the installation of a different version.  All files and
directories installed using ``make altinstall`` contain the major and minor
version and can thus live side-by-side.  ``make install`` also creates
``${prefix}/bin/python3`` which refers to ``${prefix}/bin/python3.X``.  If you
intend to install multiple versions using the same prefix you must decide which
version (if any) is your "primary" version.  Install that version using
``make install``.  Install all other versions using ``make altinstall``.

For example, if you want to install Python 2.7, 3.6, and 3.14 with 3.14 being the
primary version, you would execute ``make install`` in your 3.14 build directory
and ``make altinstall`` in the others.


Release Schedule
----------------

See `PEP 745 <https://peps.python.org/pep-0745/>`__ for Python 3.14 release details.


Copyright and License Information
---------------------------------


Copyright © 2001 Python Software Foundation.  All rights reserved.

Copyright © 2000 BeOpen.com.  All rights reserved.

Copyright © 1995-2001 Corporation for National Research Initiatives.  All
rights reserved.

Copyright © 1991-1995 Stichting Mathematisch Centrum.  All rights reserved.

See the `LICENSE <https://github.com/python/cpython/blob/main/LICENSE>`_ for
information on the history of this software, terms & conditions for usage, and a
DISCLAIMER OF ALL WARRANTIES.

This Python distribution contains *no* GNU General Public License (GPL) code,
so it may be used in proprietary projects.  There are interfaces to some GNU
code but these are entirely optional.

All trademarks referenced herein are property of their respective holders.


================================================
File: /aclocal.m4
================================================
# generated automatically by aclocal 1.16.5 -*- Autoconf -*-

# Copyright (C) 1996-2021 Free Software Foundation, Inc.

# This file is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

m4_ifndef([AC_CONFIG_MACRO_DIRS], [m4_defun([_AM_CONFIG_MACRO_DIRS], [])m4_defun([AC_CONFIG_MACRO_DIRS], [_AM_CONFIG_MACRO_DIRS($@)])])
# ===============================================================================
#  https://www.gnu.org/software/autoconf-archive/ax_c_float_words_bigendian.html
# ===============================================================================
#
# SYNOPSIS
#
#   AX_C_FLOAT_WORDS_BIGENDIAN([ACTION-IF-TRUE], [ACTION-IF-FALSE], [ACTION-IF-UNKNOWN])
#
# DESCRIPTION
#
#   Checks the ordering of words within a multi-word float. This check is
#   necessary because on some systems (e.g. certain ARM systems), the float
#   word ordering can be different from the byte ordering. In a multi-word
#   float context, "big-endian" implies that the word containing the sign
#   bit is found in the memory location with the lowest address. This
#   implementation was inspired by the AC_C_BIGENDIAN macro in autoconf.
#
#   The endianness is detected by first compiling C code that contains a
#   special double float value, then grepping the resulting object file for
#   certain strings of ASCII values. The double is specially crafted to have
#   a binary representation that corresponds with a simple string. In this
#   implementation, the string "noonsees" was selected because the
#   individual word values ("noon" and "sees") are palindromes, thus making
#   this test byte-order agnostic. If grep finds the string "noonsees" in
#   the object file, the target platform stores float words in big-endian
#   order. If grep finds "seesnoon", float words are in little-endian order.
#   If neither value is found, the user is instructed to specify the
#   ordering.
#
#   Early versions of this macro (i.e., before serial 12) would not work
#   when interprocedural optimization (via link-time optimization) was
#   enabled. This would happen when, say, the GCC/clang "-flto" flag, or the
#   ICC "-ipo" flag was used, for example. The problem was that under
#   these conditions, the compiler did not allocate for and write the special
#   float value in the data segment of the object file, since doing so might
#   not prove optimal once more context was available. Thus, the special value
#   (in platform-dependent binary form) could not be found in the object file,
#   and the macro would fail.
#
#   The solution to the above problem was to:
#
#     1) Compile and link a whole test program rather than just compile an
#        object file. This ensures that we reach the point where even an
#        interprocedural optimizing compiler writes values to the data segment.
#
#     2) Add code that requires the compiler to write the special value to
#        the data segment, as opposed to "optimizing away" the variable's
#        allocation. This could be done via compiler keywords or options, but
#        it's tricky to make this work for all versions of all compilers with
#        all optimization settings. The chosen solution was to make the exit
#        code of the test program depend on the storing of the special value
#        in memory (in the data segment). Because the exit code can be
#        verified, any compiler that aspires to be correct will produce a
#        program binary that contains the value, which the macro can then find.
#
#   How does the exit code depend on the special value residing in memory?
#   Memory, unlike variables and registers, can be addressed indirectly at run
#   time. The exit code of this test program is a result of indirectly reading
#   and writing to the memory region where the special value is supposed to
#   reside. The actual memory addresses used and the values to be written are
#   derived from the the program input ("argv") and are therefore not known at
#   compile or link time. The compiler has no choice but to defer the
#   computation to run time, and to prepare by allocating and populating the
#   data segment with the special value. For further details, refer to the
#   source code of the test program.
#
#   Note that the test program is never meant to be run. It only exists to host
#   a double float value in a given platform's binary format. Thus, error
#   handling is not included.
#
# LICENSE
#
#   Copyright (c) 2008, 2023 Daniel Amelang <dan@amelang.net>
#
#   Copying and distribution of this file, with or without modification, are
#   permitted in any medium without royalty provided the copyright notice
#   and this notice are preserved. This file is offered as-is, without any
#   warranty.

#serial 14

AC_DEFUN([AX_C_FLOAT_WORDS_BIGENDIAN],
  [AC_CACHE_CHECK(whether float word ordering is bigendian,
                  ax_cv_c_float_words_bigendian, [

ax_cv_c_float_words_bigendian=unknown
AC_LINK_IFELSE([AC_LANG_SOURCE([[

#include <stdlib.h>

static double m[] = {9.090423496703681e+223, 0.0};

int main (int argc, char *argv[])
{
    m[atoi (argv[1])] += atof (argv[2]);
    return m[atoi (argv[3])] > 0.0;
}

]])], [

if grep noonsees conftest* > /dev/null ; then
  ax_cv_c_float_words_bigendian=yes
fi
if grep seesnoon conftest* >/dev/null ; then
  if test "$ax_cv_c_float_words_bigendian" = unknown; then
    ax_cv_c_float_words_bigendian=no
  else
    ax_cv_c_float_words_bigendian=unknown
  fi
fi

])])

case $ax_cv_c_float_words_bigendian in
  yes)
    m4_default([$1],
      [AC_DEFINE([FLOAT_WORDS_BIGENDIAN], 1,
                 [Define to 1 if your system stores words within floats
                  with the most significant word first])]) ;;
  no)
    $2 ;;
  *)
    m4_default([$3],
      [AC_MSG_ERROR([

Unknown float word ordering. You need to manually preset
ax_cv_c_float_words_bigendian=no (or yes) according to your system.

    ])]) ;;
esac

])# AX_C_FLOAT_WORDS_BIGENDIAN

# ===========================================================================
#  https://www.gnu.org/software/autoconf-archive/ax_check_compile_flag.html
# ===========================================================================
#
# SYNOPSIS
#
#   AX_CHECK_COMPILE_FLAG(FLAG, [ACTION-SUCCESS], [ACTION-FAILURE], [EXTRA-FLAGS], [INPUT])
#
# DESCRIPTION
#
#   Check whether the given FLAG works with the current language's compiler
#   or gives an error.  (Warnings, however, are ignored)
#
#   ACTION-SUCCESS/ACTION-FAILURE are shell commands to execute on
#   success/failure.
#
#   If EXTRA-FLAGS is defined, it is added to the current language's default
#   flags (e.g. CFLAGS) when the check is done.  The check is thus made with
#   the flags: "CFLAGS EXTRA-FLAGS FLAG".  This can for example be used to
#   force the compiler to issue an error when a bad flag is given.
#
#   INPUT gives an alternative input source to AC_COMPILE_IFELSE.
#
#   NOTE: Implementation based on AX_CFLAGS_GCC_OPTION. Please keep this
#   macro in sync with AX_CHECK_{PREPROC,LINK}_FLAG.
#
# LICENSE
#
#   Copyright (c) 2008 Guido U. Draheim <guidod@gmx.de>
#   Copyright (c) 2011 Maarten Bosmans <mkbosmans@gmail.com>
#
#   Copying and distribution of this file, with or without modification, are
#   permitted in any medium without royalty provided the copyright notice
#   and this notice are preserved.  This file is offered as-is, without any
#   warranty.

#serial 6

AC_DEFUN([AX_CHECK_COMPILE_FLAG],
[AC_PREREQ(2.64)dnl for _AC_LANG_PREFIX and AS_VAR_IF
AS_VAR_PUSHDEF([CACHEVAR],[ax_cv_check_[]_AC_LANG_ABBREV[]flags_$4_$1])dnl
AC_CACHE_CHECK([whether _AC_LANG compiler accepts $1], CACHEVAR, [
  ax_check_save_flags=$[]_AC_LANG_PREFIX[]FLAGS
  _AC_LANG_PREFIX[]FLAGS="$[]_AC_LANG_PREFIX[]FLAGS $4 $1"
  AC_COMPILE_IFELSE([m4_default([$5],[AC_LANG_PROGRAM()])],
    [AS_VAR_SET(CACHEVAR,[yes])],
    [AS_VAR_SET(CACHEVAR,[no])])
  _AC_LANG_PREFIX[]FLAGS=$ax_check_save_flags])
AS_VAR_IF(CACHEVAR,yes,
  [m4_default([$2], :)],
  [m4_default([$3], :)])
AS_VAR_POPDEF([CACHEVAR])dnl
])dnl AX_CHECK_COMPILE_FLAGS

# ===========================================================================
#     https://www.gnu.org/software/autoconf-archive/ax_check_define.html
# ===========================================================================
#
# SYNOPSIS
#
#   AC_CHECK_DEFINE([symbol], [ACTION-IF-FOUND], [ACTION-IF-NOT])
#   AX_CHECK_DEFINE([includes],[symbol], [ACTION-IF-FOUND], [ACTION-IF-NOT])
#
# DESCRIPTION
#
#   Complements AC_CHECK_FUNC but it does not check for a function but for a
#   define to exist. Consider a usage like:
#
#    AC_CHECK_DEFINE(__STRICT_ANSI__, CFLAGS="$CFLAGS -D_XOPEN_SOURCE=500")
#
# LICENSE
#
#   Copyright (c) 2008 Guido U. Draheim <guidod@gmx.de>
#
#   Copying and distribution of this file, with or without modification, are
#   permitted in any medium without royalty provided the copyright notice
#   and this notice are preserved.  This file is offered as-is, without any
#   warranty.

#serial 11

AU_ALIAS([AC_CHECK_DEFINED], [AC_CHECK_DEFINE])
AC_DEFUN([AC_CHECK_DEFINE],[
AS_VAR_PUSHDEF([ac_var],[ac_cv_defined_$1])dnl
AC_CACHE_CHECK([for $1 defined], ac_var,
AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[]], [[
  #ifdef $1
  int ok;
  (void)ok;
  #else
  choke me
  #endif
]])],[AS_VAR_SET(ac_var, yes)],[AS_VAR_SET(ac_var, no)]))
AS_IF([test AS_VAR_GET(ac_var) != "no"], [$2], [$3])dnl
AS_VAR_POPDEF([ac_var])dnl
])

AU_ALIAS([AX_CHECK_DEFINED], [AX_CHECK_DEFINE])
AC_DEFUN([AX_CHECK_DEFINE],[
AS_VAR_PUSHDEF([ac_var],[ac_cv_defined_$2_$1])dnl
AC_CACHE_CHECK([for $2 defined in $1], ac_var,
AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <$1>]], [[
  #ifdef $2
  int ok;
  (void)ok;
  #else
  choke me
  #endif
]])],[AS_VAR_SET(ac_var, yes)],[AS_VAR_SET(ac_var, no)]))
AS_IF([test AS_VAR_GET(ac_var) != "no"], [$3], [$4])dnl
AS_VAR_POPDEF([ac_var])dnl
])

AC_DEFUN([AX_CHECK_FUNC],
[AS_VAR_PUSHDEF([ac_var], [ac_cv_func_$2])dnl
AC_CACHE_CHECK([for $2], ac_var,
dnl AC_LANG_FUNC_LINK_TRY
[AC_LINK_IFELSE([AC_LANG_PROGRAM([$1
                #undef $2
                char $2 ();],[
                char (*f) () = $2;
                return f != $2; ])],
                [AS_VAR_SET(ac_var, yes)],
                [AS_VAR_SET(ac_var, no)])])
AS_IF([test AS_VAR_GET(ac_var) = yes], [$3], [$4])dnl
AS_VAR_POPDEF([ac_var])dnl
])# AC_CHECK_FUNC

# ===========================================================================
#     https://www.gnu.org/software/autoconf-archive/ax_check_openssl.html
# ===========================================================================
#
# SYNOPSIS
#
#   AX_CHECK_OPENSSL([action-if-found[, action-if-not-found]])
#
# DESCRIPTION
#
#   Look for OpenSSL in a number of default spots, or in a user-selected
#   spot (via --with-openssl).  Sets
#
#     OPENSSL_INCLUDES to the include directives required
#     OPENSSL_LIBS to the -l directives required
#     OPENSSL_LDFLAGS to the -L or -R flags required
#
#   and calls ACTION-IF-FOUND or ACTION-IF-NOT-FOUND appropriately
#
#   This macro sets OPENSSL_INCLUDES such that source files should use the
#   openssl/ directory in include directives:
#
#     #include <openssl/hmac.h>
#
# LICENSE
#
#   Copyright (c) 2009,2010 Zmanda Inc. <http://www.zmanda.com/>
#   Copyright (c) 2009,2010 Dustin J. Mitchell <dustin@zmanda.com>
#
#   Copying and distribution of this file, with or without modification, are
#   permitted in any medium without royalty provided the copyright notice
#   and this notice are preserved. This file is offered as-is, without any
#   warranty.

#serial 11

AU_ALIAS([CHECK_SSL], [AX_CHECK_OPENSSL])
AC_DEFUN([AX_CHECK_OPENSSL], [
    found=false
    AC_ARG_WITH([openssl],
        [AS_HELP_STRING([--with-openssl=DIR],
            [root of the OpenSSL directory])],
        [
            case "$withval" in
            "" | y | ye | yes | n | no)
            AC_MSG_ERROR([Invalid --with-openssl value])
              ;;
            *) ssldirs="$withval"
              ;;
            esac
        ], [
            # if pkg-config is installed and openssl has installed a .pc file,
            # then use that information and don't search ssldirs
            AC_CHECK_TOOL([PKG_CONFIG], [pkg-config])
            if test x"$PKG_CONFIG" != x""; then
                OPENSSL_LDFLAGS=`$PKG_CONFIG openssl --libs-only-L 2>/dev/null`
                if test $? = 0; then
                    OPENSSL_LIBS=`$PKG_CONFIG openssl --libs-only-l 2>/dev/null`
                    OPENSSL_INCLUDES=`$PKG_CONFIG openssl --cflags-only-I 2>/dev/null`
                    found=true
                fi
            fi

            # no such luck; use some default ssldirs
            if ! $found; then
                ssldirs="/usr/local/ssl /usr/lib/ssl /usr/ssl /usr/pkg /usr/local /usr"
            fi
        ]
        )


    # note that we #include <openssl/foo.h>, so the OpenSSL headers have to be in
    # an 'openssl' subdirectory

    if ! $found; then
        OPENSSL_INCLUDES=
        for ssldir in $ssldirs; do
            AC_MSG_CHECKING([for include/openssl/ssl.h in $ssldir])
            if test -f "$ssldir/include/openssl/ssl.h"; then
                OPENSSL_INCLUDES="-I$ssldir/include"
                OPENSSL_LDFLAGS="-L$ssldir/lib"
                OPENSSL_LIBS="-lssl -lcrypto"
                found=true
                AC_MSG_RESULT([yes])
                break
            else
                AC_MSG_RESULT([no])
            fi
        done

        # if the file wasn't found, well, go ahead and try the link anyway -- maybe
        # it will just work!
    fi

    # try the preprocessor and linker with our new flags,
    # being careful not to pollute the global LIBS, LDFLAGS, and CPPFLAGS

    AC_MSG_CHECKING([whether compiling and linking against OpenSSL works])
    echo "Trying link with OPENSSL_LDFLAGS=$OPENSSL_LDFLAGS;" \
        "OPENSSL_LIBS=$OPENSSL_LIBS; OPENSSL_INCLUDES=$OPENSSL_INCLUDES" >&AS_MESSAGE_LOG_FD

    save_LIBS="$LIBS"
    save_LDFLAGS="$LDFLAGS"
    save_CPPFLAGS="$CPPFLAGS"
    LDFLAGS="$LDFLAGS $OPENSSL_LDFLAGS"
    LIBS="$OPENSSL_LIBS $LIBS"
    CPPFLAGS="$OPENSSL_INCLUDES $CPPFLAGS"
    AC_LINK_IFELSE(
        [AC_LANG_PROGRAM([#include <openssl/ssl.h>], [SSL_new(NULL)])],
        [
            AC_MSG_RESULT([yes])
            $1
        ], [
            AC_MSG_RESULT([no])
            $2
        ])
    CPPFLAGS="$save_CPPFLAGS"
    LDFLAGS="$save_LDFLAGS"
    LIBS="$save_LIBS"

    AC_SUBST([OPENSSL_INCLUDES])
    AC_SUBST([OPENSSL_LIBS])
    AC_SUBST([OPENSSL_LDFLAGS])
])

# pkg.m4 - Macros to locate and use pkg-config.   -*- Autoconf -*-
# serial 12 (pkg-config-0.29.2)

dnl Copyright © 2004 Scott James Remnant <scott@netsplit.com>.
dnl Copyright © 2012-2015 Dan Nicholson <dbn.lists@gmail.com>
dnl
dnl This program is free software; you can redistribute it and/or modify
dnl it under the terms of the GNU General Public License as published by
dnl the Free Software Foundation; either version 2 of the License, or
dnl (at your option) any later version.
dnl
dnl This program is distributed in the hope that it will be useful, but
dnl WITHOUT ANY WARRANTY; without even the implied warranty of
dnl MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
dnl General Public License for more details.
dnl
dnl You should have received a copy of the GNU General Public License
dnl along with this program; if not, write to the Free Software
dnl Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
dnl 02111-1307, USA.
dnl
dnl As a special exception to the GNU General Public License, if you
dnl distribute this file as part of a program that contains a
dnl configuration script generated by Autoconf, you may include it under
dnl the same distribution terms that you use for the rest of that
dnl program.

dnl PKG_PREREQ(MIN-VERSION)
dnl -----------------------
dnl Since: 0.29
dnl
dnl Verify that the version of the pkg-config macros are at least
dnl MIN-VERSION. Unlike PKG_PROG_PKG_CONFIG, which checks the user's
dnl installed version of pkg-config, this checks the developer's version
dnl of pkg.m4 when generating configure.
dnl
dnl To ensure that this macro is defined, also add:
dnl m4_ifndef([PKG_PREREQ],
dnl     [m4_fatal([must install pkg-config 0.29 or later before running autoconf/autogen])])
dnl
dnl See the "Since" comment for each macro you use to see what version
dnl of the macros you require.
m4_defun([PKG_PREREQ],
[m4_define([PKG_MACROS_VERSION], [0.29.2])
m4_if(m4_version_compare(PKG_MACROS_VERSION, [$1]), -1,
    [m4_fatal([pkg.m4 version $1 or higher is required but ]PKG_MACROS_VERSION[ found])])
])dnl PKG_PREREQ

dnl PKG_PROG_PKG_CONFIG([MIN-VERSION])
dnl ----------------------------------
dnl Since: 0.16
dnl
dnl Search for the pkg-config tool and set the PKG_CONFIG variable to
dnl first found in the path. Checks that the version of pkg-config found
dnl is at least MIN-VERSION. If MIN-VERSION is not specified, 0.9.0 is
dnl used since that's the first version where most current features of
dnl pkg-config existed.
AC_DEFUN([PKG_PROG_PKG_CONFIG],
[m4_pattern_forbid([^_?PKG_[A-Z_]+$])
m4_pattern_allow([^PKG_CONFIG(_(PATH|LIBDIR|SYSROOT_DIR|ALLOW_SYSTEM_(CFLAGS|LIBS)))?$])
m4_pattern_allow([^PKG_CONFIG_(DISABLE_UNINSTALLED|TOP_BUILD_DIR|DEBUG_SPEW)$])
AC_ARG_VAR([PKG_CONFIG], [path to pkg-config utility])
AC_ARG_VAR([PKG_CONFIG_PATH], [directories to add to pkg-config's search path])
AC_ARG_VAR([PKG_CONFIG_LIBDIR], [path overriding pkg-config's built-in search path])

if test "x$ac_cv_env_PKG_CONFIG_set" != "xset"; then
	AC_PATH_TOOL([PKG_CONFIG], [pkg-config])
fi
if test -n "$PKG_CONFIG"; then
	_pkg_min_version=m4_default([$1], [0.9.0])
	AC_MSG_CHECKING([pkg-config is at least version $_pkg_min_version])
	if $PKG_CONFIG --atleast-pkgconfig-version $_pkg_min_version; then
		AC_MSG_RESULT([yes])
	else
		AC_MSG_RESULT([no])
		PKG_CONFIG=""
	fi
fi[]dnl
])dnl PKG_PROG_PKG_CONFIG

dnl PKG_CHECK_EXISTS(MODULES, [ACTION-IF-FOUND], [ACTION-IF-NOT-FOUND])
dnl -------------------------------------------------------------------
dnl Since: 0.18
dnl
dnl Check to see whether a particular set of modules exists. Similar to
dnl PKG_CHECK_MODULES(), but does not set variables or print errors.
dnl
dnl Please remember that m4 expands AC_REQUIRE([PKG_PROG_PKG_CONFIG])
dnl only at the first occurrence in configure.ac, so if the first place
dnl it's called might be skipped (such as if it is within an "if", you
dnl have to call PKG_CHECK_EXISTS manually
AC_DEFUN([PKG_CHECK_EXISTS],
[AC_REQUIRE([PKG_PROG_PKG_CONFIG])dnl
if test -n "$PKG_CONFIG" && \
    AC_RUN_LOG([$PKG_CONFIG --exists --print-errors "$1"]); then
  m4_default([$2], [:])
m4_ifvaln([$3], [else
  $3])dnl
fi])

dnl _PKG_CONFIG([VARIABLE], [COMMAND], [MODULES])
dnl ---------------------------------------------
dnl Internal wrapper calling pkg-config via PKG_CONFIG and setting
dnl pkg_failed based on the result.
m4_define([_PKG_CONFIG],
[if test -n "$$1"; then
    pkg_cv_[]$1="$$1"
 elif test -n "$PKG_CONFIG"; then
    PKG_CHECK_EXISTS([$3],
                     [pkg_cv_[]$1=`$PKG_CONFIG --[]$2 "$3" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ],
		     [pkg_failed=yes])
 else
    pkg_failed=untried
fi[]dnl
])dnl _PKG_CONFIG

dnl _PKG_SHORT_ERRORS_SUPPORTED
dnl ---------------------------
dnl Internal check to see if pkg-config supports short errors.
AC_DEFUN([_PKG_SHORT_ERRORS_SUPPORTED],
[AC_REQUIRE([PKG_PROG_PKG_CONFIG])
if $PKG_CONFIG --atleast-pkgconfig-version 0.20; then
        _pkg_short_errors_supported=yes
else
        _pkg_short_errors_supported=no
fi[]dnl
])dnl _PKG_SHORT_ERRORS_SUPPORTED


dnl PKG_CHECK_MODULES(VARIABLE-PREFIX, MODULES, [ACTION-IF-FOUND],
dnl   [ACTION-IF-NOT-FOUND])
dnl --------------------------------------------------------------
dnl Since: 0.4.0
dnl
dnl Note that if there is a possibility the first call to
dnl PKG_CHECK_MODULES might not happen, you should be sure to include an
dnl explicit call to PKG_PROG_PKG_CONFIG in your configure.ac
AC_DEFUN([PKG_CHECK_MODULES],
[AC_REQUIRE([PKG_PROG_PKG_CONFIG])dnl
AC_ARG_VAR([$1][_CFLAGS], [C compiler flags for $1, overriding pkg-config])dnl
AC_ARG_VAR([$1][_LIBS], [linker flags for $1, overriding pkg-config])dnl

pkg_failed=no
AC_MSG_CHECKING([for $2])

_PKG_CONFIG([$1][_CFLAGS], [cflags], [$2])
_PKG_CONFIG([$1][_LIBS], [libs], [$2])

m4_define([_PKG_TEXT], [Alternatively, you may set the environment variables $1[]_CFLAGS
and $1[]_LIBS to avoid the need to call pkg-config.
See the pkg-config man page for more details.])

if test $pkg_failed = yes; then
        AC_MSG_RESULT([no])
        _PKG_SHORT_ERRORS_SUPPORTED
        if test $_pkg_short_errors_supported = yes; then
                $1[]_PKG_ERRORS=`$PKG_CONFIG --short-errors --print-errors --cflags --libs "$2" 2>&1`
        else
                $1[]_PKG_ERRORS=`$PKG_CONFIG --print-errors --cflags --libs "$2" 2>&1`
        fi
        # Put the nasty error message in config.log where it belongs
        echo "$$1[]_PKG_ERRORS" >&AS_MESSAGE_LOG_FD

        m4_default([$4], [AC_MSG_ERROR(
[Package requirements ($2) were not met:

$$1_PKG_ERRORS

Consider adjusting the PKG_CONFIG_PATH environment variable if you
installed software in a non-standard prefix.

_PKG_TEXT])[]dnl
        ])
elif test $pkg_failed = untried; then
        AC_MSG_RESULT([no])
        m4_default([$4], [AC_MSG_FAILURE(
[The pkg-config script could not be found or is too old.  Make sure it
is in your PATH or set the PKG_CONFIG environment variable to the full
path to pkg-config.

_PKG_TEXT

To get pkg-config, see <http://pkg-config.freedesktop.org/>.])[]dnl
        ])
else
        $1[]_CFLAGS=$pkg_cv_[]$1[]_CFLAGS
        $1[]_LIBS=$pkg_cv_[]$1[]_LIBS
        AC_MSG_RESULT([yes])
        $3
fi[]dnl
])dnl PKG_CHECK_MODULES


dnl PKG_CHECK_MODULES_STATIC(VARIABLE-PREFIX, MODULES, [ACTION-IF-FOUND],
dnl   [ACTION-IF-NOT-FOUND])
dnl ---------------------------------------------------------------------
dnl Since: 0.29
dnl
dnl Checks for existence of MODULES and gathers its build flags with
dnl static libraries enabled. Sets VARIABLE-PREFIX_CFLAGS from --cflags
dnl and VARIABLE-PREFIX_LIBS from --libs.
dnl
dnl Note that if there is a possibility the first call to
dnl PKG_CHECK_MODULES_STATIC might not happen, you should be sure to
dnl include an explicit call to PKG_PROG_PKG_CONFIG in your
dnl configure.ac.
AC_DEFUN([PKG_CHECK_MODULES_STATIC],
[AC_REQUIRE([PKG_PROG_PKG_CONFIG])dnl
_save_PKG_CONFIG=$PKG_CONFIG
PKG_CONFIG="$PKG_CONFIG --static"
PKG_CHECK_MODULES($@)
PKG_CONFIG=$_save_PKG_CONFIG[]dnl
])dnl PKG_CHECK_MODULES_STATIC


dnl PKG_INSTALLDIR([DIRECTORY])
dnl -------------------------
dnl Since: 0.27
dnl
dnl Substitutes the variable pkgconfigdir as the location where a module
dnl should install pkg-config .pc files. By default the directory is
dnl $libdir/pkgconfig, but the default can be changed by passing
dnl DIRECTORY. The user can override through the --with-pkgconfigdir
dnl parameter.
AC_DEFUN([PKG_INSTALLDIR],
[m4_pushdef([pkg_default], [m4_default([$1], ['${libdir}/pkgconfig'])])
m4_pushdef([pkg_description],
    [pkg-config installation directory @<:@]pkg_default[@:>@])
AC_ARG_WITH([pkgconfigdir],
    [AS_HELP_STRING([--with-pkgconfigdir], pkg_description)],,
    [with_pkgconfigdir=]pkg_default)
AC_SUBST([pkgconfigdir], [$with_pkgconfigdir])
m4_popdef([pkg_default])
m4_popdef([pkg_description])
])dnl PKG_INSTALLDIR


dnl PKG_NOARCH_INSTALLDIR([DIRECTORY])
dnl --------------------------------
dnl Since: 0.27
dnl
dnl Substitutes the variable noarch_pkgconfigdir as the location where a
dnl module should install arch-independent pkg-config .pc files. By
dnl default the directory is $datadir/pkgconfig, but the default can be
dnl changed by passing DIRECTORY. The user can override through the
dnl --with-noarch-pkgconfigdir parameter.
AC_DEFUN([PKG_NOARCH_INSTALLDIR],
[m4_pushdef([pkg_default], [m4_default([$1], ['${datadir}/pkgconfig'])])
m4_pushdef([pkg_description],
    [pkg-config arch-independent installation directory @<:@]pkg_default[@:>@])
AC_ARG_WITH([noarch-pkgconfigdir],
    [AS_HELP_STRING([--with-noarch-pkgconfigdir], pkg_description)],,
    [with_noarch_pkgconfigdir=]pkg_default)
AC_SUBST([noarch_pkgconfigdir], [$with_noarch_pkgconfigdir])
m4_popdef([pkg_default])
m4_popdef([pkg_description])
])dnl PKG_NOARCH_INSTALLDIR


dnl PKG_CHECK_VAR(VARIABLE, MODULE, CONFIG-VARIABLE,
dnl [ACTION-IF-FOUND], [ACTION-IF-NOT-FOUND])
dnl -------------------------------------------
dnl Since: 0.28
dnl
dnl Retrieves the value of the pkg-config variable for the given module.
AC_DEFUN([PKG_CHECK_VAR],
[AC_REQUIRE([PKG_PROG_PKG_CONFIG])dnl
AC_ARG_VAR([$1], [value of $3 for $2, overriding pkg-config])dnl

_PKG_CONFIG([$1], [variable="][$3]["], [$2])
AS_VAR_COPY([$1], [pkg_cv_][$1])

AS_VAR_IF([$1], [""], [$5], [$4])dnl
])dnl PKG_CHECK_VAR

dnl PKG_WITH_MODULES(VARIABLE-PREFIX, MODULES,
dnl   [ACTION-IF-FOUND],[ACTION-IF-NOT-FOUND],
dnl   [DESCRIPTION], [DEFAULT])
dnl ------------------------------------------
dnl
dnl Prepare a "--with-" configure option using the lowercase
dnl [VARIABLE-PREFIX] name, merging the behaviour of AC_ARG_WITH and
dnl PKG_CHECK_MODULES in a single macro.
AC_DEFUN([PKG_WITH_MODULES],
[
m4_pushdef([with_arg], m4_tolower([$1]))

m4_pushdef([description],
           [m4_default([$5], [build with ]with_arg[ support])])

m4_pushdef([def_arg], [m4_default([$6], [auto])])
m4_pushdef([def_action_if_found], [AS_TR_SH([with_]with_arg)=yes])
m4_pushdef([def_action_if_not_found], [AS_TR_SH([with_]with_arg)=no])

m4_case(def_arg,
            [yes],[m4_pushdef([with_without], [--without-]with_arg)],
            [m4_pushdef([with_without],[--with-]with_arg)])

AC_ARG_WITH(with_arg,
     AS_HELP_STRING(with_without, description[ @<:@default=]def_arg[@:>@]),,
    [AS_TR_SH([with_]with_arg)=def_arg])

AS_CASE([$AS_TR_SH([with_]with_arg)],
            [yes],[PKG_CHECK_MODULES([$1],[$2],$3,$4)],
            [auto],[PKG_CHECK_MODULES([$1],[$2],
                                        [m4_n([def_action_if_found]) $3],
                                        [m4_n([def_action_if_not_found]) $4])])

m4_popdef([with_arg])
m4_popdef([description])
m4_popdef([def_arg])

])dnl PKG_WITH_MODULES

dnl PKG_HAVE_WITH_MODULES(VARIABLE-PREFIX, MODULES,
dnl   [DESCRIPTION], [DEFAULT])
dnl -----------------------------------------------
dnl
dnl Convenience macro to trigger AM_CONDITIONAL after PKG_WITH_MODULES
dnl check._[VARIABLE-PREFIX] is exported as make variable.
AC_DEFUN([PKG_HAVE_WITH_MODULES],
[
PKG_WITH_MODULES([$1],[$2],,,[$3],[$4])

AM_CONDITIONAL([HAVE_][$1],
               [test "$AS_TR_SH([with_]m4_tolower([$1]))" = "yes"])
])dnl PKG_HAVE_WITH_MODULES

dnl PKG_HAVE_DEFINE_WITH_MODULES(VARIABLE-PREFIX, MODULES,
dnl   [DESCRIPTION], [DEFAULT])
dnl ------------------------------------------------------
dnl
dnl Convenience macro to run AM_CONDITIONAL and AC_DEFINE after
dnl PKG_WITH_MODULES check. HAVE_[VARIABLE-PREFIX] is exported as make
dnl and preprocessor variable.
AC_DEFUN([PKG_HAVE_DEFINE_WITH_MODULES],
[
PKG_HAVE_WITH_MODULES([$1],[$2],[$3],[$4])

AS_IF([test "$AS_TR_SH([with_]m4_tolower([$1]))" = "yes"],
        [AC_DEFINE([HAVE_][$1], 1, [Enable ]m4_tolower([$1])[ support])])
])dnl PKG_HAVE_DEFINE_WITH_MODULES

# AM_CONDITIONAL                                            -*- Autoconf -*-

# Copyright (C) 1997-2021 Free Software Foundation, Inc.
#
# This file is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# AM_CONDITIONAL(NAME, SHELL-CONDITION)
# -------------------------------------
# Define a conditional.
AC_DEFUN([AM_CONDITIONAL],
[AC_PREREQ([2.52])dnl
 m4_if([$1], [TRUE],  [AC_FATAL([$0: invalid condition: $1])],
       [$1], [FALSE], [AC_FATAL([$0: invalid condition: $1])])dnl
AC_SUBST([$1_TRUE])dnl
AC_SUBST([$1_FALSE])dnl
_AM_SUBST_NOTMAKE([$1_TRUE])dnl
_AM_SUBST_NOTMAKE([$1_FALSE])dnl
m4_define([_AM_COND_VALUE_$1], [$2])dnl
if $2; then
  $1_TRUE=
  $1_FALSE='#'
else
  $1_TRUE='#'
  $1_FALSE=
fi
AC_CONFIG_COMMANDS_PRE(
[if test -z "${$1_TRUE}" && test -z "${$1_FALSE}"; then
  AC_MSG_ERROR([[conditional "$1" was never defined.
Usually this means the macro was only invoked conditionally.]])
fi])])

# Copyright (C) 2006-2021 Free Software Foundation, Inc.
#
# This file is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# _AM_SUBST_NOTMAKE(VARIABLE)
# ---------------------------
# Prevent Automake from outputting VARIABLE = @VARIABLE@ in Makefile.in.
# This macro is traced by Automake.
AC_DEFUN([_AM_SUBST_NOTMAKE])

# AM_SUBST_NOTMAKE(VARIABLE)
# --------------------------
# Public sister of _AM_SUBST_NOTMAKE.
AC_DEFUN([AM_SUBST_NOTMAKE], [_AM_SUBST_NOTMAKE($@)])



================================================
File: /config.guess
================================================
#! /bin/sh
# Attempt to guess a canonical system name.
#   Copyright 1992-2023 Free Software Foundation, Inc.

# shellcheck disable=SC2006,SC2268 # see below for rationale

timestamp='2023-08-22'

# This file is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, see <https://www.gnu.org/licenses/>.
#
# As a special exception to the GNU General Public License, if you
# distribute this file as part of a program that contains a
# configuration script generated by Autoconf, you may include it under
# the same distribution terms that you use for the rest of that
# program.  This Exception is an additional permission under section 7
# of the GNU General Public License, version 3 ("GPLv3").
#
# Originally written by Per Bothner; maintained since 2000 by Ben Elliston.
#
# You can get the latest version of this script from:
# https://git.savannah.gnu.org/cgit/config.git/plain/config.guess
#
# Please send patches to <config-patches@gnu.org>.


# The "shellcheck disable" line above the timestamp inhibits complaints
# about features and limitations of the classic Bourne shell that were
# superseded or lifted in POSIX.  However, this script identifies a wide
# variety of pre-POSIX systems that do not have POSIX shells at all, and
# even some reasonably current systems (Solaris 10 as case-in-point) still
# have a pre-POSIX /bin/sh.


me=`echo "$0" | sed -e 's,.*/,,'`

usage="\
Usage: $0 [OPTION]

Output the configuration name of the system '$me' is run on.

Options:
  -h, --help         print this help, then exit
  -t, --time-stamp   print date of last modification, then exit
  -v, --version      print version number, then exit

Report bugs and patches to <config-patches@gnu.org>."

version="\
GNU config.guess ($timestamp)

Originally written by Per Bothner.
Copyright 1992-2023 Free Software Foundation, Inc.

This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE."

help="
Try '$me --help' for more information."

# Parse command line
while test $# -gt 0 ; do
  case $1 in
    --time-stamp | --time* | -t )
       echo "$timestamp" ; exit ;;
    --version | -v )
       echo "$version" ; exit ;;
    --help | --h* | -h )
       echo "$usage"; exit ;;
    -- )     # Stop option processing
       shift; break ;;
    - )	# Use stdin as input.
       break ;;
    -* )
       echo "$me: invalid option $1$help" >&2
       exit 1 ;;
    * )
       break ;;
  esac
done

if test $# != 0; then
  echo "$me: too many arguments$help" >&2
  exit 1
fi

# Just in case it came from the environment.
GUESS=

# CC_FOR_BUILD -- compiler used by this script. Note that the use of a
# compiler to aid in system detection is discouraged as it requires
# temporary files to be created and, as you can see below, it is a
# headache to deal with in a portable fashion.

# Historically, 'CC_FOR_BUILD' used to be named 'HOST_CC'. We still
# use 'HOST_CC' if defined, but it is deprecated.

# Portable tmp directory creation inspired by the Autoconf team.

tmp=
# shellcheck disable=SC2172
trap 'test -z "$tmp" || rm -fr "$tmp"' 0 1 2 13 15

set_cc_for_build() {
    # prevent multiple calls if $tmp is already set
    test "$tmp" && return 0
    : "${TMPDIR=/tmp}"
    # shellcheck disable=SC2039,SC3028
    { tmp=`(umask 077 && mktemp -d "$TMPDIR/cgXXXXXX") 2>/dev/null` && test -n "$tmp" && test -d "$tmp" ; } ||
	{ test -n "$RANDOM" && tmp=$TMPDIR/cg$$-$RANDOM && (umask 077 && mkdir "$tmp" 2>/dev/null) ; } ||
	{ tmp=$TMPDIR/cg-$$ && (umask 077 && mkdir "$tmp" 2>/dev/null) && echo "Warning: creating insecure temp directory" >&2 ; } ||
	{ echo "$me: cannot create a temporary directory in $TMPDIR" >&2 ; exit 1 ; }
    dummy=$tmp/dummy
    case ${CC_FOR_BUILD-},${HOST_CC-},${CC-} in
	,,)    echo "int x;" > "$dummy.c"
	       for driver in cc gcc c89 c99 ; do
		   if ($driver -c -o "$dummy.o" "$dummy.c") >/dev/null 2>&1 ; then
		       CC_FOR_BUILD=$driver
		       break
		   fi
	       done
	       if test x"$CC_FOR_BUILD" = x ; then
		   CC_FOR_BUILD=no_compiler_found
	       fi
	       ;;
	,,*)   CC_FOR_BUILD=$CC ;;
	,*,*)  CC_FOR_BUILD=$HOST_CC ;;
    esac
}

# This is needed to find uname on a Pyramid OSx when run in the BSD universe.
# (ghazi@noc.rutgers.edu 1994-08-24)
if test -f /.attbin/uname ; then
	PATH=$PATH:/.attbin ; export PATH
fi

UNAME_MACHINE=`(uname -m) 2>/dev/null` || UNAME_MACHINE=unknown
UNAME_RELEASE=`(uname -r) 2>/dev/null` || UNAME_RELEASE=unknown
UNAME_SYSTEM=`(uname -s) 2>/dev/null` || UNAME_SYSTEM=unknown
UNAME_VERSION=`(uname -v) 2>/dev/null` || UNAME_VERSION=unknown

case $UNAME_SYSTEM in
Linux|GNU|GNU/*)
	LIBC=unknown

	set_cc_for_build
	cat <<-EOF > "$dummy.c"
	#if defined(__ANDROID__)
	LIBC=android
	#else
	#include <features.h>
	#if defined(__UCLIBC__)
	LIBC=uclibc
	#elif defined(__dietlibc__)
	LIBC=dietlibc
	#elif defined(__GLIBC__)
	LIBC=gnu
	#else
	#include <stdarg.h>
	/* First heuristic to detect musl libc.  */
	#ifdef __DEFINED_va_list
	LIBC=musl
	#endif
	#endif
	#endif
	EOF
	cc_set_libc=`$CC_FOR_BUILD -E "$dummy.c" 2>/dev/null | grep '^LIBC' | sed 's, ,,g'`
	eval "$cc_set_libc"

	# Second heuristic to detect musl libc.
	if [ "$LIBC" = unknown ] &&
	   command -v ldd >/dev/null &&
	   ldd --version 2>&1 | grep -q ^musl; then
		LIBC=musl
	fi

	# If the system lacks a compiler, then just pick glibc.
	# We could probably try harder.
	if [ "$LIBC" = unknown ]; then
		LIBC=gnu
	fi
	;;
esac

# Note: order is significant - the case branches are not exclusive.

case $UNAME_MACHINE:$UNAME_SYSTEM:$UNAME_RELEASE:$UNAME_VERSION in
    *:NetBSD:*:*)
	# NetBSD (nbsd) targets should (where applicable) match one or
	# more of the tuples: *-*-netbsdelf*, *-*-netbsdaout*,
	# *-*-netbsdecoff* and *-*-netbsd*.  For targets that recently
	# switched to ELF, *-*-netbsd* would select the old
	# object file format.  This provides both forward
	# compatibility and a consistent mechanism for selecting the
	# object file format.
	#
	# Note: NetBSD doesn't particularly care about the vendor
	# portion of the name.  We always set it to "unknown".
	UNAME_MACHINE_ARCH=`(uname -p 2>/dev/null || \
	    /sbin/sysctl -n hw.machine_arch 2>/dev/null || \
	    /usr/sbin/sysctl -n hw.machine_arch 2>/dev/null || \
	    echo unknown)`
	case $UNAME_MACHINE_ARCH in
	    aarch64eb) machine=aarch64_be-unknown ;;
	    armeb) machine=armeb-unknown ;;
	    arm*) machine=arm-unknown ;;
	    sh3el) machine=shl-unknown ;;
	    sh3eb) machine=sh-unknown ;;
	    sh5el) machine=sh5le-unknown ;;
	    earmv*)
		arch=`echo "$UNAME_MACHINE_ARCH" | sed -e 's,^e\(armv[0-9]\).*$,\1,'`
		endian=`echo "$UNAME_MACHINE_ARCH" | sed -ne 's,^.*\(eb\)$,\1,p'`
		machine=${arch}${endian}-unknown
		;;
	    *) machine=$UNAME_MACHINE_ARCH-unknown ;;
	esac
	# The Operating System including object format, if it has switched
	# to ELF recently (or will in the future) and ABI.
	case $UNAME_MACHINE_ARCH in
	    earm*)
		os=netbsdelf
		;;
	    arm*|i386|m68k|ns32k|sh3*|sparc|vax)
		set_cc_for_build
		if echo __ELF__ | $CC_FOR_BUILD -E - 2>/dev/null \
			| grep -q __ELF__
		then
		    # Once all utilities can be ECOFF (netbsdecoff) or a.out (netbsdaout).
		    # Return netbsd for either.  FIX?
		    os=netbsd
		else
		    os=netbsdelf
		fi
		;;
	    *)
		os=netbsd
		;;
	esac
	# Determine ABI tags.
	case $UNAME_MACHINE_ARCH in
	    earm*)
		expr='s/^earmv[0-9]/-eabi/;s/eb$//'
		abi=`echo "$UNAME_MACHINE_ARCH" | sed -e "$expr"`
		;;
	esac
	# The OS release
	# Debian GNU/NetBSD machines have a different userland, and
	# thus, need a distinct triplet. However, they do not need
	# kernel version information, so it can be replaced with a
	# suitable tag, in the style of linux-gnu.
	case $UNAME_VERSION in
	    Debian*)
		release='-gnu'
		;;
	    *)
		release=`echo "$UNAME_RELEASE" | sed -e 's/[-_].*//' | cut -d. -f1,2`
		;;
	esac
	# Since CPU_TYPE-MANUFACTURER-KERNEL-OPERATING_SYSTEM:
	# contains redundant information, the shorter form:
	# CPU_TYPE-MANUFACTURER-OPERATING_SYSTEM is used.
	GUESS=$machine-${os}${release}${abi-}
	;;
    *:Bitrig:*:*)
	UNAME_MACHINE_ARCH=`arch | sed 's/Bitrig.//'`
	GUESS=$UNAME_MACHINE_ARCH-unknown-bitrig$UNAME_RELEASE
	;;
    *:OpenBSD:*:*)
	UNAME_MACHINE_ARCH=`arch | sed 's/OpenBSD.//'`
	GUESS=$UNAME_MACHINE_ARCH-unknown-openbsd$UNAME_RELEASE
	;;
    *:SecBSD:*:*)
	UNAME_MACHINE_ARCH=`arch | sed 's/SecBSD.//'`
	GUESS=$UNAME_MACHINE_ARCH-unknown-secbsd$UNAME_RELEASE
	;;
    *:LibertyBSD:*:*)
	UNAME_MACHINE_ARCH=`arch | sed 's/^.*BSD\.//'`
	GUESS=$UNAME_MACHINE_ARCH-unknown-libertybsd$UNAME_RELEASE
	;;
    *:MidnightBSD:*:*)
	GUESS=$UNAME_MACHINE-unknown-midnightbsd$UNAME_RELEASE
	;;
    *:ekkoBSD:*:*)
	GUESS=$UNAME_MACHINE-unknown-ekkobsd$UNAME_RELEASE
	;;
    *:SolidBSD:*:*)
	GUESS=$UNAME_MACHINE-unknown-solidbsd$UNAME_RELEASE
	;;
    *:OS108:*:*)
	GUESS=$UNAME_MACHINE-unknown-os108_$UNAME_RELEASE
	;;
    macppc:MirBSD:*:*)
	GUESS=powerpc-unknown-mirbsd$UNAME_RELEASE
	;;
    *:MirBSD:*:*)
	GUESS=$UNAME_MACHINE-unknown-mirbsd$UNAME_RELEASE
	;;
    *:Sortix:*:*)
	GUESS=$UNAME_MACHINE-unknown-sortix
	;;
    *:Twizzler:*:*)
	GUESS=$UNAME_MACHINE-unknown-twizzler
	;;
    *:Redox:*:*)
	GUESS=$UNAME_MACHINE-unknown-redox
	;;
    mips:OSF1:*.*)
	GUESS=mips-dec-osf1
	;;
    alpha:OSF1:*:*)
	# Reset EXIT trap before exiting to avoid spurious non-zero exit code.
	trap '' 0
	case $UNAME_RELEASE in
	*4.0)
		UNAME_RELEASE=`/usr/sbin/sizer -v | awk '{print $3}'`
		;;
	*5.*)
		UNAME_RELEASE=`/usr/sbin/sizer -v | awk '{print $4}'`
		;;
	esac
	# According to Compaq, /usr/sbin/psrinfo has been available on
	# OSF/1 and Tru64 systems produced since 1995.  I hope that
	# covers most systems running today.  This code pipes the CPU
	# types through head -n 1, so we only detect the type of CPU 0.
	ALPHA_CPU_TYPE=`/usr/sbin/psrinfo -v | sed -n -e 's/^  The alpha \(.*\) processor.*$/\1/p' | head -n 1`
	case $ALPHA_CPU_TYPE in
	    "EV4 (21064)")
		UNAME_MACHINE=alpha ;;
	    "EV4.5 (21064)")
		UNAME_MACHINE=alpha ;;
	    "LCA4 (21066/21068)")
		UNAME_MACHINE=alpha ;;
	    "EV5 (21164)")
		UNAME_MACHINE=alphaev5 ;;
	    "EV5.6 (21164A)")
		UNAME_MACHINE=alphaev56 ;;
	    "EV5.6 (21164PC)")
		UNAME_MACHINE=alphapca56 ;;
	    "EV5.7 (21164PC)")
		UNAME_MACHINE=alphapca57 ;;
	    "EV6 (21264)")
		UNAME_MACHINE=alphaev6 ;;
	    "EV6.7 (21264A)")
		UNAME_MACHINE=alphaev67 ;;
	    "EV6.8CB (21264C)")
		UNAME_MACHINE=alphaev68 ;;
	    "EV6.8AL (21264B)")
		UNAME_MACHINE=alphaev68 ;;
	    "EV6.8CX (21264D)")
		UNAME_MACHINE=alphaev68 ;;
	    "EV6.9A (21264/EV69A)")
		UNAME_MACHINE=alphaev69 ;;
	    "EV7 (21364)")
		UNAME_MACHINE=alphaev7 ;;
	    "EV7.9 (21364A)")
		UNAME_MACHINE=alphaev79 ;;
	esac
	# A Pn.n version is a patched version.
	# A Vn.n version is a released version.
	# A Tn.n version is a released field test version.
	# A Xn.n version is an unreleased experimental baselevel.
	# 1.2 uses "1.2" for uname -r.
	OSF_REL=`echo "$UNAME_RELEASE" | sed -e 's/^[PVTX]//' | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz`
	GUESS=$UNAME_MACHINE-dec-osf$OSF_REL
	;;
    Amiga*:UNIX_System_V:4.0:*)
	GUESS=m68k-unknown-sysv4
	;;
    *:[Aa]miga[Oo][Ss]:*:*)
	GUESS=$UNAME_MACHINE-unknown-amigaos
	;;
    *:[Mm]orph[Oo][Ss]:*:*)
	GUESS=$UNAME_MACHINE-unknown-morphos
	;;
    *:OS/390:*:*)
	GUESS=i370-ibm-openedition
	;;
    *:z/VM:*:*)
	GUESS=s390-ibm-zvmoe
	;;
    *:OS400:*:*)
	GUESS=powerpc-ibm-os400
	;;
    arm:RISC*:1.[012]*:*|arm:riscix:1.[012]*:*)
	GUESS=arm-acorn-riscix$UNAME_RELEASE
	;;
    arm*:riscos:*:*|arm*:RISCOS:*:*)
	GUESS=arm-unknown-riscos
	;;
    SR2?01:HI-UX/MPP:*:* | SR8000:HI-UX/MPP:*:*)
	GUESS=hppa1.1-hitachi-hiuxmpp
	;;
    Pyramid*:OSx*:*:* | MIS*:OSx*:*:* | MIS*:SMP_DC-OSx*:*:*)
	# akee@wpdis03.wpafb.af.mil (Earle F. Ake) contributed MIS and NILE.
	case `(/bin/universe) 2>/dev/null` in
	    att) GUESS=pyramid-pyramid-sysv3 ;;
	    *)   GUESS=pyramid-pyramid-bsd   ;;
	esac
	;;
    NILE*:*:*:dcosx)
	GUESS=pyramid-pyramid-svr4
	;;
    DRS?6000:unix:4.0:6*)
	GUESS=sparc-icl-nx6
	;;
    DRS?6000:UNIX_SV:4.2*:7* | DRS?6000:isis:4.2*:7*)
	case `/usr/bin/uname -p` in
	    sparc) GUESS=sparc-icl-nx7 ;;
	esac
	;;
    s390x:SunOS:*:*)
	SUN_REL=`echo "$UNAME_RELEASE" | sed -e 's/[^.]*//'`
	GUESS=$UNAME_MACHINE-ibm-solaris2$SUN_REL
	;;
    sun4H:SunOS:5.*:*)
	SUN_REL=`echo "$UNAME_RELEASE" | sed -e 's/[^.]*//'`
	GUESS=sparc-hal-solaris2$SUN_REL
	;;
    sun4*:SunOS:5.*:* | tadpole*:SunOS:5.*:*)
	SUN_REL=`echo "$UNAME_RELEASE" | sed -e 's/[^.]*//'`
	GUESS=sparc-sun-solaris2$SUN_REL
	;;
    i86pc:AuroraUX:5.*:* | i86xen:AuroraUX:5.*:*)
	GUESS=i386-pc-auroraux$UNAME_RELEASE
	;;
    i86pc:SunOS:5.*:* | i86xen:SunOS:5.*:*)
	set_cc_for_build
	SUN_ARCH=i386
	# If there is a compiler, see if it is configured for 64-bit objects.
	# Note that the Sun cc does not turn __LP64__ into 1 like gcc does.
	# This test works for both compilers.
	if test "$CC_FOR_BUILD" != no_compiler_found; then
	    if (echo '#ifdef __amd64'; echo IS_64BIT_ARCH; echo '#endif') | \
		(CCOPTS="" $CC_FOR_BUILD -m64 -E - 2>/dev/null) | \
		grep IS_64BIT_ARCH >/dev/null
	    then
		SUN_ARCH=x86_64
	    fi
	fi
	SUN_REL=`echo "$UNAME_RELEASE" | sed -e 's/[^.]*//'`
	GUESS=$SUN_ARCH-pc-solaris2$SUN_REL
	;;
    sun4*:SunOS:6*:*)
	# According to config.sub, this is the proper way to canonicalize
	# SunOS6.  Hard to guess exactly what SunOS6 will be like, but
	# it's likely to be more like Solaris than SunOS4.
	SUN_REL=`echo "$UNAME_RELEASE" | sed -e 's/[^.]*//'`
	GUESS=sparc-sun-solaris3$SUN_REL
	;;
    sun4*:SunOS:*:*)
	case `/usr/bin/arch -k` in
	    Series*|S4*)
		UNAME_RELEASE=`uname -v`
		;;
	esac
	# Japanese Language versions have a version number like '4.1.3-JL'.
	SUN_REL=`echo "$UNAME_RELEASE" | sed -e 's/-/_/'`
	GUESS=sparc-sun-sunos$SUN_REL
	;;
    sun3*:SunOS:*:*)
	GUESS=m68k-sun-sunos$UNAME_RELEASE
	;;
    sun*:*:4.2BSD:*)
	UNAME_RELEASE=`(sed 1q /etc/motd | awk '{print substr($5,1,3)}') 2>/dev/null`
	test "x$UNAME_RELEASE" = x && UNAME_RELEASE=3
	case `/bin/arch` in
	    sun3)
		GUESS=m68k-sun-sunos$UNAME_RELEASE
		;;
	    sun4)
		GUESS=sparc-sun-sunos$UNAME_RELEASE
		;;
	esac
	;;
    aushp:SunOS:*:*)
	GUESS=sparc-auspex-sunos$UNAME_RELEASE
	;;
    # The situation for MiNT is a little confusing.  The machine name
    # can be virtually everything (everything which is not
    # "atarist" or "atariste" at least should have a processor
    # > m68000).  The system name ranges from "MiNT" over "FreeMiNT"
    # to the lowercase version "mint" (or "freemint").  Finally
    # the system name "TOS" denotes a system which is actually not
    # MiNT.  But MiNT is downward compatible to TOS, so this should
    # be no problem.
    atarist[e]:*MiNT:*:* | atarist[e]:*mint:*:* | atarist[e]:*TOS:*:*)
	GUESS=m68k-atari-mint$UNAME_RELEASE
	;;
    atari*:*MiNT:*:* | atari*:*mint:*:* | atarist[e]:*TOS:*:*)
	GUESS=m68k-atari-mint$UNAME_RELEASE
	;;
    *falcon*:*MiNT:*:* | *falcon*:*mint:*:* | *falcon*:*TOS:*:*)
	GUESS=m68k-atari-mint$UNAME_RELEASE
	;;
    milan*:*MiNT:*:* | milan*:*mint:*:* | *milan*:*TOS:*:*)
	GUESS=m68k-milan-mint$UNAME_RELEASE
	;;
    hades*:*MiNT:*:* | hades*:*mint:*:* | *hades*:*TOS:*:*)
	GUESS=m68k-hades-mint$UNAME_RELEASE
	;;
    *:*MiNT:*:* | *:*mint:*:* | *:*TOS:*:*)
	GUESS=m68k-unknown-mint$UNAME_RELEASE
	;;
    m68k:machten:*:*)
	GUESS=m68k-apple-machten$UNAME_RELEASE
	;;
    powerpc:machten:*:*)
	GUESS=powerpc-apple-machten$UNAME_RELEASE
	;;
    RISC*:Mach:*:*)
	GUESS=mips-dec-mach_bsd4.3
	;;
    RISC*:ULTRIX:*:*)
	GUESS=mips-dec-ultrix$UNAME_RELEASE
	;;
    VAX*:ULTRIX*:*:*)
	GUESS=vax-dec-ultrix$UNAME_RELEASE
	;;
    2020:CLIX:*:* | 2430:CLIX:*:*)
	GUESS=clipper-intergraph-clix$UNAME_RELEASE
	;;
    mips:*:*:UMIPS | mips:*:*:RISCos)
	set_cc_for_build
	sed 's/^	//' << EOF > "$dummy.c"
#ifdef __cplusplus
#include <stdio.h>  /* for printf() prototype */
	int main (int argc, char *argv[]) {
#else
	int main (argc, argv) int argc; char *argv[]; {
#endif
	#if defined (host_mips) && defined (MIPSEB)
	#if defined (SYSTYPE_SYSV)
	  printf ("mips-mips-riscos%ssysv\\n", argv[1]); exit (0);
	#endif
	#if defined (SYSTYPE_SVR4)
	  printf ("mips-mips-riscos%ssvr4\\n", argv[1]); exit (0);
	#endif
	#if defined (SYSTYPE_BSD43) || defined(SYSTYPE_BSD)
	  printf ("mips-mips-riscos%sbsd\\n", argv[1]); exit (0);
	#endif
	#endif
	  exit (-1);
	}
EOF
	$CC_FOR_BUILD -o "$dummy" "$dummy.c" &&
	  dummyarg=`echo "$UNAME_RELEASE" | sed -n 's/\([0-9]*\).*/\1/p'` &&
	  SYSTEM_NAME=`"$dummy" "$dummyarg"` &&
	    { echo "$SYSTEM_NAME"; exit; }
	GUESS=mips-mips-riscos$UNAME_RELEASE
	;;
    Motorola:PowerMAX_OS:*:*)
	GUESS=powerpc-motorola-powermax
	;;
    Motorola:*:4.3:PL8-*)
	GUESS=powerpc-harris-powermax
	;;
    Night_Hawk:*:*:PowerMAX_OS | Synergy:PowerMAX_OS:*:*)
	GUESS=powerpc-harris-powermax
	;;
    Night_Hawk:Power_UNIX:*:*)
	GUESS=powerpc-harris-powerunix
	;;
    m88k:CX/UX:7*:*)
	GUESS=m88k-harris-cxux7
	;;
    m88k:*:4*:R4*)
	GUESS=m88k-motorola-sysv4
	;;
    m88k:*:3*:R3*)
	GUESS=m88k-motorola-sysv3
	;;
    AViiON:dgux:*:*)
	# DG/UX returns AViiON for all architectures
	UNAME_PROCESSOR=`/usr/bin/uname -p`
	if test "$UNAME_PROCESSOR" = mc88100 || test "$UNAME_PROCESSOR" = mc88110
	then
	    if test "$TARGET_BINARY_INTERFACE"x = m88kdguxelfx || \
	       test "$TARGET_BINARY_INTERFACE"x = x
	    then
		GUESS=m88k-dg-dgux$UNAME_RELEASE
	    else
		GUESS=m88k-dg-dguxbcs$UNAME_RELEASE
	    fi
	else
	    GUESS=i586-dg-dgux$UNAME_RELEASE
	fi
	;;
    M88*:DolphinOS:*:*)	# DolphinOS (SVR3)
	GUESS=m88k-dolphin-sysv3
	;;
    M88*:*:R3*:*)
	# Delta 88k system running SVR3
	GUESS=m88k-motorola-sysv3
	;;
    XD88*:*:*:*) # Tektronix XD88 system running UTekV (SVR3)
	GUESS=m88k-tektronix-sysv3
	;;
    Tek43[0-9][0-9]:UTek:*:*) # Tektronix 4300 system running UTek (BSD)
	GUESS=m68k-tektronix-bsd
	;;
    *:IRIX*:*:*)
	IRIX_REL=`echo "$UNAME_RELEASE" | sed -e 's/-/_/g'`
	GUESS=mips-sgi-irix$IRIX_REL
	;;
    ????????:AIX?:[12].1:2)   # AIX 2.2.1 or AIX 2.1.1 is RT/PC AIX.
	GUESS=romp-ibm-aix    # uname -m gives an 8 hex-code CPU id
	;;                    # Note that: echo "'`uname -s`'" gives 'AIX '
    i*86:AIX:*:*)
	GUESS=i386-ibm-aix
	;;
    ia64:AIX:*:*)
	if test -x /usr/bin/oslevel ; then
		IBM_REV=`/usr/bin/oslevel`
	else
		IBM_REV=$UNAME_VERSION.$UNAME_RELEASE
	fi
	GUESS=$UNAME_MACHINE-ibm-aix$IBM_REV
	;;
    *:AIX:2:3)
	if grep bos325 /usr/include/stdio.h >/dev/null 2>&1; then
		set_cc_for_build
		sed 's/^		//' << EOF > "$dummy.c"
		#include <sys/systemcfg.h>

		main()
			{
			if (!__power_pc())
				exit(1);
			puts("powerpc-ibm-aix3.2.5");
			exit(0);
			}
EOF
		if $CC_FOR_BUILD -o "$dummy" "$dummy.c" && SYSTEM_NAME=`"$dummy"`
		then
			GUESS=$SYSTEM_NAME
		else
			GUESS=rs6000-ibm-aix3.2.5
		fi
	elif grep bos324 /usr/include/stdio.h >/dev/null 2>&1; then
		GUESS=rs6000-ibm-aix3.2.4
	else
		GUESS=rs6000-ibm-aix3.2
	fi
	;;
    *:AIX:*:[4567])
	IBM_CPU_ID=`/usr/sbin/lsdev -C -c processor -S available | sed 1q | awk '{ print $1 }'`
	if /usr/sbin/lsattr -El "$IBM_CPU_ID" | grep ' POWER' >/dev/null 2>&1; then
		IBM_ARCH=rs6000
	else
		IBM_ARCH=powerpc
	fi
	if test -x /usr/bin/lslpp ; then
		IBM_REV=`/usr/bin/lslpp -Lqc bos.rte.libc | \
			   awk -F: '{ print $3 }' | sed s/[0-9]*$/0/`
	else
		IBM_REV=$UNAME_VERSION.$UNAME_RELEASE
	fi
	GUESS=$IBM_ARCH-ibm-aix$IBM_REV
	;;
    *:AIX:*:*)
	GUESS=rs6000-ibm-aix
	;;
    ibmrt:4.4BSD:*|romp-ibm:4.4BSD:*)
	GUESS=romp-ibm-bsd4.4
	;;
    ibmrt:*BSD:*|romp-ibm:BSD:*)            # covers RT/PC BSD and
	GUESS=romp-ibm-bsd$UNAME_RELEASE    # 4.3 with uname added to
	;;                                  # report: romp-ibm BSD 4.3
    *:BOSX:*:*)
	GUESS=rs6000-bull-bosx
	;;
    DPX/2?00:B.O.S.:*:*)
	GUESS=m68k-bull-sysv3
	;;
    9000/[34]??:4.3bsd:1.*:*)
	GUESS=m68k-hp-bsd
	;;
    hp300:4.4BSD:*:* | 9000/[34]??:4.3bsd:2.*:*)
	GUESS=m68k-hp-bsd4.4
	;;
    9000/[34678]??:HP-UX:*:*)
	HPUX_REV=`echo "$UNAME_RELEASE" | sed -e 's/[^.]*.[0B]*//'`
	case $UNAME_MACHINE in
	    9000/31?)            HP_ARCH=m68000 ;;
	    9000/[34]??)         HP_ARCH=m68k ;;
	    9000/[678][0-9][0-9])
		if test -x /usr/bin/getconf; then
		    sc_cpu_version=`/usr/bin/getconf SC_CPU_VERSION 2>/dev/null`
		    sc_kernel_bits=`/usr/bin/getconf SC_KERNEL_BITS 2>/dev/null`
		    case $sc_cpu_version in
		      523) HP_ARCH=hppa1.0 ;; # CPU_PA_RISC1_0
		      528) HP_ARCH=hppa1.1 ;; # CPU_PA_RISC1_1
		      532)                      # CPU_PA_RISC2_0
			case $sc_kernel_bits in
			  32) HP_ARCH=hppa2.0n ;;
			  64) HP_ARCH=hppa2.0w ;;
			  '') HP_ARCH=hppa2.0 ;;   # HP-UX 10.20
			esac ;;
		    esac
		fi
		if test "$HP_ARCH" = ""; then
		    set_cc_for_build
		    sed 's/^		//' << EOF > "$dummy.c"

		#define _HPUX_SOURCE
		#include <stdlib.h>
		#include <unistd.h>

		int main ()
		{
		#if defined(_SC_KERNEL_BITS)
		    long bits = sysconf(_SC_KERNEL_BITS);
		#endif
		    long cpu  = sysconf (_SC_CPU_VERSION);

		    switch (cpu)
			{
			case CPU_PA_RISC1_0: puts ("hppa1.0"); break;
			case CPU_PA_RISC1_1: puts ("hppa1.1"); break;
			case CPU_PA_RISC2_0:
		#if defined(_SC_KERNEL_BITS)
			    switch (bits)
				{
				case 64: puts ("hppa2.0w"); break;
				case 32: puts ("hppa2.0n"); break;
				default: puts ("hppa2.0"); break;
				} break;
		#else  /* !defined(_SC_KERNEL_BITS) */
			    puts ("hppa2.0"); break;
		#endif
			default: puts ("hppa1.0"); break;
			}
		    exit (0);
		}
EOF
		    (CCOPTS="" $CC_FOR_BUILD -o "$dummy" "$dummy.c" 2>/dev/null) && HP_ARCH=`"$dummy"`
		    test -z "$HP_ARCH" && HP_ARCH=hppa
		fi ;;
	esac
	if test "$HP_ARCH" = hppa2.0w
	then
	    set_cc_for_build

	    # hppa2.0w-hp-hpux* has a 64-bit kernel and a compiler generating
	    # 32-bit code.  hppa64-hp-hpux* has the same kernel and a compiler
	    # generating 64-bit code.  GNU and HP use different nomenclature:
	    #
	    # $ CC_FOR_BUILD=cc ./config.guess
	    # => hppa2.0w-hp-hpux11.23
	    # $ CC_FOR_BUILD="cc +DA2.0w" ./config.guess
	    # => hppa64-hp-hpux11.23

	    if echo __LP64__ | (CCOPTS="" $CC_FOR_BUILD -E - 2>/dev/null) |
		grep -q __LP64__
	    then
		HP_ARCH=hppa2.0w
	    else
		HP_ARCH=hppa64
	    fi
	fi
	GUESS=$HP_ARCH-hp-hpux$HPUX_REV
	;;
    ia64:HP-UX:*:*)
	HPUX_REV=`echo "$UNAME_RELEASE" | sed -e 's/[^.]*.[0B]*//'`
	GUESS=ia64-hp-hpux$HPUX_REV
	;;
    3050*:HI-UX:*:*)
	set_cc_for_build
	sed 's/^	//' << EOF > "$dummy.c"
	#include <unistd.h>
	int
