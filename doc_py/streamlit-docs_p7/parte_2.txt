          styles.HeadingIconContainer,
          isCondensed ? styles.CondensedHeadingIconContainer : "",
          bgColor,
        )}
      >
        <i className={styles.Icon}>{page.icon}</i>
      </div>
      <p
        className={classNames(
          styles.CategoryName,
          isCondensed ? styles.CondensedCategoryName : "",
          fgColor,
        )}
      >
        {page.name}
      </p>
    </section>
  );

  if (page.children && page.children.length > 0) {
    subNav = (
      <ul
        className={classNames(
          styles.SubNav,
          isCondensed ? styles.CondensedSubNav : styles.ExpandedSubNav,
        )}
      >
        {page.children.map((child) => (
          <NavChild
            slug={slug}
            page={child}
            color={page.color}
            key={child.menu_key}
            depth={child.depth + 1}
            className={className}
          />
        ))}
      </ul>
    );
  }

  if (page.url.startsWith("/")) {
    navItem = (
      <li className={styles.NavItem} id={page.menu_key}>
        <Link className="not-link" href={page.url}>
          {navBox}
        </Link>
        {subNav}
      </li>
    );
  } else {
    navItem = (
      <li className={styles.NavItem} id={page.menu_key}>
        <a className="not-link" href={page.url} target="_blank">
          {navBox}
        </a>
        {subNav}
      </li>
    );
  }

  return navItem;
};

const BG_CLASS = {
  "red-70": styles.RedBackground,
  "orange-70": styles.OrangeBackground,
  "yellow-70": styles.YellowBackground,
  "green-70": styles.GreenBackground,
  "acqua-70": styles.AcquaBackground,
  "lightBlue-70": styles.LightBlueBackground,
  "darkBlue-70": styles.DarkBlueBackground,
  "indigo-70": styles.IndigoBackground,
  "gray-70": styles.GrayBackground,
  unset: styles.TransparentBackground,
};

const FG_CLASS = {
  "red-70": styles.RedForeground,
  "orange-70": styles.OrangeForeground,
  "yellow-70": styles.YellowForeground,
  "green-70": styles.GreenForeground,
  "acqua-70": styles.AcquaForeground,
  "lightBlue-70": styles.LightBlueForeground,
  "darkBlue-70": styles.DarkBlueForeground,
  "indigo-70": styles.IndigoForeground,
  "gray-70": styles.GrayForeground,
  unset: styles.TransparentForeground,
};

export default NavItem;


================================================
File: /components/navigation/navItem.module.css
================================================
.HeadingContainer {
  @apply relative flex items-center xl:justify-start xl:flex-nowrap xl:text-left xl:w-auto transition-all left-auto lg:left-2 xl:left-auto;
}

.HeadingIconContainer {
  @apply flex items-center p-2 mr-4 xl:mr-4 mb-0 rounded-md;
}

/* Design pass needed.
Centering the text under the icons when condensed creates misalignment.
Either complete the details for center alignment, or remove this to leave it left
justified. The condensed menu requires hover to expand, which isn't mobile-friendly.*/

/*
.CondensedHeadingContainer {
  @apply lg:flex-wrap lg:justify-center lg:text-center lg:w-min;
}

.CondensedHeadingIconContainer {
  @apply lg:mr-0;
}
*/

.Icon {
  @apply text-white !important;
}

/* Colors for heading icons */
.RedBackground {
  @apply bg-red-70;
}

.OrangeBackground {
  @apply bg-orange-70;
}

.YellowBackground {
  @apply bg-yellow-70;
}

.GreenBackground {
  @apply bg-green-70;
}

.AcquaBackground {
  @apply bg-acqua-70;
}

.LightBlueBackground {
  @apply bg-lightBlue-70;
}

.DarkBlueBackground {
  @apply bg-darkBlue-70;
}

.IndigoBackground {
  @apply bg-indigo-70;
}

.CategoryName {
  @apply m-0 xl:my-0 font-bold font-sans xl:text-base xl:leading-6;
  @apply text-gray-80 !important;
}

:global(.dark) .CategoryName {
  @apply text-gray-40 !important;
}

.CondensedCategoryName {
  @apply lg:my-1 lg:text-xs lg:leading-tight lg:tracking-tight;
}

/* Colors for active categories */
.RedForeground {
  @apply text-red-70;
}

.OrangeForeground {
  @apply text-orange-70;
}

.YellowForeground {
  @apply text-yellow-70;
}

.GreenForeground {
  @apply text-green-70;
}

.AcquaForeground {
  @apply text-acqua-70;
}

.LightBlueForeground {
  @apply text-lightBlue-70;
}

.DarkBlueForeground {
  @apply text-darkBlue-70;
}

.IndigoForeground {
  @apply text-indigo-70;
}

/* Subnav styles */
.SubNav {
  @apply block pl-14 m-0 mt-4 list-none;
}

.CondensedSubNav {
  @apply lg:hidden;
}

.ExpandedSubNav {
  @apply lg:block;
}

.NavItem {
  @apply mb-8;
}


================================================
File: /components/navigation/sideBar.js
================================================
import { debounce } from "lodash";
import React, { useState, useEffect } from "react";
import classNames from "classnames";

import bus from "../../lib/bus";
import NavItem from "../navigation/navItem";

import styles from "./sideBar.module.css";

const SideBar = ({ menu, slug }) => {
  const [isCondensed, setIsCondensed] = useState(false);
  const [isSticky, setIsSticky] = useState("none");
  const [isOver, setIsOver] = useState(false);
  const [isOpen, setIsOpen] = useState(false);
  const [theme, setTheme] = useState("light-mode");
  const [hasSlug, setHasSlug] = useState("");

  const handleTheme = () => {
    setTheme(document.body.dataset.theme);
  };

  const handleMouseEnter = () => {
    if (window.innerWidth < 1250 && window.innerWidth >= 1024) {
      setIsCondensed(false);
      setIsOver(true);
    }
  };

  const handleMouseLeave = () => {
    if (window.innerWidth < 1250 && window.innerWidth >= 1024) {
      setIsCondensed(true);
      setIsOver(false);
    }
  };

  const checkExpanded = () => {
    if (window.innerWidth < 1250 && window.innerWidth >= 1024) {
      setIsCondensed(true);
    } else {
      setIsCondensed(false);
    }
  };

  const handleScroll = (e) => {
    // We check if the user scrolled on the whole page
    const windowScroll = window.scrollY;
    // But we also check if the user hasn't scrolled on the page, but scrolled inside the sidebar
    const sideBarScroll = e.target.scrollTop;

    if (windowScroll > 20) {
      setIsSticky("window");
    } else if (sideBarScroll > 5) {
      setIsSticky("scrollbar");
    } else {
      setIsSticky("none");
    }
  };

  const debouncedCheckExpanded = debounce(checkExpanded, 200);

  useEffect(() => {
    window.addEventListener("resize", debouncedCheckExpanded);
    window.addEventListener("scroll", handleScroll);
    window.addEventListener("ChangeTheme", handleTheme);

    bus.on("streamlit_nav_open", () => setIsOpen(true));
    bus.on("streamlit_nav_closed", () => setIsOpen(false));

    checkExpanded();
    setHasSlug(window.location.href);

    return () => {
      window.removeEventListener("resize", debouncedCheckExpanded);
      window.removeEventListener("scroll", handleScroll);
      window.removeEventListener("ChangeTheme", handleTheme);
    };
  }, []);

  let navItems;
  navItems = menu.map((page) => (
    <NavItem
      slug={slug}
      key={page.menu_key}
      page={page}
      depth={page.depth + 1}
      condensed={isCondensed}
      // className={isOver && styles.OverNavItem}
    />
  ));

  return (
    <section
      className={classNames(
        styles.Container,
        isOpen ? styles.OpenNav : styles.ClosedNav,
        isOver ? styles.OverNav : styles.CollapsedNav,
        isSticky === "window" && styles.WindowStickyNav
      )}
      onScroll={(e) => handleScroll(e)}
    >
      <div
        className={classNames(
          styles.TopGradient,
          isSticky === "window"
            ? styles.WindowStickyGradient
            : isSticky === "scrollbar"
            ? styles.ScrollBarStickyGradient
            : styles.StandardGradient
        )}
      />
      <nav onMouseEnter={handleMouseEnter} onMouseLeave={handleMouseLeave}>
        <ul className={styles.NavList}>{navItems}</ul>
      </nav>
    </section>
  );
};

export default SideBar;


================================================
File: /components/navigation/sideBar.module.css
================================================
.Container {
  @apply fixed lg:sticky;
  @apply top-auto lg:top-12 left-0 xl:left-auto;
  @apply px-0 pb-64 h-screen z-20;
  @apply w-10/12 md:w-9/12 xl:w-screen max-w-xs md:max-w-none;
  @apply overflow-y-auto;
  @apply shadow-lg lg:shadow-none;
  @apply transition-all;
  @apply bg-white !important;
}

:global(.dark) .Container {
  @apply bg-gray-100 !important;
}

.OpenNav {
  @apply block md:max-w-xs;
  @apply md:w-full !important;
}

.ClosedNav {
  @apply hidden lg:block;
}

.CollapsedNav {
  @apply w-full md:w-36 lg:w-full;
}

.OverNav {
  @apply md:w-full;
}

.OverNavItem {
  @apply lg:hidden xl:block;
}

.NavList {
  @apply list-none overscroll-contain m-0 px-2 lg:px-0;
}

/* Top gradient styles when scrolling */
.TopGradient {
  @apply hidden lg:block fixed top-0 w-full bg-gradient-to-b from-white z-10 max-w-[280px] lg:max-w-[240px] xl:max-w-[280px];
}

:global(.dark) .TopGradient {
  @apply from-gray-100;
}

/* Sticky styles */
.WindowStickyNav {
  @apply top-0 lg:top-12;
}

.WindowStickyNav nav {
  @apply pt-16 lg:pt-4;
}

.WindowStickyGradient {
  @apply top-12 h-4;
}

.ScrollBarStickyGradient {
  @apply top-24 h-4;
}


================================================
File: /components/utilities/breadCrumbs.js
================================================
import React from "react";
import { breadcrumbsForSlug } from "../../lib/utils.js";
import Link from "next/link";

import styles from "./breadCrumbs.module.css";

const BreadCrumbs = ({ slug, menu }) => {
  const formatedTitle = (title) => {
    return `${title}`.replace(/\-/g, " ").replace(/\bapi\b/, "API");
  };

  const createCrumb = (crumb, index, slug) => {
    let formatedCrumb;
    if (index == slug.length) {
      formatedCrumb = (
        <Link
          href={crumb.link}
          className={`not-link ${styles.ActiveLink} ${styles.Link}`}
        >
          {crumb.title}
        </Link>
      );
    } else {
      formatedCrumb = (
        <>
          <Link href={crumb.link} className={`not-link ${styles.Link}`}>
            {crumb.title}
          </Link>
          <span className={styles.Separator}>/</span>
        </>
      );
    }
    return formatedCrumb;
  };

  const breadcrumbs = [];
  if (slug === undefined) {
    return "";
  }
  let paths = slug.join("/");
  breadcrumbs.push({
    link: "/",
    title: "Home",
  });

  const isnum = /^[\d\.]+$/.test(slug[0]);
  const isSiS = /^SiS[\d\.]*$/.test(slug[0]);
  if (isnum || isSiS) {
    paths = slug.slice(1).join("/");
    breadcrumbs.push({
      link: "#",
      title: slug[0],
    });
  }

  // Find the menu with the current slug
  const location = `/${paths}`;
  const path = breadcrumbsForSlug(menu, location, []);

  // If there's a missing entry in menu.md, throw a build error.
  // But first, we should exclude files that aren't pages.
  const filesToExclude = [];

  // Let's start with files that start with a dot, such as .keep and .DS_Store
  if (slug.slice()[0].startsWith(".")) {
    filesToExclude.push(slug.slice().join("/"));
  }

  // Then, we add a couple pages that don't need breadcrumbs, such as /menu, /index, etc.
  filesToExclude.push("index", "gdpr-banner", "menu", "cookie-settings");

  // Now, we throw the error if any page that's not on the filesToExclude array is missing in menu.md
  if (path.length === 0 && !filesToExclude.includes(slug[0])) {
    throw new Error(
      `This slug: ${slug
        .slice()
        .join(
          "/",
        )} doesn't have a corresponding entry in menu.md. Please add it, and if you don't want this entry to show up in the sidebar, add the "visible: false" property to the entry.`,
    );
  }

  path.forEach((obj) => {
    if (obj.url === location) {
      breadcrumbs.push({
        link: location,
        title: formatedTitle(obj.name),
      });
    } else {
      breadcrumbs.push({
        link: obj.url,
        title: formatedTitle(obj.name),
      });
    }
  });

  if (breadcrumbs.length === 1) {
    breadcrumbs.push({
      link: location,
      title: paths,
    });
  }

  return (
    <nav>
      <ul className={styles.Container}>
        {breadcrumbs.map((crumb, index) => (
          <li key={`${crumb}-${index}`} className={styles.InnerContainer}>
            {createCrumb(crumb, index, slug)}
          </li>
        ))}
      </ul>
    </nav>
  );
};

export default BreadCrumbs;


================================================
File: /components/utilities/breadCrumbs.module.css
================================================
/* TODO: Remove !important when done moving to Tailwind */
.Container {
  @apply flex flex-wrap list-none ml-0 pl-0 mt-0 mb-1;
}

.InnerContainer {
  @apply text-sm mr-2 mb-0;
}

.Link {
  @apply hover:opacity-70;
  @apply text-gray-70 !important;
}

.ActiveLink {
  @apply font-bold;
}

:global(.dark) .Link {
  @apply text-gray-70 !important;
}

.Separator {
  @apply ml-2;
  @apply text-gray-50 !important;
}

:global(.dark) .Separator {
  @apply text-gray-70 !important;
}


================================================
File: /components/utilities/cookieSettingsModal.js
================================================
import classNames from "classnames";

import content from "../../content/cookie-settings.md";

import styles from "./cookieSettingsModal.module.css";

export default function CookieSettingsModal({
  setIsTelemetryModalVisible,
  declineTelemetryAndCloseBanner,
  allowTelemetryAndCloseBanner,
}) {
  return (
    <div className="fixed w-full h-full z-40 bg-gray-90 bg-opacity-90 top-0 flex items-center justify-center">
      <div
        className={classNames(
          styles.Container,
          "relative",
          "bg-white rounded-xl",
          "p-8 md:p-12",
          "w-full max-w-4xl",
          "overscroll-none overflow-y-auto",
          "max-h-screen",
        )}
      >
        <button
          className="absolute right-4 top-4 md:right-11 md:top-11 fill-gray-70"
          onClick={() => setIsTelemetryModalVisible(false)}
        >
          <svg
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 -960 960 960"
            className="mt-2 w-8 h-8 hover:bg-gray-30 rounded"
          >
            <path d="m253.897-229.795-24.102-24.102L455.897-480 229.795-706.103l24.102-24.102L480-504.103l226.103-226.102 24.102 24.102L504.103-480l226.102 226.103-24.102 24.102L480-455.897 253.897-229.795Z" />
          </svg>
        </button>
        <div dangerouslySetInnerHTML={{ __html: content.html }} />
        <button
          className={classNames(
            "mt-4 md:mt-8",
            "py-2 px-3",
            "text-gray-90",
            "border-gray-90 border",
            "rounded",
            "hover:bg-gray-90",
            "hover:text-white",
            "active:bg-gray-90",
            "active:text-white",
          )}
          onClick={declineTelemetryAndCloseBanner}
        >
          Reject all
        </button>
        <button
          className={classNames(
            "mt-4 md:mt-8 ml-4",
            "py-2 px-3",
            "text-gray-90",
            "border-gray-90 border",
            "rounded",
            "hover:bg-gray-90",
            "hover:text-white",
            "active:bg-gray-90",
            "active:text-white",
          )}
          onClick={allowTelemetryAndCloseBanner}
        >
          Accept all
        </button>
      </div>
    </div>
  );
}


================================================
File: /components/utilities/cookieSettingsModal.module.css
================================================
.Container > div {
  @apply text-gray-90 grid grid-cols-1 gap-4 text-base leading-loose;
}

.Container h1,
.Container h2,
.Container h3,
.Container h4,
.Container h5,
.Container h6 {
  @apply scroll-mt-0 md:scroll-mt-32;
}

.Container h2,
.Container h3,
.Container h4,
.Container h5 {
  @apply mt-4 text-lg font-bold text-gray-90;
}

.Container h2 {
  @apply text-xl;
}

.Container h3 {
  @apply text-2xl;
}

.Container h2:first-child,
.Container h3:first-child,
.Container h4:first-child,
.Container h5:first-child {
  @apply mt-0;
}

.Container p {
  @apply text-gray-90;
}

.Container a {
  @apply underline;
}

.Container a:hover {
  @apply opacity-80;
}

.Container ol {
  @apply list-decimal pl-8 grid grid-cols-1 gap-4;
}

.Container section ol {
  @apply list-none pl-0 gap-0 mb-5;
}

.Container ul {
  @apply list-disc pl-8 grid grid-cols-1 gap-4;
}

.Container li {
  @apply pl-2;
}

.Container blockquote {
  @apply p-6 md:p-8 lg:p-16
    -mx-6 md:-mx-8 lg:-mx-16
    my-0 md:my-4 lg:my-12
    grid grid-cols-1 gap-4
    bg-lightBlue-10
    text-gray-80
    rounded-lg;
}

.PrivacyContainer blockquote ~ h4 {
  @apply mt-12 md:mt-8 lg:mt-0 text-gray-90;
}

.PrivacyContainer blockquote h2 {
  @apply hidden;
}

.Container blockquote h2 {
  @apply text-gray-90 text-3xl;
}

.Container hr {
  @apply border-gray-40 border-t-0 border-l-0 border-r-0 border-b my-8;
}

.Container address {
  @apply whitespace-pre-line pl-4 border-l-2 border-gray-30 mt-4;
}

.Container pre {
  @apply bg-gray-10 p-4 rounded-md overflow-x-auto text-gray-90;
}

.Container pre code {
  @apply text-lg;
}

.Container figure {
  @apply flex flex-col items-start;
}

.Container figure img {
  @apply h-24 ml-2 mb-2;
}

.Container figure figcaption {
  @apply text-sm text-gray-70;
}

/* For table in Privacy notice */
.Container table {
  @apply table-fixed my-8 w-full;
}

.Container table thead tr th {
  @apply px-4 py-3 text-left bg-gray-20 bg-opacity-50 border border-gray-30 text-gray-90 font-semibold text-lg leading-normal align-top;
}

.Container table tbody tr td {
  @apply px-4 py-3 border border-gray-30 text-gray-90 text-lg leading-normal align-top;
}

.DeploymentTerms ul,
.DeploymentTerms ol {
  @apply list-none;
}

/* Specific classes for colors */
.Container:global(.red) a {
  @apply text-red-70;
}

.Container:global(.orange) a {
  @apply text-orange-70;
}

.Container:global(.yellow) a {
  @apply text-yellow-90;
}

.Container:global(.green) a {
  @apply text-green-70;
}

.Container:global(.acqua) a {
  @apply text-acqua-70;
}

.Container:global(.lightBlue) a {
  @apply text-lightBlue-70;
}

.Container:global(.darkBlue) a {
  @apply text-darkBlue-70;
}

.Container:global(.indigo) a {
  @apply text-indigo-70;
}

.Container:global(.gray) a {
  @apply text-gray-70;
}


================================================
File: /components/utilities/download.js
================================================
import styles from "./download.module.css";

// Simple horizontal flex container used for MDX.
const Download = ({ href, children }) => {
  return (
    <a href={href} className={styles.Link} rel="nofollow noopener" download>
      {children}
    </a>
  );
};

export default Download;


================================================
File: /components/utilities/download.module.css
================================================
.Link {
  @apply font-sans text-base tracking-tight border-b border-b-gray-90 dark:border-b-white dark:hover:border-b-red-70 hover:border-b-red-70 hover:opacity-70;
  @apply text-gray-90 !important;
}

:global(.dark) .Link {
  @apply text-gray-40 border-b-white !important;
}


================================================
File: /components/utilities/floatingNav.js
================================================
import React, { useState, useEffect, useRef } from "react";
import { withRouter } from "next/router";

import styles from "./floatingNav.module.css";

const useHeadingsData = (slug) => {
  const [nestedHeadings, setNestedHeadings] = useState([]);

  useEffect(() => {
    const headingElements = Array.from(
      document.querySelectorAll(
        "article.leaf-page h1, article.leaf-page h2, article.leaf-page h3, article.leaf-page h4, article.leaf-page h5, article.leaf-page h6"
      )
    );

    // If first heading is H1, remove since we don't want to show the main title on the TOC
    if (headingElements[0].nodeName == "H1") {
      headingElements.shift();
    }

    const newNestedHeadings = getNestedHeadings(headingElements);
    setNestedHeadings(newNestedHeadings);
  }, [slug]);

  return { nestedHeadings };
};

const getNestedHeadings = (headingElements) => {
  const nestedHeadings = [];

  for (const index in headingElements) {
    const ele = headingElements[index];

    // Check if the heading belongs to a component. If so, let's skip it to avoid cluttering the side nav
    const parentElem = ele.parentElement;
    const isParentExternal =
      (parentElem.href && parentElem.href.includes("github")) ||
      (parentElem.href && parentElem.href.includes("streamlit.app"));

    if (ele.getElementsByTagName === undefined || isParentExternal === true) {
      continue;
    }
    const hrefs = ele.getElementsByTagName("a");
    if (hrefs.length > 0) {
      const target = hrefs[0].getAttribute("href");
      nestedHeadings.push({
        label: ele.innerText,
        target: target,
        level: ele.tagName,
      });
    }
  }

  return nestedHeadings;
};

// This is the function that initializes the intersection observer, and attaches it to the elements we want to track, our page headings
const useIntersectionObserver = (slug) => {
  const [activeId, setActiveId] = useState();

  useEffect(() => {
    // Get all links inside the headers we care about.
    const headingLinks = Array.from(
      document.querySelectorAll(
        [
          "article.leaf-page h1 a:first-of-type",
          "article.leaf-page h2 a:first-of-type",
          "article.leaf-page h3 a:first-of-type",
          "article.leaf-page h4 a:first-of-type",
          "article.leaf-page h5 a:first-of-type",
          "article.leaf-page h6 a:first-of-type",
        ].join(",")
      )
    );

    // Function that will be called when the links enter/leave the screen.
    const callback = (headings) => {
      // Traverse backwards through all elements to find the bottom-most visible element.
      // Set that as the active one.
      for (let i = 0; i < headings.length; i++) {
        if (headings[i].isIntersecting) {
          setActiveId(headings[i].target.getAttribute("href"));
          break;
        }
      }
    };

    // Create an intersection observer, to track when the links enter/leave.
    const observer = new IntersectionObserver(callback, {
      threshold: 1.0,
      rootMargin: "0px 0px -200px 0px",
    });

    headingLinks.forEach((element) => observer.observe(element));
    return () => observer.disconnect();
  }, [slug]);

  return activeId;
};

const FloatingNav = ({ menu, slug }) => {
  const { nestedHeadings } = useHeadingsData(slug);
  const activeId = useIntersectionObserver(slug);

  return nestedHeadings.length > 1 ? (
    <div
      className={`
        ${styles.ListContainer}
        ${
          // The way the current CSS works, we need to have a .toc class, not only to style the floating nav component, but also to ensure the .content area gets narrowed by ~225px so the floating nav fits the screen.
          // TODO: When all components are refactored, we might want to use a different layout method (flexbox or grid) to avoid this
          `toc`
        }
      `}
    >
      <div className={styles.TopGradient} />
      <ol
        className={`
          ${styles.List}
        `}
      >
        <li
          className={`
            ${styles.ListItem}
            ${styles.ListTitle}
          `}
        >
          Contents
        </li>
        <Headings headings={nestedHeadings} activeId={activeId} />
      </ol>
    </div>
  ) : (
    ""
  );
};

const Headings = ({ headings, activeId }) => {
  // Function to get the unique hierarchies for the headings.
  // For example, we could have [H1, H2, H3] but also [H1, H4],
  // and we want the indentation to acommodate for these situations.
  const uniqueHierarchies = [...new Set(headings.map((item) => item.level))];

  const sortedHeadings = uniqueHierarchies.map((hierarchy, index) =>
    headings.filter((heading) => {
      if (heading.level === hierarchy) {
        heading.hierarchy = index;
      }
      return heading;
    })
  );

  return (
    <>
      {sortedHeadings[0].map((heading, index) => (
        <Heading
          key={index}
          heading={heading}
          index={index}
          activeId={activeId}
        />
      ))}
    </>
  );
};

const Heading = ({ heading, index, activeId }) => {
  return (
    <li
      className={styles.ListItem}
      data-hierarchy={heading.hierarchy}
      key={`toc-${index}`}
    >
      <a
        href={heading.target}
        className={`
          ${styles.Link}
          ${heading.target === activeId ? styles.activeLink : ""}
        `}
      >
        {heading.label}
      </a>
    </li>
  );
};

export default withRouter(FloatingNav);


================================================
File: /components/utilities/floatingNav.module.css
================================================
.ListContainer {
  @apply absolute right-0 top-0 h-full w-56 z-10 hidden 3xl:w-64;
}

.List {
  @apply sticky top-24 m-0 pl-6 list-none overflow-y-auto overflow-x-hidden;
  max-height: calc(100vh - (6em * 2));
}

.ListItem {
  @apply m-0 text-xs pt-1;
}

.TopGradient {
  @apply absolute h-6 w-full bg-gradient-to-b from-white z-10;
}

:global(.dark) .TopGradient {
  @apply from-gray-100;
}

/* Contents Title */
.ListTitle {
  @apply pt-6 uppercase font-semibold tracking-widest;
  @apply text-gray-60 !important;
}

/* Styles for the active item on the floating nav */
.Link {
  @apply border-none inline-block pr-2 w-40 leading-4 hover:opacity-70 hover:no-underline 3xl:w-48;
  @apply text-gray-70 !important;
}

.activeLink {
  @apply text-gray-100 !important;
}

:global(.dark) .activeLink {
  @apply text-gray-40 !important;
}

/* Paddings for different title hierarchies */
.List li[data-hierarchy="0"] {
  @apply pl-0;
}

.List li[data-hierarchy="1"] {
  @apply pl-6;
}

.List li[data-hierarchy="2"] {
  @apply pl-10;
}

.List li[data-hierarchy="3"] {
  @apply pl-12;
}

.List li[data-hierarchy="4"] {
  @apply pl-14;
}

.List li[data-hierarchy="5"] {
  @apply pl-16;
}

.List li[data-hierarchy="6"] {
  @apply pl-20;
}


================================================
File: /components/utilities/gdpr.js
================================================
import React, { useEffect } from "react";
import classNames from "classnames";

import content from "../../content/gdpr-banner.md";

import styles from "./gdpr.module.css";

const TELEMETRY_PREFERENCE = "InsertTelemetry";
const TELEMETRY_PREFERENCE_DATE = "TelemetryDate";

export function setTelemetryPreference(accepted) {
  localStorage.setItem(TELEMETRY_PREFERENCE, JSON.stringify(accepted));
  localStorage.setItem(TELEMETRY_PREFERENCE_DATE, JSON.stringify(Date.now()));
}

// Check if the stored date is > 6 months old
const isConsentStale = (timestamp) => {
  const consent_date = new Date(parseInt(timestamp * 1000));
  const today = new Date();

  const six_months_in_ms =
    1000 /*ms*/ * 60 /*s*/ * 60 /*min*/ * 24 /*h*/ * 30 /*days*/ * 6; /*months*/
  return today - consent_date > six_months_in_ms;
};

function getTelemetryPreference() {
  // Returns true/false if user accepted/denied telemetry.
  // Returns null if user never accepted/denied or consent is stale.

  const telemetryPref = localStorage.getItem(TELEMETRY_PREFERENCE);
  const consentIsStale = isConsentStale(
    localStorage.getItem(TELEMETRY_PREFERENCE_DATE),
  );

  if (telemetryPref == null || consentIsStale) return null;

  return telemetryPref == "true";
}

export default function GDPRBanner({
  isTelemetryModalVisible,
  setIsTelemetryModalVisible,
  isTelemetryBannerVisible,
  setIsTelemetryBannerVisible,
  insertTelemetryCode,
  setInsertTelemetryCode,
  allowTelemetryAndCloseBanner,
  declineTelemetryAndCloseBanner,
}) {
  useEffect(() => {
    const pref = getTelemetryPreference();

    switch (pref) {
      case true:
        setInsertTelemetryCode(true);
        return;

      case false:
        // This is already false at initialization, but it doesn't hurt to do the right thing
        // here and make sure it's indeed false.
        setInsertTelemetryCode(false);
        return;

      case null:
        localStorage.clear(); // Do we even need this line?? Seems dangerous to just clear the entire localStorage, as maybe some other library could be using it.
        setIsTelemetryBannerVisible(true);
        return;

      default:
        console.log(`Unexpected telemetry preference: ${pref}`);
        return;
    }
  }, []);

  useEffect(() => {
    if (insertTelemetryCode) {
      insertTelemetry();
    }
  }, [insertTelemetryCode]);

  return (
    <>
      {isTelemetryBannerVisible && (
        <div
          className={classNames(
            isTelemetryBannerVisible === false ? "hidden" : "",
            "z-30 fixed",
            "bottom-2 inset-x-2 md:bottom-4 md:inset-x-4",
          )}
        >
          <div
            className={classNames(
              "flex flex-col xl:flex-row xl:items-end gap-4",
              "pl-4 pr-4 sm:pl-8 sm:pr-8",
              "rounded-lg border border-gray-30",
              "shadow-lg",
              "container mx-auto py-8",
              styles.Container,
            )}
          >
            <div
              className={classNames("flex-1", styles.Markdown)}
              dangerouslySetInnerHTML={{ __html: content.html }}
            />
            <div className="flex flex-col lg:flex-row lg:justify-end gap-2 lg:gap-4">
              <button
                className={classNames(
                  "text-gray-90 hover:text-gray-70 hover:underline",
                  "py-2",
                  "order-last lg:order-none",
                  styles.Button,
                )}
                onClick={() =>
                  setIsTelemetryModalVisible(!isTelemetryModalVisible)
                }
              >
                Cookie settings
              </button>
              <button
                className={classNames(
                  "py-2 px-3",
                  "text-gray-90",
                  "border-gray-90 border",
                  "rounded",
                  "hover:bg-red-70 hover:border-red-70",
                  "hover:text-white",
                  styles.Button,
                )}
                onClick={declineTelemetryAndCloseBanner}
              >
                Reject all
              </button>
              <button
                className={classNames(
                  "py-2 px-3",
                  "rounded",
                  "border",
                  "text-white",
                  "bg-gray-90 border-gray-90",
                  "hover:bg-red-70 hover:border-red-70",
                  styles.Button,
                )}
                onClick={allowTelemetryAndCloseBanner}
              >
                Accept all
              </button>
            </div>
          </div>
        </div>
      )}
    </>
  );
}

function insertTelemetry() {
  (function () {
    var analytics = (window.analytics = window.analytics || []);
    if (!analytics.initialize)
      if (analytics.invoked)
        window.console &&
          console.error &&
          console.error("Segment snippet included twice.");
      else {
        analytics.invoked = !0;
        analytics.methods = [
          "trackSubmit",
          "trackClick",
          "trackLink",
          "trackForm",
          "pageview",
          "identify",
          "reset",
          "group",
          "track",
          "ready",
          "alias",
          "debug",
          "page",
          "once",
          "off",
          "on",
          "addSourceMiddleware",
          "addIntegrationMiddleware",
          "setAnonymousId",
          "addDestinationMiddleware",
        ];
        analytics.factory = function (e) {
          return function () {
            var t = Array.prototype.slice.call(arguments);
            t.unshift(e);
            analytics.push(t);
            return analytics;
          };
        };
        for (var e = 0; e < analytics.methods.length; e++) {
          var key = analytics.methods[e];
          analytics[key] = analytics.factory(key);
        }
        analytics.load = function (key, e) {
          var t = document.createElement("script");
          t.type = "text/javascript";
          t.async = !0;
          t.src =
            "https://cdn.segment.com/analytics.js/v1/" +
            key +
            "/analytics.min.js";
          var n = document.getElementsByTagName("script")[0];
          n.parentNode.insertBefore(t, n);
          analytics._loadOptions = e;
        };
        analytics._writeKey = "pUoB6ihRTAFLDtLp2NWEuJvBNtiooQwE";
        analytics.SNIPPET_VERSION = "4.13.2";
        analytics.load("pUoB6ihRTAFLDtLp2NWEuJvBNtiooQwE");
        analytics.page();
      }
  })();
}


================================================
File: /components/utilities/gdpr.module.css
================================================
.Container {
  backdrop-filter: blur(10px);
  background: #fffd;
}

.Markdown div {
  @apply flex flex-col;
}

.Markdown h1 {
  @apply text-gray-90 text-lg sm:text-xl font-bold mb-1;
}

.Markdown p {
  @apply text-gray-90 text-base mb-0;
}

.Markdown p a {
  @apply text-gray-90 underline hover:text-gray-70;
}

:global(.dark) .Container {
  @apply bg-gray-100 border-gray-90;
}

:global(.dark) .Markdown p,
:global(.dark) .Markdown p a {
  @apply text-gray-40;
}

:global(.dark) .Link,
:global(.dark) .Button {
  @apply text-gray-40;
}

:global(.dark) .Button {
  @apply border-gray-80;
}

:global(.dark) .Markdown h1 {
  @apply text-gray-40;
}


================================================
File: /components/utilities/headerLink.js
================================================
import React, { useState, useEffect } from "react";
import slugify from "slugify";
import classNames from "classnames";

import styles from "./headerLink.module.css";

const HeaderLink = ({ name, level, className, children }) => {
  const hash = name
    ? slugify(name, { remove: /[^A-Za-z0-9_\s]/g, lower: true })
    : "";
  const [copied, setCopied] = useState(false);

  useEffect(() => {
    if (window.location.hash !== `#${hash}`) {
      return;
    }

    const el = document.querySelector(`[name=${hash}]`);
    if (el) {
      el.scrollIntoView(true);
    }
  }, []);

  const copyLinkUnbound = async () => {
    const link = `${window.location.host}${window.location.pathname}#${hash}`;
    await navigator.clipboard.writeText(link);
    window.location.hash = hash;

    setCopied(true);
    window.setTimeout(() => setCopied(false), 2000);
  };

  // Check if there's a <code> tag in the heading, so we can style it properly.
  // If we're getting something back, that means there is one, so we will wrap
  // the header contents in <span> to prevent it from flexing
  const withInlineCode = Array.from(children).find(
    (child) => child?.type === "code",
  );

  const Header = `h${level}`;
  return (
    <>
      <a name={hash} className={styles.HashLink} />

      <Header
        className={classNames(styles.HeaderContainer, "group", className)}
      >
        {withInlineCode ? <span>{children}</span> : children}

        {copied ? (
          <div className={styles.CopiedMessage}>
            <i className={styles.CopiedIcon}>done</i>
            Copied
          </div>
        ) : (
          <div className={styles.CopyLink} onClick={copyLinkUnbound}>
            <svg
              width="14"
              height="17"
              viewBox="0 0 14 17"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                fillRule="evenodd"
                clipRule="evenodd"
                d="M10.7548 0.0313721C10.7051 0.0194702 10.6571 0.00793457 10.609 0H9.87278C9.83686 0.0178223 9.81891 0.0356445 9.783 0.0356445C9.20842 0.124878 8.70565 0.374573 8.29268 0.784851L4.14488 4.90521C3.57029 5.47601 3.283 6.18951 3.31892 7.01001C3.33686 7.38464 3.42665 7.74133 3.60621 8.09808L4.43217 7.27759C4.46809 7.25977 4.46809 7.18842 4.46809 7.15271C4.41421 6.59979 4.57582 6.11816 4.97085 5.72577L8.54405 2.17615L9.13659 1.58752C9.76504 0.998901 10.7167 0.998901 11.3452 1.58752C12.0095 2.21179 12.0095 3.2464 11.3452 3.90637L7.25123 7.97327C6.8562 8.36566 6.38936 8.54401 5.83273 8.49054C5.77885 8.47266 5.72499 8.47272 5.68908 8.50836L4.86311 9.32886C4.95289 9.36456 5.00676 9.40021 5.06062 9.41803C6.15593 9.81049 7.17941 9.66779 8.02333 8.84729C9.45979 7.45599 10.8783 6.06464 12.2609 4.6377C13.7333 3.12152 12.9971 0.606445 10.9501 0.0713501C10.8805 0.0614624 10.8164 0.0461426 10.7548 0.0313721ZM7.34082 7.47388C7.62811 7.2063 7.9154 6.9209 8.20269 6.6355C8.18016 6.62988 8.16114 6.62427 8.14401 6.6192C8.10655 6.60822 8.07805 6.59985 8.04109 6.59985C7.03556 6.15393 5.83253 6.3501 5.04246 7.11713C3.606 8.52625 2.1875 9.93542 0.768994 11.3624C0.14053 11.9867 -0.0928837 12.7715 0.032803 13.6277C0.194409 14.7515 0.840817 15.5184 1.9002 15.8752C2.97755 16.2319 3.94717 16.0001 4.75517 15.2152C5.6766 14.3118 6.59005 13.4004 7.50616 12.4864C7.96467 12.0289 8.42384 11.5708 8.88501 11.1127C9.56733 10.4348 9.81871 9.61432 9.67506 8.66895C9.63916 8.41925 9.56733 8.16949 9.42369 7.9198C9.13639 8.2052 8.8491 8.47272 8.57975 8.75812C8.54385 8.776 8.54385 8.84735 8.54385 8.90082C8.61567 9.41809 8.47203 9.8819 8.09495 10.2565C6.71235 11.6478 5.31181 13.0391 3.91125 14.4125C3.51623 14.8228 2.99551 14.9655 2.43889 14.8406C1.81042 14.6979 1.4154 14.3234 1.23584 13.7347C1.05629 13.1282 1.19993 12.5753 1.64882 12.1294C2.34011 11.4337 3.03141 10.747 3.72271 10.0603C4.41401 9.37354 5.10531 8.68677 5.79661 7.99115C6.17369 7.59869 6.65849 7.45599 7.19717 7.50952C7.25103 7.50952 7.3049 7.50952 7.34082 7.47388Z"
                fill="#808495"
              />
            </svg>
          </div>
        )}
      </Header>
    </>
  );
};

export default HeaderLink;


================================================
File: /components/utilities/headerLink.module.css
================================================
.HashLink {
  @apply no-underline block h-0 w-0 overflow-hidden invisible pointer-events-none;
}

.HeaderContainer {
  @apply flex items-center font-bold text-gray-90 leading-snug;
  overflow-wrap: anywhere;
}

.HeaderContainer strong {
  @apply font-bold;
}

h1.HeaderContainer {
  @apply leading-tight;
}

.CopiedMessage {
  @apply ml-4 text-xs font-normal opacity-70 flex items-center tracking-tight;
  @apply text-gray-90 !important;
}

.CopiedIcon {
  @apply text-gray-90 !important;
}

:global(.dark) .HeaderContainer,
:global(.dark) .CopiedMessage,
:global(.dark) .CopiedIcon {
  @apply text-gray-40 !important;
}

.CopyLink {
  @apply cursor-pointer ml-4 pt-1 opacity-0 flex items-center hover:opacity-90 group-hover:opacity-90;
}


================================================
File: /components/utilities/helpful.js
================================================
import React, { useState, useEffect, useRef } from "react";
import pull from "lodash/pull";
import router, { withRouter } from "next/router";

import styles from "./helpful.module.css";

import SuggestEdits from "./suggestEdits";

const Helpful = ({ slug, sourcefile }) => {
  const formRef = useRef();
  const [step, setStep] = useState(0);
  const [isHelpful, setIsHelpful] = useState(true);
  const [feedback, setFeedback] = useState({
    other: false,
    improvements: [],
    notes: "",
    improvementsString: "",
    moreExamples: false,
    clearerSteps: false,
    moreInformation: false,
    other: false,
  });

  const handleStep = (newStep) => {
    setStep(newStep);
    if (newStep == 1) {
      setStep(1);
      setIsHelpful(false);
    }
    if (newStep == 2) {
      submitForm();
    }
  };

  const submitForm = () => {
    if (formRef && formRef.current) {
      const data = new FormData(formRef.current);
      fetch("/", {
        method: "POST",
        headers: { "Content-Type": "application/x-www-form-urlencoded" },
        body: new URLSearchParams(data).toString(),
      });
    }
  };

  const handleOther = () => {
    setFeedback({ ...feedback, other: !feedback.other });
  };

  const handleImprovement = (e) => {
    const improvements = feedback.improvements.slice();
    const target = e.target;
    const value = target.type === "checkbox" ? target.checked : target.value;
    const name = target.name;

    if (value && !improvements.includes(name)) {
      improvements.push(name);
    }

    if (!value && improvements.includes(name)) {
      pull(improvements, name);
    }

    setFeedback({
      ...feedback,
      [name]: value,
      improvements,
      improvementsString: improvements.join(","),
    });
  };

  const handleNoteChange = (event) => {
    setFeedback({ ...feedback, notes: event.target.value });
  };

  const handleRouteChange = () => {
    setFeedback({
      ...feedback,
      improvements: [],
      improvementsString: "",
    });
    setStep(0);
    setIsHelpful(true);
  };

  // Perform the route change cleanup function for the Helpful component inside a useEffect call,
  // instead of using router.events.on("routeChangeComplete", handleRouteChange), because that
  // adds new events progressively as you keep browsing the website, thus eventually leading to a memory leak.
  useEffect(() => {
    return () => {
      handleRouteChange();
    };
  }, [sourcefile]);

  let joinedSlug = "/";
  if (slug) {
    joinedSlug = `/${slug.join("/")}`;
  }

  let otherText;
  if (feedback.other) {
    otherText = (
      <textarea
        name="other-text"
        onChange={handleNoteChange}
        value={feedback.notes}
        placeholder="Please let us know how we can improve this page (optional)"
        rows="4"
        className={styles.Textarea}
      />
    );
  }

  let block;
  if (step == 0) {
    block = (
      <section className={styles.Container}>
        <p className={styles.Title}>Was this page helpful?</p>
        <section className={styles.CtaContainer}>
          <button onClick={() => handleStep(2)} className={styles.Button}>
            <i className={styles.Icon}>thumb_up</i>
            Yes
          </button>
          <button onClick={() => handleStep(1)} className={styles.Button}>
            {" "}
            <i className={styles.Icon}>thumb_down</i>
            No
          </button>
        </section>
      </section>
    );
  }
  if (step == 1) {
    block = (
      <section>
        <h4 className={styles.ImproveTitle}>How can we improve this page?</h4>
        <p className={styles.ImproveText}>Select all that apply</p>
        <div className={styles.InputContainer}>
          <input
            className={styles.Input}
            onChange={(e) => handleImprovement(e)}
            type="checkbox"
            id="moreExamples"
            name="moreExamples"
            checked={feedback.moreExamples}
          />
          <label htmlFor="more-examples" className={styles.Label}>
            More examples
          </label>
          <br />
        </div>
        <div className={styles.InputContainer}>
          <input
            className={styles.Input}
            onChange={(e) => handleImprovement(e)}
            type="checkbox"
            id="clearerSteps"
            name="clearerSteps"
            checked={feedback.clearerSteps}
          />
          <label htmlFor="clearerSteps" className={styles.Label}>
            Clearer steps
          </label>
          <br />
        </div>
        <div className={styles.InputContainer}>
          <input
            className={styles.Input}
            onChange={(e) => handleImprovement(e)}
            type="checkbox"
            id="moreInformation"
            name="moreInformation"
            checked={feedback.moreInformation}
          />
          <label htmlFor="moreInformation" className={styles.Label}>
            More information
          </label>
          <br />
        </div>
        <div className={styles.InputContainer}>
          <input
            className={styles.Input}
            onChange={(e) => handleImprovement(e)}
            type="checkbox"
            id="other"
            name="other"
            checked={feedback.other}
          />
          <label htmlFor="other" className={styles.Label}>
            Other
          </label>
          <br />
        </div>
        {otherText}
        <button onClick={() => handleStep(2)} className={styles.SubmitCTA}>
          Submit
        </button>
      </section>
    );
  }
  if (step == 2) {
    block = (
      <section>
        <p className={styles.Title}>Thank you for your feedback!</p>
      </section>
    );
  }

  return (
    <section className={styles.FormContainer}>
      <form
        name="helpful"
        method="POST"
        data-netlify="true"
        ref={formRef}
        netlify-honeypot="required-email"
        className={styles.Form}
      >
        <input type="hidden" name="form-name" value="helpful" />
        <input type="hidden" name="url" value={joinedSlug} />
        <input type="hidden" name="was_helpful" value={isHelpful} />
        <div style={{ display: "none" }}>
          If you're a human, do not fill out this field:
          <input type="hidden" name="required-email" />
        </div>
        <input
          type="hidden"
          name="improvements"
          value={feedback.improvementsString}
        />
        <input type="hidden" name="notes" value={feedback.notes} />
        {block}
      </form>
      <SuggestEdits sourcefile={sourcefile ? sourcefile : ""} />
    </section>
  );
};

export default Helpful;


================================================
File: /components/utilities/helpful.module.css
================================================
.Container {
  @apply flex flex-col md:flex-row items-start md:items-center;
}

.Title {
  @apply font-bold text-base mb-0 tracking-tight;
  @apply text-gray-90 !important;
}

.CtaContainer {
  @apply flex flex-row items-center pt-4 md:pt-0;
}

.Button {
  @apply ml-0 md:ml-6 mb-0 py-2 px-3 flex items-center bg-gray-20 font-bold rounded-md border-none cursor-pointer hover:opacity-90 hover:scale-105 hover:shadow-lg;
  @apply text-gray-90 !important;
}

.Button:last-child {
  @apply ml-6;
}

.Icon {
  @apply text-base mr-2;
  @apply text-gray-50 !important;
}

/* How can we improve this page form step */
.ImproveTitle {
  @apply font-bold text-lg tracking-tight my-0;
  @apply text-gray-90 !important;
}

.ImproveText {
  @apply text-xs tracking-tight italic mb-4;
  @apply text-gray-90 !important;
}

.InputContainer {
  @apply flex items-center mb-2;
}

.Input {
  @apply w-4 h-4 mr-2 checked:bg-gray-90 appearance-none border border-gray-90 rounded-sm outline-0 cursor-pointer;
}

.Label {
  @apply font-sans;
  @apply text-gray-90 !important;
}

.Textarea {
  @apply resize-none block p-4 rounded-md font-sans w-full max-w-md border border-gray-30;
}

.SubmitCTA {
  @apply inline-block mt-4 p-4 hover:opacity-90 hover:scale-105 hover:shadow-lg bg-red-70 font-bold cursor-pointer border-none rounded-md;
  @apply text-white !important;
}

.FormContainer {
  @apply flex flex-col md:flex-row items-start md:items-center pt-8 mt-8 md:pt-12 md:mt-12 border-t border-t-gray-30;
}

.Form {
  @apply flex-1;
}

:global(.dark) .Title,
:global(.dark) .ImproveTitle,
:global(.dark) .ImproveText,
:global(.dark) .Label {
  @apply text-gray-40 !important;
}

:global(.dark) .Button {
  @apply bg-gray-80;
  @apply text-gray-40 !important;
}

:global(.dark) .Icon {
  @apply text-gray-90;
}

:global(.dark) .Input {
  @apply checked:bg-white border-white;
}

:global(.dark) .FormContainer {
  @apply border-gray-90;
}


================================================
File: /components/utilities/kapa.js
================================================
import styles from "./kapa.module.css";

const Kapa = () => {
  const showTooltip = () => {
    let tips = document.getElementsByClassName(styles.Tooltip);
    if (tips.length > 0) {
      tips[0].style.display = "block";
    }
  };

  const hideTooltip = () => {
    let tips = document.getElementsByClassName(styles.Tooltip);
    if (tips.length > 0) {
      tips[0].style.display = "none";
    }
  };
  let kapaWidget = (
    <div className={styles.FooterContainer}>
      <section className={styles.AskButtonContainer}>
        <button
          id="kapa-ai"
          type="button"
          className={styles.AskButton}
          onMouseOver={showTooltip}
          onMouseOut={hideTooltip}
        >
          <i className={styles.AskIcon}>forum</i> Ask AI
        </button>
        {/* <div className={styles.Tooltip}>
          <p>Try our new docs assistant!</p>
        </div> */}
        <script
          src="https://widget.kapa.ai/kapa-widget.bundle.js"
          data-website-id="e81c2b35-6c03-4576-a56c-3c825f866e06"
          data-project-name="Streamlit"
          data-project-color="#000000"
          data-project-logo="https://docs.streamlit.io/logo.svg"
          data-modal-title="Streamlit docs assistant (beta)"
          data-modal-disclaimer="
                This AI chatbot is powered by kapa.ai and public Streamlit information.
                Answers may be inaccurate, inefficient, or biased. Any use or decisions
                based on such answers should include reasonable practices including
                human oversight to ensure they are safe, accurate, and suitable for
                your intended purpose. Streamlit is not liable for any actions, losses,
                or damages resulting from the use of the chatbot. 

                Do not enter any private, sensitive, personal, or regulated data.
                By using this chatbot, you acknowledge and agree that input you provide
                and answers you receive (collectively, “Content”) may be used by
                Streamlit and kapa.ai to provide, maintain, develop, and improve
                their respective offerings. For more information on how
                kapa.ai may use your Content, see https://www.kapa.ai/content/terms-of-service."
          data-button-hide="true"
          data-modal-override-open-id="kapa-ai"
          data-modal-lock-scroll="false"
          data-modal-border-radius="6px"
          data-modal-image-height="18px"
          data-answer-feedback-button-active-border="1px solid #808495"
        ></script>
      </section>
    </div>
  );

  return kapaWidget;
};

export default Kapa;


================================================
File: /components/utilities/kapa.module.css
================================================
@keyframes wiggle {
  0% {
    transform: rotate(0deg);
  }
  50% {
    transform: rotate(0deg);
  }
  60% {
    transform: rotate(5deg) scale(1.25);
  }
  70% {
    transform: rotate(-5deg) scale(1.25);
  }
  80% {
    transform: rotate(5deg) scale(1.25);
  }
  90% {
    transform: rotate(-5deg) scale(1.25);
  }
  100% {
    transform: rotate(0deg);
  }
}

.AskButtonContainer {
  @apply flex justify-end;
}

.AskButton {
  @apply flex items-center justify-center p-0 rounded-md h-8 px-4 cursor-pointer bg-gray-100 text-white hover:opacity-90 hover:shadow-sm;
  animation: wiggle 2s 1;
}

.AskButton:hover {
  transform: scale(1.025);
}

.AskButton:focus,
.AskButton:focus-visible {
  @apply outline-0;
}

:global(.dark) .AskButton {
  @apply text-gray-100 bg-gray-40 !important;
}

.AskIcon {
  @apply text-lg m-0 pr-2 group-hover:opacity-70;
  @apply text-white !important;
}

:global(.dark) .AskIcon {
  @apply text-gray-100 !important;
}

.Tooltip {
  @apply hidden absolute top-20 right-[4.5rem] h-8 px-2 pt-0.5 rounded-md bg-gray-20;
}

.Tooltip p {
  @apply text-gray-70;
}

:global(.dark) .Tooltip {
  @apply bg-gray-90;
}


================================================
File: /components/utilities/kapaModal.css
================================================
.mantine-Modal-overlay {
  background-color: rgba(166, 168, 184, 0.6) !important;
}

.mantine-Paper-root {
  @apply bg-white dark:bg-gray-90;
}

.mantine-Modal-header,
.mantine-Modal-header h3 {
  @apply bg-white dark:bg-gray-90 text-gray-90 dark:text-gray-40 border-b-0 font-normal tracking-wide;
}

.mantine-Modal-header > .mantine-Group-root:first-child .mantine-Image-root {
  @apply hidden;
}

.mantine-Modal-body,
.mantine-Modal-body a,
.mantine-Modal-body .mantine-List-root,
.mantine-Modal-body .mantine-List-item {
  @apply bg-white dark:bg-gray-90;
  @apply text-gray-90 dark:text-gray-40;
}

.mantine-Paper-root
  > .mantine-Modal-body
  > .mantine-Modal-body
  > div:first-child
  > div:first-child:has(.mantine-Text-root) {
  @apply bg-gray-20 dark:bg-gray-80;
}

.mantine-Paper-root
  > .mantine-Modal-body
  > .mantine-Modal-body
  > div:first-child
  > div:first-child
  .mantine-Text-root {
  @apply text-gray-70 dark:text-gray-50;
}

.mantine-Group-root button {
  @apply text-gray-70;
}

.mantine-Group-root button:hover {
  @apply bg-gray-20 dark:bg-gray-80;
}

.mantine-Input-input {
  @apply bg-white dark:bg-gray-90 border-gray-70 focus:border-orange-70 text-gray-90 dark:text-gray-40;
}

.mantine-Input-rightSection > .mantine-Group-root > .mantine-ActionIcon-root {
  @apply bg-white dark:bg-gray-90 border-none text-orange-70 !important;
}

.mantine-Input-rightSection
  > .mantine-Group-root
  > .mantine-ActionIcon-root
  svg {
  @apply scale-150 hover:scale-[1.6];
}

.mantine-Code-root {
  @apply bg-transparent border border-gray-40 dark:border-gray-80 rounded-md text-red-70 px-1 mx-1;
}

.mantine-Grid-root .mantine-Grid-col a {
  @apply border-gray-20 dark:border-gray-80 bg-transparent;
}

.mantine-Grid-root .mantine-Grid-col a:hover {
  @apply bg-gray-20 dark:bg-gray-80;
}

.mantine-Grid-root .mantine-Grid-col div {
  @apply text-gray-90 dark:text-gray-40;
}

.mantine-Grid-root .mantine-Grid-col div.mantine-Tooltip-tooltip {
  @apply bg-gray-80 dark:bg-gray-20 text-gray-50 dark:text-gray-70;
}

.mantine-Popover-dropdown,
.mantine-Popover-arrow {
  @apply bg-white dark:bg-gray-90 text-gray-90 dark:text-gray-40;
}

.mantine-Popover-dropdown .mantine-Button-root {
  @apply text-white;
}

.mantine-Popover-dropdown h5 {
  @apply text-gray-90 dark:text-gray-40;
}

.mantine-Checkbox-input {
  @apply bg-gray-20 dark:bg-gray-80 border-gray-70;
}

.mantine-Checkbox-label {
  @apply text-gray-90 dark:text-gray-40;
}

.mantine-Paper-root
  > .mantine-Modal-body
  > .mantine-Modal-body
  > div:last-child {
  @apply text-gray-70;
}

.mantine-Paper-root
  > .mantine-Modal-body
  > .mantine-Modal-body
  > div:last-child
  a {
  @apply text-gray-70;
}

.mantine-Button-icon:has(.tabler-icon-player-stop) {
  @apply hidden;
}

.mantine-Button-root:has(.tabler-icon-player-stop) {
  @apply py-0 px-4;
}


================================================
File: /components/utilities/psa.js
================================================
import styles from "./psa.module.css";

const Psa = () => {
  return (
    <section className={styles.Container}>
      <i className={styles.Icon}>forum</i>
      <article>
        <h3 className={styles.Title}>Still have questions?</h3>
        <p className={styles.Text}>
          Our{" "}
          <a
            href="https://discuss.streamlit.io"
            target="_blank"
            className={styles.Link}
          >
            forums
          </a>{" "}
          are full of helpful information and Streamlit experts.
        </p>
      </article>
    </section>
  );
};

export default Psa;


================================================
File: /components/utilities/psa.module.css
================================================
.Container {
  @apply flex items-center flex-wrap;
}

:global(.dark) .Container {
  @apply border-b-gray-90 border-t-gray-90;
}

.Icon {
  @apply text-5xl mr-8;
  @apply text-gray-90 !important;
}

:global(.dark) .Icon {
  @apply text-gray-40 !important;
}

.Title {
  @apply my-0 font-bold text-2xl;
  @apply text-gray-90 !important;
}

:global(.dark) .Title,
:global(.dark) .Text,
:global(.dark) .Link {
  @apply text-gray-40 !important;
}

.Text {
  @apply text-base tracking-tight;
  @apply text-gray-90 !important;
}

.Link {
  @apply border-b border-b-gray-90 hover:opacity-70 hover:border-b-red-70;
  @apply text-gray-90 !important;
}

:global(.dark) .Link {
  @apply border-b-white;
}


================================================
File: /components/utilities/search.js
================================================
import React, { useState, useEffect } from "react";
import classNames from "classnames";
import FocusTrap from "focus-trap-react";
import { useRouter, withRouter } from "next/router";
import { AnimatePresence, motion } from "framer-motion";
import algoliasearch from "algoliasearch/lite";
import {
  InstantSearch,
  Hits,
  SearchBox,
  Highlight,
  Snippet,
  Configure,
} from "react-instantsearch-dom";

import styles from "./search.module.css";

const Search = () => {
  const [isModalOpen, setIsModalOpen] = useState(false);
  const [hotkey, setHotkey] = useState("");
  const [windowWidth, setWindowWidth] = useState(null);
  const [indexFocus, setIndexFocus] = useState(0);

  const router = useRouter();

  const toggleModal = (e) => {
    if (e && e.currentTarget !== e.target) {
      return;
    }

    setIsModalOpen(!isModalOpen);

    if (document.body.style.overflow == "hidden") {
      document.body.style.overflow = "unset";
    } else {
      document.body.style.overflow = "hidden";
    }
  };

  const focus = () => {
    setTimeout(function () {
      let input = document.getElementsByClassName("ais-SearchBox-input")[0];
      input.focus();
    }, 100);
  };

  const searchClicked = () => {
    setIsModalOpen(true);
    document.body.style.overflow = "hidden";
    focus();
  };

  const handleKey = (e) => {
    if (e.key === "k" && (e.ctrlKey || e.metaKey)) {
      e.preventDefault(); // prevent "Save Page" from getting triggered.
      setIsModalOpen(true);
      document.body.style.overflow = "hidden";
      focus();
    }
    if (e.key === "Escape") {
      setIsModalOpen(false);
      document.body.style.overflow = "unset";
    }
    if (isModalOpen === true) {
      const resultCount = document.querySelectorAll(".ais-Hits-item").length;
      let currentFocus = indexFocus;
      if (e.key === "Enter") {
        goToResult();
      }
      if (e.key === "ArrowUp") {
        currentFocus = currentFocus > 1 ? currentFocus - 1 : 1;
        setIndexFocus(currentFocus);
        highlightResult();
      } else if (e.key === "ArrowDown") {
        currentFocus =
          currentFocus < resultCount ? currentFocus + 1 : resultCount;
        setIndexFocus(currentFocus);
        highlightResult();
      } else {
        currentFocus = 0;
        setIndexFocus(currentFocus);
      }
    }
  };

  const highlightResult = () => {
    let index = indexFocus;

    if (index <= 0) {
      index = 1;
      setIndexFocus(1);
    }

    const results = document.querySelectorAll(".ais-Hits-item article");
    if (results.length > 0) {
      if (results.length >= index) {
        const result = results[index - 1];
        result.scrollIntoView(false);
      }
    }
  };

  const goToResult = () => {
    let index = indexFocus;

    if (index <= 0) {
      index = 1;
      setIndexFocus(1);
    }

    const results = document.querySelectorAll(".ais-Hits-item article");

    if (results.length > 0) {
      if (results.length >= index) {
        const result = results[index - 1];
        const a = result.querySelector("a").getAttribute("href");
        toggleModal();
        router.push(a);
      }
    }
  };

  useEffect(() => {
    setWindowWidth(window.innerWidth);

    if (window.innerWidth > 1024) {
      if (window.navigator.platform.indexOf("Mac") != -1) {
        setHotkey("⌘K");
      } else if (window.navigator.platform.indexOf("Win") != -1) {
        setHotkey("Ctrl-K");
      } else if (window.navigator.platform.indexOf("Linux") != -1) {
        setHotkey("Ctrl-K");
      }
    }
    document.addEventListener("keydown", handleKey);
  }, []);

  const searchClient = algoliasearch(
    "XNXFGO6BQ1",
    "dd82fd414de60db7ffbcbf30eca68013",
  );

  function Hit(props) {
    const icon = props.hit.icon ? props.hit.icon : "text_snippet";
    const color = props.hit.color ? props.hit.color : "orange-70";
    const category = props.hit.category ? props.hit.category : "Page";
    let snippet;
    if (
      props.hit._snippetResult &&
      props.hit._snippetResult.content.matchLevel !== "none"
    ) {
      snippet = <Snippet attribute="content" hit={props.hit} />;
    }

    return (
      <article
        className={classNames(
          styles.HitContainer,
          props.hit.__position === indexFocus ? styles.ActiveHit : "",
        )}
        tabIndex="-1"
      >
        <a
          className={classNames("not-link", styles.HitLink)}
          href={props.hit.url}
        >
          <section
            className={classNames(styles.IconContainer, ICON_COLOR[color])}
          >
            <div className={classNames(styles.ImageContainer, `icon-${icon}`)}>
              <i className={styles.Icon}>{icon}</i>
            </div>
          </section>
          <section
            className={classNames(styles.TextContainer, HIGHLIGHT_COLOR[color])}
          >
            <p className={styles.HitCategory}>{category}</p>
            <h5 className={styles.HitTitle}>
              <Highlight hit={props.hit} attribute="title"></Highlight>
            </h5>
            {snippet}
          </section>
        </a>
      </article>
    );
  }

  let modal;

  if (isModalOpen) {
    modal = (
      <AnimatePresence>
        {isModalOpen && (
          <motion.section
            initial={{
              opacity: 0,
              // left: '-40em'
            }}
            animate={{
              opacity: 1,
              // left: 0,
              transition: {
                ease: "easeInOut",
                duration: 0.01,
              },
            }}
            exit={{
              opacity: 0,
              // left: '-40em'
            }}
            className={styles.ModalContainer}
          >
            <FocusTrap>
              <div
                className={styles.Modal}
                onClick={toggleModal}
                onKeyDown={handleKey}
              >
                <section
                  className={styles.ContentContainer}
                  style={{
                    maxWidth: "36rem",
                    maxHeight: "40rem",
                  }}
                  tabIndex="-1"
                >
                  <div className="ais-InstantSearch">
                    <InstantSearch
                      indexName="documentation"
                      searchClient={searchClient}
                    >
                      <div className="right-panel">
                        <Configure
                          facets={["*", "version"]}
                          facetFilters={["version:latest"]}
                          hitsPerPage={10}
                        />
                        <SearchBox id="search-box small" />
                        <Hits hitComponent={Hit} />
                      </div>
                    </InstantSearch>
                  </div>
                </section>
              </div>
            </FocusTrap>
          </motion.section>
        )}
      </AnimatePresence>
    );
  }

  let searchBar = (
    <section className={styles.SearchBarContainer}>
      <section
        className={classNames("group", styles.SearchBar)}
        onClick={searchClicked}
      >
        <i
          className={styles.SearchIcon}
          style={{ transform: "rotateY(180deg)" }}
        >
          search
        </i>
        <p className={styles.SearchText}>Search</p>
        {windowWidth > 1024 && <p className={styles.HotKey}>{hotkey}</p>}
      </section>
      {modal}
      {/* <SearchBox /> */}
    </section>
  );
  return searchBar;
};

const HIGHLIGHT_COLOR = {
  "red-70": styles.RedHighlight,
  "orange-70": styles.OrangeHighlight,
  "yellow-70": styles.YellowHighlight,
  "green-70": styles.GreenHighlight,
  "acqua-70": styles.AcquaHighlight,
  "lightBlue-70": styles.LightBlueHighlight,
  "darkBlue-70": styles.DarkBlueHighlight,
  "indigo-70": styles.IndigoHighlight,
  "gray-70": styles.GrayHighlight,
  unset: styles.TransparentHighlight,
};

const ICON_COLOR = {
  "red-70": styles.RedIcon,
  "orange-70": styles.OrangeIcon,
  "yellow-70": styles.YellowIcon,
  "green-70": styles.GreenIcon,
  "acqua-70": styles.AcquaIcon,
  "lightBlue-70": styles.LightBlueIcon,
  "darkBlue-70": styles.DarkBlueIcon,
  "indigo-70": styles.IndigoIcon,
  "gray-70": styles.GrayIcon,
  unset: styles.TransparentIcon,
};

export default withRouter(Search);


================================================
File: /components/utilities/search.module.css
================================================
/* Modal */
.ModalContainer {
  @apply fixed w-screen h-screen top-0 left-0 flex items-center justify-center z-10;
}

.Modal {
  @apply flex items-center justify-center absolute inset-0 px-4 bg-gray-60/60;
}

.ContentContainer {
  @apply p-0 rounded-md w-96 overflow-x-hidden overflow-y-auto w-full h-full;
  @apply bg-gray-10;
}

:global(.dark) .ContentContainer {
  @apply bg-gray-90;
}

/* Search Bar */
.SearchBarContainer {
  @apply flex flex-auto justify-end;
}

.SearchBar {
  @apply flex items-center justify-center p-0 md:px-4 rounded-md h-8 w-8 md:w-60 cursor-pointer bg-gray-20;
}

:global(.dark) .SearchBar {
  @apply text-gray-40 bg-gray-90 !important;
}

.SearchIcon {
  @apply text-lg m-0 group-hover:opacity-70;
  @apply text-gray-70 !important;
}

.SearchText {
  @apply hidden md:block flex-auto m-0 ml-2 mr-8 group-hover:opacity-70 text-sm tracking-tight;
  @apply text-gray-70 !important;
}

.HotKey {
  @apply hidden md:block m-0 group-hover:opacity-70 text-sm tracking-tight;
  @apply text-gray-70 !important;
}

:global(.dark) .HotKey,
:global(.dark) .SearchText,
:global(.dark) .SearchIcon {
  @apply text-gray-40 !important;
}

/* Hits */
.HitContainer {
  @apply m-0 p-4;
}

.ActiveHit {
  @apply bg-gray-20;
}

:global(.dark) .ActiveHit {
  @apply bg-gray-80;
}

.HitLink {
  @apply flex gap-4 md:gap-6 hover:opacity-100;
}

.itemContainer em {
  @apply inline-block border-b-2 border-b-yellow-90;
}

.IconContainer {
  @apply relative overflow-hidden rounded-md w-10 h-10;
}

.RedIcon {
  @apply bg-red-70;
}

.OrangeIcon {
  @apply bg-orange-70;
}

.YellowIcon {
  @apply bg-yellow-70;
}

.GreenIcon {
  @apply bg-green-70;
}

.AcquaIcon {
  @apply bg-acqua-70;
}

.LightBlueIcon {
  @apply bg-lightBlue-70;
}

.DarkBlueIcon {
  @apply bg-darkBlue-70;
}

.IndigoIcon {
  @apply bg-indigo-70;
}

.GrayIcon {
  @apply bg-gray-70;
}

.ImageContainer {
  @apply flex items-center justify-center;
}

.Icon {
  @apply leading-10;
  @apply text-white !important;
}

.TextContainer {
  @apply pr-8 flex-1;
}

.RedHighlight em {
  @apply border-b-red-70;
}

.OrangeHighlight em {
  @apply border-b-orange-70;
}

.YellowHighlight em {
  @apply border-b-yellow-70;
}

.GreenHighlight em {
  @apply border-b-green-70;
}

.AcquaHighlight em {
  @apply border-b-acqua-70;
}

.LightBlueHighlight em {
  @apply border-b-lightBlue-70;
}

.DarkBlueHighlight em {
  @apply border-b-darkBlue-70;
}

.IndigoHighlight em {
  @apply border-b-indigo-70;
}

.GrayHighlight em {
  @apply border-b-gray-70;
}

.HitCategory {
  @apply mb-0 text-xs tracking-tight leading-4 font-normal;
  @apply text-gray-70 !important;
}

.HitTitle {
  @apply my-0 text-lg font-bold;
  @apply text-gray-90 !important;
}

:global(.dark) .HitTitle {
  @apply text-gray-40 !important;
}


================================================
File: /components/utilities/searchModal.css
================================================
.ais-InstantSearch .ais-SearchBox {
  @apply sticky top-0 z-10;
}

.ais-InstantSearch .ais-SearchBox-form {
  @apply relative;
}

.ais-InstantSearch .ais-SearchBox-form input {
  @apply h-16 w-full bg-gray-10 dark:bg-gray-90 border-b border-b-gray-40 text-gray-90 rounded-none pl-20 pr-4 text-base focus:outline-none focus:border-b-2 focus:border-b-orange-70 dark:border-b-gray-80 dark:focus:border-b-orange-70 dark:text-gray-40;
}

.ais-InstantSearch .ais-SearchBox-form #search-clear,
.ais-InstantSearch
  .ais-SearchBox-form
  input[type="search" i]::-webkit-search-cancel-button {
  @apply opacity-0;
}

.ais-InstantSearch .ais-SearchBox-form button {
  @apply w-10 shadow-none absolute inset-y-4 left-4 mb-0 flex items-center justify-center;
}

.ais-InstantSearch .ais-SearchBox-form button svg {
  @apply dark:fill-white;
}

.ais-InstantSearch .ais-SearchBox-form .ais-SearchBox-reset {
  @apply left-auto right-4;
}

.ais-InstantSearch .ais-SearchBox-form .ais-SearchBox-reset[hidden] {
  @apply hidden;
}

.ais-InstantSearch .ais-Snippet {
  @apply opacity-80;
}

.ais-InstantSearch .ais-Hits {
  @apply bg-gray-10 dark:bg-gray-90;
}

.ais-InstantSearch .ais-Hits .ais-Hits-list {
  @apply list-none m-0 p-0;
}

.ais-InstantSearch .ais-Hits .ais-Hits-list li {
  @apply m-0 border-b border-b-gray-40 hover:bg-gray-20 dark:hover:bg-gray-80 dark:border-b-gray-80;
}

.ais-Snippet-highlighted,
.ais-Highlight-highlighted {
  @apply not-italic pb-1 border-b-2; /* highlight color in search.module.css */
}

.ais-Highlight-highlighted {
  @apply pb-0;
}


================================================
File: /components/utilities/socialCallout.js
================================================
import styles from "./socialCallout.module.css";

const SocialCallout = () => {
  return (
    <section>
      <h2 className={styles.Title}>Other Media</h2>
      <ul className={styles.ListContainer}>
        {/* Github */}
        <li className={`group ${styles.ListItem}`}>
          <a
            className={`${styles.Link} not-link`}
            href="https://github.com/streamlit"
            target="_blank"
          >
            <div className={`${styles.IconContainer} ${styles.GitHub}`}>
              <svg
                width="22"
                height="20"
                viewBox="0 0 22 20"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
                className={styles.Icon}
              >
                <path
                  d="M12.8513 14.5613C13.2388 14.4967 13.56 14.4506 13.8718 14.3768C16.168 13.8508 17.3491 12.4668 17.4908 10.1508C17.5664 8.98815 17.368 7.91781 16.5837 6.99511C16.5081 6.90283 16.5081 6.70907 16.5459 6.57989C16.716 5.8694 16.6688 5.17737 16.4609 4.48534C16.3759 4.20853 16.2152 4.07013 15.9601 4.1624C15.242 4.42075 14.5427 4.71602 13.8246 4.97438C13.5978 5.05742 13.3238 5.13124 13.0876 5.0851C11.6135 4.78984 10.1489 4.79906 8.6843 5.09433C8.46697 5.14047 8.21184 5.06665 7.99451 4.98361C7.32363 4.72525 6.67164 4.42075 6.00075 4.18085C5.62279 4.04244 5.33932 4.20853 5.32042 4.62375C5.29207 5.27887 5.30152 5.92477 5.28262 6.57989C5.28262 6.73675 5.28262 6.92129 5.19758 7.04124C3.00539 10.1323 4.70623 13.9246 8.56146 14.5059C8.6654 14.5244 8.77879 14.5336 8.86383 14.5428C8.70319 14.9581 8.55201 15.3733 8.37248 15.77C8.32523 15.8715 8.17405 15.9638 8.05121 16.0007C7.01181 16.3698 6.0858 16.0653 5.44326 15.1887C5.19758 14.8566 4.92356 14.5152 4.58339 14.2937C4.31882 14.1184 3.94085 14.0999 3.61013 14.0446C3.52509 14.0261 3.37391 14.1092 3.34556 14.1738C3.31721 14.2384 3.37391 14.4044 3.44005 14.4506C4.28102 14.9304 4.60229 15.7793 5.07474 16.5451C5.55665 17.3386 6.41651 17.4401 7.27638 17.4401C7.6071 17.4401 7.92837 17.394 8.32523 17.3571C8.32523 18.003 8.34413 18.612 8.31578 19.221C8.29688 19.6177 7.94727 19.8023 7.50316 19.6085C6.69054 19.2579 5.84957 18.9165 5.11254 18.4367C1.58803 16.1484 -0.112807 11.9408 0.803755 7.90858C1.71087 3.88558 5.07474 0.776064 9.23234 0.130169C14.4671 -0.69104 19.5319 2.51075 20.8642 7.49337C22.2059 12.4944 19.4563 17.717 14.5522 19.5162C13.7018 19.83 13.4655 19.6639 13.4655 18.7781C13.475 18.1783 13.475 17.5785 13.4844 16.9788C13.5033 16.1299 13.5033 15.2902 12.8513 14.5613Z"
                  fill="#FFFFFF"
                />
              </svg>
            </div>
            <article>
              <h5 className={styles.Subtitle}>GitHub</h5>
              <p className={styles.Text}>
                View the Streamlit source code and issue tracker.
              </p>
            </article>
          </a>
        </li>
        {/* YouTube */}
        <li className={`group ${styles.ListItem}`}>
          <a
            className={`${styles.Link} not-link`}
            href="https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q"
            target="_blank"
          >
            <div className={`${styles.IconContainer} ${styles.YouTube}`}>
              <svg
                width="26"
                height="18"
                viewBox="0 0 26 18"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
                className={styles.Icon}
              >
                <path
                  d="M12.8276 17.8757C11.0323 17.845 9.2319 17.845 7.43665 17.7734C6.06686 17.7172 4.69189 17.6251 3.33767 17.4308C1.63581 17.1853 0.546208 16.0449 0.333476 14.3471C0.17263 13.0227 0.058481 11.6879 0.0221609 10.3532C-0.0193478 8.93159 0.0117837 7.50995 0.0792353 6.0883C0.125933 5.13713 0.271213 4.19107 0.411305 3.25012C0.634414 1.74666 2.0509 0.723891 3.25984 0.57559C4.56736 0.417061 5.89045 0.284101 7.20835 0.253418C10.1555 0.186939 13.1026 0.156256 16.0445 0.181825C17.8398 0.197166 19.635 0.325012 21.4251 0.422175C21.8972 0.447744 22.3694 0.514224 22.8364 0.606273C24.284 0.892648 25.1609 1.77223 25.4722 3.18364C25.7627 4.49279 25.8406 5.8275 25.908 7.16221C26.017 9.37138 25.9495 11.5703 25.6745 13.7642C25.5863 14.4443 25.5085 15.1449 25.1401 15.7483C24.5123 16.7711 23.568 17.3592 22.3746 17.4666C20.8024 17.6098 19.2251 17.7274 17.6478 17.7785C16.0445 17.8297 14.4309 17.7888 12.8276 17.7888C12.8276 17.8245 12.8276 17.8501 12.8276 17.8757ZM10.4875 12.9511C12.6667 11.6266 14.8096 10.3277 16.994 9.00319C14.7993 7.67359 12.6564 6.37468 10.4875 5.05531C10.4875 7.70427 10.4875 10.3021 10.4875 12.9511Z"
                  fill="#FFFFFF"
                />
              </svg>
            </div>
            <article>
              <h5 className={styles.Subtitle}>YouTube</h5>
              <p className={styles.Text}>
                Watch screencasts made by the Streamlit team and the community.
              </p>
            </article>
          </a>
        </li>
        {/* Twitter */}
        <li className={`group ${styles.ListItem}`}>
          <a
            className={`${styles.Link} not-link`}
            href="https://twitter.com/streamlit"
            target="_blank"
          >
            <div className={`${styles.IconContainer} ${styles.Twitter}`}>
              <svg
                width="24"
                height="18"
                viewBox="0 0 24 18"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
                className={styles.Icon}
              >
                <path
                  d="M22.9683 0.526535C22.5928 1.56402 21.8955 2.36683 20.9031 2.95968C21.368 2.91851 21.8239 2.83205 22.271 2.71678C22.7225 2.60562 23.1561 2.45741 23.5986 2.28449C23.5986 2.32566 23.5763 2.34625 23.5629 2.36683C22.946 3.19435 22.1994 3.91071 21.3233 4.51179C21.2428 4.56943 21.207 4.61883 21.2115 4.71764C21.2651 6.1133 21.0595 7.47603 20.6214 8.81405C20.1029 10.3867 19.3072 11.8277 18.2119 13.1287C16.9334 14.6478 15.3554 15.8376 13.469 16.6693C12.3156 17.1798 11.1042 17.5174 9.8391 17.7068C9.10597 17.8138 8.37284 17.8673 7.63078 17.8797C5.98571 17.9044 4.38982 17.6656 2.83863 17.1674C1.87305 16.8545 0.952171 16.4428 0.0804651 15.9365C0.0536434 15.92 0.0178811 15.9118 0 15.8788C2.633 16.1217 5.00672 15.5206 7.11669 14.0426C5.87395 13.9809 4.79662 13.5774 3.89362 12.787C3.29907 12.2682 2.87886 11.6465 2.62406 10.9178C3.34824 11.0372 4.05902 11.0208 4.79215 10.8478C3.3393 10.5308 2.24408 9.7939 1.52437 8.61232C1.10863 7.93301 0.920879 7.19607 0.925349 6.40149C1.60483 6.7432 2.32008 6.92847 3.10238 6.9614C2.93698 6.84201 2.78052 6.7432 2.64194 6.62793C1.82835 5.96921 1.29638 5.15404 1.07287 4.18243C0.822532 3.09554 0.992403 2.06218 1.5646 1.08645C1.61824 0.991756 1.62271 0.995873 1.69424 1.0741C2.70452 2.19392 3.88468 3.13259 5.23917 3.88189C6.67413 4.67647 8.22085 5.20756 9.87039 5.4834C10.4113 5.57398 10.9567 5.63161 11.5065 5.66043C11.5914 5.66455 11.6183 5.66043 11.6004 5.56574C11.3053 4.10009 11.6674 2.79088 12.7403 1.67106C13.5271 0.843544 14.5284 0.357738 15.7131 0.221878C17.1167 0.0571976 18.3729 0.398908 19.4726 1.23054C19.6022 1.32935 19.7184 1.43227 19.8347 1.54343C19.8749 1.58049 19.9106 1.58872 19.9732 1.58049C21.0059 1.38699 21.9714 1.04116 22.8834 0.559471C22.9057 0.543003 22.9236 0.522418 22.9683 0.526535Z"
                  fill="#FFFFFF"
                />
              </svg>
            </div>
            <article>
              <h5 className={styles.Subtitle}>Twitter</h5>
              <p className={styles.Text}>
                Follow @streamlit on Twitter to keep up with the latest news.
              </p>
            </article>
          </a>
        </li>
        {/* LinkedIn */}
        <li className={`group ${styles.ListItem}`}>
          <a
            className={`${styles.Link} not-link`}
            href="https://www.linkedin.com/company/streamlit"
            target="_blank"
          >
            <div className={`${styles.IconContainer} ${styles.LinkedIn}`}>
              <svg
                width="24"
                height="24"
                viewBox="0 0 24 24"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
                className={styles.Icon}
              >
                <path
                  d="M22.228 0H1.772A1.772 1.772 0 0 0 0 1.772v20.456A1.772 1.772 0 0 0 1.772 24h20.456A1.772 1.772 0 0 0 24 22.228V1.772A1.772 1.772 0 0 0 22.228 0ZM7.153 20.445H3.545V8.983h3.608v11.462ZM5.347 7.395a2.072 2.072 0 1 1 2.083-2.07 2.042 2.042 0 0 1-2.083 2.07Zm15.106 13.06h-3.606v-6.262c0-1.846-.785-2.416-1.799-2.416-1.07 0-2.12.806-2.12 2.463v6.215H9.32V8.992h3.47v1.588h.047c.348-.705 1.568-1.91 3.43-1.91 2.013 0 4.188 1.195 4.188 4.695l-.002 7.09Z"
                  fill="#FFFFFF"
                />
              </svg>
            </div>
            <article>
              <h5 className={styles.Subtitle}>LinkedIn</h5>
              <p className={styles.Text}>
                Follow @streamlit on the world's largest professional network.
              </p>
            </article>
          </a>
        </li>
        {/* Newsletter */}
        <li className={`group ${styles.ListItem}`}>
          <a
            className={`${styles.Link} not-link`}
            href="https://info.snowflake.com/streamlit-newsletter-sign-up.html"
            target="_blank"
          >
            <div className={`${styles.IconContainer} ${styles.Newsletter}`}>
              <svg
                width="24"
                height="24"
                viewBox="0 0 24 24"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
                className={styles.Icon}
              >
                <path
                  d="M21.75 6.75v10.5a1.5 1.5 0 0 1-1.5 1.5H3.75a1.5 1.5 0 0 1-1.5-1.5V6.75m19.5 0a1.5 1.5 0 0 0-1.5-1.5H3.75a1.5 1.5 0 0 0-1.5 1.5m19.5 0-8.896 6.159a1.5 1.5 0 0 1-1.708 0L2.25 6.75"
                  stroke="#FFFFFF"
                  strokeWidth={1.5}
                  strokeLinecap="round"
                  strokeLinejoin="round"
                />
              </svg>
            </div>
            <article>
              <h5 className={styles.Subtitle}>Newsletter</h5>
              <p className={styles.Text}>
                Sign up for communications from Streamlit.
              </p>
            </article>
          </a>
        </li>
      </ul>
    </section>
  );
};

export default SocialCallout;


================================================
File: /components/utilities/socialCallout.module.css
================================================
.Title {
  @apply font-sans font-bold tracking-tight text-2xl md:text-4xl mt-0 mb-6;
  @apply text-gray-90 !important;
}

:global(.dark) .Title,
:global(.dark) .Subtitle,
:global(.dark) .Text {
  @apply text-gray-40 !important;
}

.ListContainer {
  @apply grid grid-cols-1 md:grid-cols-2 gap-y-8 gap-x-12 m-0;
}

.ListItem {
  @apply flex items-center mb-0;
}

.Link {
  @apply flex items-center group-hover:opacity-70;
}

.IconContainer {
  @apply p-4 mr-4 mb-0 rounded-md leading-4;
}

.Icon {
  @apply w-8 h-8;
}

.Subtitle {
  @apply font-bold font-sans text-lg my-0;
  @apply text-gray-90 !important;
}

.Text {
  @apply font-sans font-normal text-xs tracking-normal mb-0 leading-4;
  @apply text-gray-90 !important;
}

/* Specific colors for each social network */
.GitHub {
  @apply bg-brand-GitHub;
}

.YouTube {
  @apply bg-brand-YouTube;
}

.Twitter {
  @apply bg-brand-Twitter;
}

.LinkedIn {
  @apply bg-brand-LinkedIn;
}

.Newsletter {
  @apply bg-red-70;
}


================================================
File: /components/utilities/spacer.js
================================================
const Spacer = ({ size }) => {
  return <div style={{ marginTop: `${size}` }} />;
};

export default Spacer;


================================================
File: /components/utilities/suggestEdits.js
================================================
import styles from "./suggestEdits.module.css";

const SuggestEdits = ({ sourcefile }) => {
  return (
    <section>
      <section className={styles.Container}>
        <i className={styles.Icon}>edit</i>
        <a
          className={styles.Link}
          href={sourcefile}
          target="_blank"
          rel="noopener noreferrer"
        >
          Edit this page on GitHub
        </a>
      </section>
    </section>
  );
};

export default SuggestEdits;


================================================
File: /components/utilities/suggestEdits.module.css
================================================
.Container {
  @apply mt-6 sm:mt-0 flex items-center cursor-pointer hover:opacity-70;
}

.Icon {
  @apply mr-2;
  @apply text-gray-70 !important;
}

.Link {
  @apply border-b border-b-gray-70 hover:border-b-red-50;
  @apply text-gray-70 !important;
}


================================================
File: /components/utilities/themeToggle.js
================================================
import React, { useState, useEffect } from "react";
import classNames from "classnames";
import styles from "./themeToggle.module.css";

const ThemeToggle = () => {
  const [activeTheme, setActiveTheme] = useState("light");
  let inactiveTheme;
  inactiveTheme = activeTheme === "light" ? "dark" : "light";

  const getUserPreference = () => {
    if (window.localStorage.getItem("theme")) {
      return window.localStorage.getItem("theme");
    }
    return window.matchMedia("(prefers-color-scheme: dark)").matches
      ? "dark"
      : "light";
  };

  const changeTailwindTheme = (theme) => {
    inactiveTheme = theme === "light" ? "dark" : "light";
    document.documentElement.classList.add(theme);
    document.documentElement.classList.remove(inactiveTheme);
    setActiveTheme(theme);
    localStorage.setItem("theme", theme);
  };

  const showTooltip = () => {
    document.getElementsByClassName(styles.Tooltip)[0].style.display = "block";
  };

  const hideTooltip = () => {
    document.getElementsByClassName(styles.Tooltip)[0].style.display = "none";
  };

  useEffect(() => {
    if (getUserPreference() === "dark") {
      changeTailwindTheme("dark");
    } else {
      changeTailwindTheme("light");
    }
  }, [activeTheme]);

  return (
    <React.Fragment>
      <button
        type="button"
        onClick={
          activeTheme === "light"
            ? () => changeTailwindTheme("dark")
            : () => changeTailwindTheme("light")
        }
        onMouseOver={showTooltip}
        onMouseOut={hideTooltip}
        className={styles.Container}
      >
        <i className={classNames(styles.DarkIcon, styles.Icon)}>dark_mode</i>
        <i className={classNames(styles.LightIcon, styles.Icon)}>light_mode</i>
      </button>
      <div className={styles.Tooltip}>
        <p>Change to {inactiveTheme} mode</p>
      </div>
    </React.Fragment>
  );
};

export default ThemeToggle;


================================================
File: /components/utilities/themeToggle.module.css
================================================
.Container {
  @apply relative w-8 h-8 mb-0 rounded-md p-0 block cursor-pointer flex items-center justify-center hover:opacity-90 hover:shadow-sm;
  @apply bg-gray-20 !important;
}

.Container:hover {
  transform: scale(1.025);
}

:global(.dark) .Container {
  @apply bg-gray-90 !important;
}

.Icon {
  @apply absolute;
  @apply text-gray-70 !important;
}

:global(.dark) .Icon {
  @apply text-gray-40 !important;
}

.DarkIcon {
  @apply opacity-0;
}

:global(.dark) .DarkIcon {
  @apply opacity-100;
}

:global(.dark) .LightIcon {
  @apply opacity-0;
}

.Tooltip {
  @apply hidden absolute top-20 right-4 h-8 px-2 pt-0.5 rounded-md bg-gray-20;
}

.Tooltip p {
  @apply text-gray-70;
}

:global(.dark) .Tooltip {
  @apply bg-gray-90;
}


================================================
File: /content/cookie-settings.md
================================================
---
visible: false
---

### Cookie settings

##### Strictly necessary cookies

These cookies are necessary for the website to function and cannot be switched off. They are usually only set in response to actions made by you which amount to a request for services, such as setting your privacy preferences, logging in or filling in forms.

##### Performance cookies

These cookies allow us to count visits and traffic sources so we can measure and improve the performance of our site. They help us understand how visitors move around the site and which pages are most frequently visited.

##### Functional cookies

These cookies are used to record your choices and settings, maintain your preferences over time and recognize you when you return to our website. These cookies help us to personalize our content for you and remember your preferences.

##### Targeting cookies

These cookies may be deployed to our site by our advertising partners to build a profile of your interest and provide you with content that is relevant to you, including showing you relevant ads on other websites.


================================================
File: /content/gdpr-banner.md
================================================
---
---

# Hello there 👋

Thanks for stopping by! We use cookies to help us understand how you interact with our website.

By clicking “Accept all”, you consent to our use of cookies. For more information, please see our [privacy policy](www.streamlit.io/privacy-policy).


================================================
File: /content/index.md
================================================
---
title: Welcome to Streamlit
features:
  - title: Get started
    body: Lorem ipsum dolor sit amet, consectetur adipiscing elit.
    color: indigo-70
    icon: arrow_forward
    url: /get-started
    image: ""
  - title: API reference
    body: Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut
      fugit, sed quia.
    color: orange-70
    icon: dvr
    url: /develop/api-reference
    image: ""
  - title: Topic guides
    body: Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut
      fugit, sed quia.
    color: lightBlue-70
    icon: description
    url:
      Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit,
      sed quia.
    image: ""
whats_new:
  - title: Feature title
    body: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Eleifend a
      facilisis sagittis, vitae nibh massa in facilisis et. Pretium eget non
      cursus purus tempus porta sodales.
    icon: visibility
    url: /get-started
    image: /img/logo.svg
  - title: Feature title
    body: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Eleifend a
      facilisis sagittis, vitae nibh massa in facilisis et. Pretium eget non
      cursus purus tempus porta sodales.
    url: /get-started
    icon: visibility
    image: ""
  - body: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Eleifend a
      facilisis sagittis, vitae nibh massa in facilisis et. Pretium eget non
      cursus purus tempus porta sodales.
    title: Feature title
    url: /get-started
    image: /img/logo.svg
    icon: edit
  - title: Feature title
    body: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Eleifend a
      facilisis sagittis, vitae nibh massa in facilisis et. Pretium eget non
      cursus purus tempus porta sodales.
    url: /get-started
    icon: edit
    image: ""
news:
  - publish_date: April 7, 2021
    title: New Story 1
    body:
      Lorem ipsum dolor sit amet, consectetur adipiscing elit. In venenatis leo
      felis, quis egestas est dignissim vel.
    url: https://www.streamlit.io
  - publish_date: April 7, 2021
    title: New Story 2
    body:
      Lorem ipsum dolor sit amet, consectetur adipiscing elit. In venenatis leo
      felis, quis egestas est dignissim vel. Pellentesque interdum massa metus,
      vitae tincidunt nibh molestie consequat. Sed congue commodo bibendum.
      Donec iaculis velit ante, a venenatis elit dictum ut. Etiam pellentesque
      libero ex, vitae eleifend quam egestas et. Vivamus pulvinar libero et
      iaculis placerat. Suspendisse bibendum orci a turpis suscipit dictum sed
      convallis risus. Aliquam eros erat, hendrerit vel viverra pretium,
      vulputate ac dui. Nullam vitae arcu ut enim tincidunt blandit. Donec
      sapien mi, vulputate eu sagittis pellentesque, imperdiet elementum nisl.
      In dapibus quam id magna pretium finibus. Curabitur id nunc dolor.
      Pellentesque eu tellus vitae neque sollicitudin sodales. Integer arcu
      urna, rutrum vel arcu sit amet, aliquam lobortis est.
    url: https://www.streamlit.io
next: get-started
---

[Streamlit](https://www.streamlit.io) is an open-source Python library that makes it easy to create and share beautiful, custom web apps for machine learning and data science. In just a few minutes you can build and deploy powerful data apps - so let’s get started!


================================================
File: /content/menu.md
================================================
---
site_menu:
  - category: Get started
    url: /get-started
    color: orange-70
    icon: rocket_launch
  - category: Get started / Installation
    url: /get-started/installation
  - category: Get started / Installation / Use command line
    url: /get-started/installation/command-line
  - category: Get started / Installation / Use Anaconda Distribution
    url: /get-started/installation/anaconda-distribution
  - category: Get started / Installation / Use GitHub Codespaces
    url: /get-started/installation/community-cloud
  - category: Get started / Installation / Use Snowflake
    url: /get-started/installation/streamlit-in-snowflake
  - category: Get started / Fundamentals
    url: /get-started/fundamentals
  - category: Get started / Fundamentals / Basic concepts
    url: /get-started/fundamentals/main-concepts
  - category: Get started / Fundamentals / Advanced concepts
    url: /get-started/fundamentals/advanced-concepts
  - category: Get started / Fundamentals / Additional features
    url: /get-started/fundamentals/additional-features
  - category: Get started / Fundamentals / Summary
    url: /get-started/fundamentals/summary
  - category: Get started / First steps
    url: /get-started/tutorials
  - category: Get started / First steps / Create an app
    url: /get-started/tutorials/create-an-app
  - category: Get started / First steps / Create a multipage app
    url: /get-started/tutorials/create-a-multipage-app

  - category: Develop
    url: /develop
    color: indigo-70
    icon: code

  - category: Develop / Concepts
    url: /develop/concepts
  - category: Develop / Concepts / CORE
  - category: Develop / Concepts / Architecture & execution
    url: /develop/concepts/architecture
  - category: Develop / Concepts / Architecture & execution / Running your app
    url: /develop/concepts/architecture/run-your-app
  - category: Develop / Concepts / Architecture & execution / Streamlit's architecture
    url: /develop/concepts/architecture/architecture
  - category: Develop / Concepts / Architecture & execution / The app chrome
    url: /develop/concepts/architecture/app-chrome
  - category: Develop / Concepts / Architecture & execution / Caching
    url: /develop/concepts/architecture/caching
  - category: Develop / Concepts / Architecture & execution / Session State
    url: /develop/concepts/architecture/session-state
  - category: Develop / Concepts / Architecture & execution / Forms
    url: /develop/concepts/architecture/forms
  - category: Develop / Concepts / Architecture & execution / Fragments
    url: /develop/concepts/architecture/fragments
  - category: Develop / Concepts / Architecture & execution/ Widget behavior
    url: /develop/concepts/architecture/widget-behavior
  - category: Develop / Concepts / Multipage apps
    url: /develop/concepts/multipage-apps
  - category: Develop / Concepts / Multipage apps / Overview
    url: /develop/concepts/multipage-apps/overview
  - category: Develop / Concepts / Multipage apps / Page and navigation
    url: /develop/concepts/multipage-apps/page-and-navigation
  - category: Develop / Concepts / Multipage apps / Pages directory
    url: /develop/concepts/multipage-apps/pages-directory
  - category: Develop / Concepts / Multipage apps / Working with widgets
    url: /develop/concepts/multipage-apps/widgets
  - category: Develop / Concepts / App design
    url: /develop/concepts/design
  - category: Develop / Concepts / App design / Animate & update elements
    url: /develop/concepts/design/animate
  - category: Develop / Concepts / App design / Button behavior and examples
    url: /develop/concepts/design/buttons
  - category: Develop / Concepts / App design / Dataframes
    url: /develop/concepts/design/dataframes
  - category: Develop / Concepts / App design / Using custom classes
    url: /develop/concepts/design/custom-classes
  - category: Develop / Concepts / App design / Working with timezones
    url: /develop/concepts/design/timezone-handling
  - category: Develop / Concepts / ADDITIONAL
  - category: Develop / Concepts / Connections and secrets
    url: /develop/concepts/connections
  - category: Develop / Concepts / Connections and secrets / Connecting to data
    url: /develop/concepts/connections/connecting-to-data
  - category: Develop / Concepts / Connections and secrets / Secrets management
    url: /develop/concepts/connections/secrets-management
  - category: Develop / Concepts / Connections and secrets / Security reminders
    url: /develop/concepts/connections/security-reminders
  - category: Develop / Concepts / Custom components
    url: /develop/concepts/custom-components
  - category: Develop / Concepts / Custom components / Intro to custom components
    url: /develop/concepts/custom-components/intro
  - category: Develop / Concepts / Custom components / Create a Component
    url: /develop/concepts/custom-components/create
  - category: Develop / Concepts / Custom components / Publish a Component
    url: /develop/concepts/custom-components/publish
  - category: Develop / Concepts / Custom components / Limitations
    url: /develop/concepts/custom-components/limitations
  - category: Develop / Concepts / Custom components / Component gallery
    url: https://streamlit.io/components
  - category: Develop / Concepts / Configuration and theming
    url: /develop/concepts/configuration
  - category: Develop / Concepts / Configuration and theming / Configuration options
    url: /develop/concepts/configuration/options
  - category: Develop / Concepts / Configuration and theming / HTTPS support
    url: /develop/concepts/configuration/https-support
  - category: Develop / Concepts / Configuration and theming / Serving static files
    url: /develop/concepts/configuration/serving-static-files
  - category: Develop / Concepts / Configuration and theming / Customize your theme
    url: /develop/concepts/configuration/theming
  - category: Develop / Concepts / App testing
    url: /develop/concepts/app-testing
  - category: Develop / Concepts / App testing / Get started
    url: /develop/concepts/app-testing/get-started
  - category: Develop / Concepts / App testing / Beyond the basics
    url: /develop/concepts/app-testing/beyond-the-basics
  - category: Develop / Concepts / App testing / Automate your tests
    url: /develop/concepts/app-testing/automate-tests
  - category: Develop / Concepts / App testing / Example
    url: /develop/concepts/app-testing/examples
  - category: Develop / Concepts / App testing / Cheat sheet
    url: /develop/concepts/app-testing/cheat-sheet

  - category: Develop / API reference
    url: /develop/api-reference
  - category: Develop / API reference / PAGE ELEMENTS
  - category: Develop / API reference / Write and magic
    url: /develop/api-reference/write-magic
  - category: Develop / API reference / Write and magic / st.write
    url: /develop/api-reference/write-magic/st.write
    isVersioned: true
  - category: Develop / API reference / Write and magic / st.write_stream
    url: /develop/api-reference/write-magic/st.write_stream
    isVersioned: true
  - category: Develop / API reference / Write and magic / magic
    url: /develop/api-reference/write-magic/magic
  - category: Develop / API reference / Text elements
    url: /develop/api-reference/text
  - category: Develop / API reference / Text elements / HEADINGS & BODY
  - category: Develop / API reference / Text elements / st.title
    url: /develop/api-reference/text/st.title
    isVersioned: true
  - category: Develop / API reference / Text elements / st.header
    url: /develop/api-reference/text/st.header
    isVersioned: true
  - category: Develop / API reference / Text elements / st.subheader
    url: /develop/api-reference/text/st.subheader
    isVersioned: true
  - category: Develop / API reference / Text elements / st.markdown
    url: /develop/api-reference/text/st.markdown
    isVersioned: true
  - category: Develop / API reference / Text elements / FORMATTED TEXT
  - category: Develop / API reference / Text elements / st.caption
    url: /develop/api-reference/text/st.caption
    isVersioned: true
  - category: Develop / API reference / Text elements / st.code
    url: /develop/api-reference/text/st.code
    isVersioned: true
  - category: Develop / API reference / Text elements / st.divider
    url: /develop/api-reference/text/st.divider
    isVersioned: true
  - category: Develop / API reference / Text elements / st.echo
    url: /develop/api-reference/text/st.echo
    isVersioned: true
  - category: Develop / API reference / Text elements / st.latex
    url: /develop/api-reference/text/st.latex
    isVersioned: true
  - category: Develop / API reference / Text elements / st.text
    url: /develop/api-reference/text/st.text
    isVersioned: true
  - category: Develop / API reference / Text elements / UTILITIES
  - category: Develop / API reference / Text elements / st.html
    url: https://docs.streamlit.io/develop/api-reference/utilities/st.html
    isVersioned: true
  - category: Develop / API reference / Data elements
    url: /develop/api-reference/data
  - category: Develop / API reference / Data elements / st.dataframe
    url: /develop/api-reference/data/st.dataframe
    isVersioned: true
  - category: Develop / API reference / Data elements / st.data_editor
    url: /develop/api-reference/data/st.data_editor
    isVersioned: true
  - category: Develop / API reference / Data elements / st.column_config
    url: /develop/api-reference/data/st.column_config
  - category: Develop / API reference / Data elements / st.column_config / Column
    url: /develop/api-reference/data/st.column_config/st.column_config.column
    isVersioned: true
  - category: Develop / API reference / Data elements / st.column_config / Text column
    url: /develop/api-reference/data/st.column_config/st.column_config.textcolumn
    isVersioned: true
  - category: Develop / API reference / Data elements / st.column_config / Number column
    url: /develop/api-reference/data/st.column_config/st.column_config.numbercolumn
    isVersioned: true
  - category: Develop / API reference / Data elements / st.column_config / Checkbox column
    url: /develop/api-reference/data/st.column_config/st.column_config.checkboxcolumn
    isVersioned: true
  - category: Develop / API reference / Data elements / st.column_config / Selectbox column
    url: /develop/api-reference/data/st.column_config/st.column_config.selectboxcolumn
    isVersioned: true
  - category: Develop / API reference / Data elements / st.column_config / Datetime column
    url: /develop/api-reference/data/st.column_config/st.column_config.datetimecolumn
    isVersioned: true
  - category: Develop / API reference / Data elements / st.column_config / Date column
    url: /develop/api-reference/data/st.column_config/st.column_config.datecolumn
    isVersioned: true
  - category: Develop / API reference / Data elements / st.column_config / Time column
    url: /develop/api-reference/data/st.column_config/st.column_config.timecolumn
    isVersioned: true
  - category: Develop / API reference / Data elements / st.column_config / List column
    url: /develop/api-reference/data/st.column_config/st.column_config.listcolumn
    isVersioned: true
  - category: Develop / API reference / Data elements / st.column_config / Link column
    url: /develop/api-reference/data/st.column_config/st.column_config.linkcolumn
    isVersioned: true
  - category: Develop / API reference / Data elements / st.column_config / Image column
    url: /develop/api-reference/data/st.column_config/st.column_config.imagecolumn
    isVersioned: true
  - category: Develop / API reference / Data elements / st.column_config / Area chart column
    url: /develop/api-reference/data/st.column_config/st.column_config.areachartcolumn
    isVersioned: true
  - category: Develop / API reference / Data elements / st.column_config / Line chart column
    url: /develop/api-reference/data/st.column_config/st.column_config.linechartcolumn
    isVersioned: true
  - category: Develop / API reference / Data elements / st.column_config / Bar chart column
    url: /develop/api-reference/data/st.column_config/st.column_config.barchartcolumn
    isVersioned: true
  - category: Develop / API reference / Data elements / st.column_config / Progress column
    url: /develop/api-reference/data/st.column_config/st.column_config.progresscolumn
    isVersioned: true
  - category: Develop / API reference / Data elements / st.table
    url: /develop/api-reference/data/st.table
    isVersioned: true
  - category: Develop / API reference / Data elements / st.metric
    url: /develop/api-reference/data/st.metric
    isVersioned: true
  - category: Develop / API reference / Data elements / st.json
    url: /develop/api-reference/data/st.json
    isVersioned: true
  - category: Develop / API reference / Data elements / st.experimental_data_editor
    url: /develop/api-reference/data/st.experimental_data_editor
    isVersioned: true
    isDeprecated: true
    visible: false
  - category: Develop / API reference / Chart elements
    url: /develop/api-reference/charts
  - category: Develop / API reference / Chart elements / SIMPLE
  - category: Develop / API reference / Chart elements / st.area_chart
    url: /develop/api-reference/charts/st.area_chart
    isVersioned: true
  - category: Develop / API reference / Chart elements / st.bar_chart
    url: /develop/api-reference/charts/st.bar_chart
    isVersioned: true
  - category: Develop / API reference / Chart elements / st.line_chart
    url: /develop/api-reference/charts/st.line_chart
    isVersioned: true
  - category: Develop / API reference / Chart elements / st.map
    url: /develop/api-reference/charts/st.map
    isVersioned: true
  - category: Develop / API reference / Chart elements / st.scatter_chart
    url: /develop/api-reference/charts/st.scatter_chart
    isVersioned: true
  - category: Develop / API reference / Chart elements / ADVANCED
  - category: Develop / API reference / Chart elements / st.altair_chart
    url: /develop/api-reference/charts/st.altair_chart
    isVersioned: true
  - category: Develop / API reference / Chart elements / st.bokeh_chart
    url: /develop/api-reference/charts/st.bokeh_chart
    isVersioned: true
  - category: Develop / API reference / Chart elements / st.graphviz_chart
    url: /develop/api-reference/charts/st.graphviz_chart
    isVersioned: true
  - category: Develop / API reference / Chart elements / st.plotly_chart
    url: /develop/api-reference/charts/st.plotly_chart
    isVersioned: true
  - category: Develop / API reference / Chart elements / st.pydeck_chart
    url: /develop/api-reference/charts/st.pydeck_chart
    isVersioned: true
  - category: Develop / API reference / Chart elements / st.pyplot
    url: /develop/api-reference/charts/st.pyplot
    isVersioned: true
  - category: Develop / API reference / Chart elements / st.vega_lite_chart
    url: /develop/api-reference/charts/st.vega_lite_chart
    isVersioned: true
  - category: Develop / API reference / Input widgets
    url: /develop/api-reference/widgets
  - category: Develop / API reference / Input widgets / BUTTONS
  - category: Develop / API reference / Input widgets / st.button
    url: /develop/api-reference/widgets/st.button
    isVersioned: true
  - category: Develop / API reference / Input widgets / st.download_button
    url: /develop/api-reference/widgets/st.download_button
    isVersioned: true
  - category: Develop / API reference / Input widgets / st.form_submit_button
    url: https://docs.streamlit.io/develop/api-reference/execution-flow/st.form_submit_button
    isVersioned: true
  - category: Develop / API reference / Input widgets / st.link_button
    url: /develop/api-reference/widgets/st.link_button
    isVersioned: true
  - category: Develop / API reference / Input widgets / st.page_link
    url: /develop/api-reference/widgets/st.page_link
    isVersioned: true
  - category: Develop / API reference / Input widgets / SELECTIONS
  - category: Develop / API reference / Input widgets / st.checkbox
    url: /develop/api-reference/widgets/st.checkbox
    isVersioned: true
  - category: Develop / API reference / Input widgets / st.color_picker
    url: /develop/api-reference/widgets/st.color_picker
    isVersioned: true
  - category: Develop / API reference / Input widgets / st.feedback
    url: /develop/api-reference/widgets/st.feedback
    isVersioned: true
  - category: Develop / API reference / Input widgets / st.multiselect
    url: /develop/api-reference/widgets/st.multiselect
    isVersioned: true
  - category: Develop / API reference / Input widgets / st.pills
    url: /develop/api-reference/widgets/st.pills
    isVersioned: true
  - category: Develop / API reference / Input widgets / st.radio
    url: /develop/api-reference/widgets/st.radio
    isVersioned: true
  - category: Develop / API reference / Input widgets / st.segmented_control
    url: /develop/api-reference/widgets/st.segmented_control
    isVersioned: true
  - category: Develop / API reference / Input widgets / st.selectbox
    url: /develop/api-reference/widgets/st.selectbox
    isVersioned: true
  - category: Develop / API reference / Input widgets / st.select_slider
    url: /develop/api-reference/widgets/st.select_slider
    isVersioned: true
  - category: Develop / API reference / Input widgets / st.toggle
    url: /develop/api-reference/widgets/st.toggle
    isVersioned: true
  - category: Develop / API reference / Input widgets / NUMERIC
  - category: Develop / API reference / Input widgets / st.number_input
    url: /develop/api-reference/widgets/st.number_input
    isVersioned: true
  - category: Develop / API reference / Input widgets / st.slider
    url: /develop/api-reference/widgets/st.slider
    isVersioned: true
  - category: Develop / API reference / Input widgets / DATE & TIME
  - category: Develop / API reference / Input widgets / st.date_input
    url: /develop/api-reference/widgets/st.date_input
    isVersioned: true
  - category: Develop / API reference / Input widgets / st.time_input
    url: /develop/api-reference/widgets/st.time_input
    isVersioned: true
  - category: Develop / API reference / Input widgets / TEXT
  - category: Develop / API reference / Input widgets / st.chat_input
    url: https://docs.streamlit.io/develop/api-reference/chat/st.chat_input
    isVersioned: true
  - category: Develop / API reference / Input widgets / st.text_area
    url: /develop/api-reference/widgets/st.text_area
    isVersioned: true
  - category: Develop / API reference / Input widgets / st.text_input
    url: /develop/api-reference/widgets/st.text_input
    isVersioned: true
  - category: Develop / API reference / Input widgets / MEDIA & FILES
  - category: Develop / API reference / Input widgets / st.audio_input
    url: /develop/api-reference/widgets/st.audio_input
    isVersioned: true
  - category: Develop / API reference / Input widgets / st.camera_input
    url: /develop/api-reference/widgets/st.camera_input
    isVersioned: true
  - category: Develop / API reference / Input widgets / st.data_editor
    url: https://docs.streamlit.io/develop/api-reference/data/st.data_editor
    isVersioned: true
  - category: Develop / API reference / Input widgets / st.file_uploader
    url: /develop/api-reference/widgets/st.file_uploader
    isVersioned: true
  - category: Develop / API reference / Media elements
    url: /develop/api-reference/media
  - category: Develop / API reference / Media elements / st.audio
    url: /develop/api-reference/media/st.audio
    isVersioned: true
  - category: Develop / API reference / Media elements / st.image
    url: /develop/api-reference/media/st.image
    isVersioned: true
  - category: Develop / API reference / Media elements / st.logo
    url: /develop/api-reference/media/st.logo
    isVersioned: true
  - category: Develop / API reference / Media elements / st.video
    url: /develop/api-reference/media/st.video
    isVersioned: true
  - category: Develop / API reference / Layouts and containers
    url: /develop/api-reference/layout
  - category: Develop / API reference / Layouts and containers / st.columns
    url: /develop/api-reference/layout/st.columns
    isVersioned: true
  - category: Develop / API reference / Layouts and containers / st.container
    url: /develop/api-reference/layout/st.container
    isVersioned: true
  - category: Develop / API reference / Layouts and containers / st.dialog
    url: https://docs.streamlit.io/develop/api-reference/execution-flow/st.dialog
    isVersioned: true
  - category: Develop / API reference / Layouts and containers / st.empty
    url: /develop/api-reference/layout/st.empty
    isVersioned: true
  - category: Develop / API reference / Layouts and containers / st.expander
    url: /develop/api-reference/layout/st.expander
    isVersioned: true
  - category: Develop / API reference / Layouts and containers / st.form
    url: https://docs.streamlit.io/develop/api-reference/execution-flow/st.form
    isVersioned: true
  - category: Develop / API reference / Layouts and containers / st.popover
    url: /develop/api-reference/layout/st.popover
    isVersioned: true
  - category: Develop / API reference / Layouts and containers / st.sidebar
    url: /develop/api-reference/layout/st.sidebar
    isVersioned: true
  - category: Develop / API reference / Layouts and containers / st.tabs
    url: /develop/api-reference/layout/st.tabs
    isVersioned: true
  - category: Develop / API reference / Chat elements
    url: /develop/api-reference/chat
  - category: Develop / API reference / Chat elements / st.chat_input
    url: /develop/api-reference/chat/st.chat_input
    isVersioned: true
  - category: Develop / API reference / Chat elements / st.chat_message
    url: /develop/api-reference/chat/st.chat_message
    isVersioned: true
  - category: Develop / API reference / Chat elements / st.status
    url: https://docs.streamlit.io/develop/api-reference/status/st.status
    isVersioned: true
  - category: Develop / API reference / Chat elements / st.write_stream
    url: https://docs.streamlit.io/develop/api-reference/write-magic/st.write_stream
    isVersioned: true
  - category: Develop / API reference / Status elements
    url: /develop/api-reference/status
  - category: Develop / API reference / Status elements / CALLOUTS
  - category: Develop / API reference / Status elements / st.success
    url: /develop/api-reference/status/st.success
    isVersioned: true
  - category: Develop / API reference / Status elements / st.info
    url: /develop/api-reference/status/st.info
    isVersioned: true
  - category: Develop / API reference / Status elements / st.warning
    url: /develop/api-reference/status/st.warning
    isVersioned: true
  - category: Develop / API reference / Status elements / st.error
    url: /develop/api-reference/status/st.error
    isVersioned: true
  - category: Develop / API reference / Status elements / st.exception
    url: /develop/api-reference/status/st.exception
    isVersioned: true
  - category: Develop / API reference / Status elements / OTHER
  - category: Develop / API reference / Status elements / st.progress
    url: /develop/api-reference/status/st.progress
    isVersioned: true
  - category: Develop / API reference / Status elements / st.spinner
    url: /develop/api-reference/status/st.spinner
    isVersioned: true
  - category: Develop / API reference / Status elements / st.status
    url: /develop/api-reference/status/st.status
    isVersioned: true
  - category: Develop / API reference / Status elements / st.toast
    url: /develop/api-reference/status/st.toast
    isVersioned: true
  - category: Develop / API reference / Status elements / st.balloons
    url: /develop/api-reference/status/st.balloons
    isVersioned: true
  - category: Develop / API reference / Status elements / st.snow
    url: /develop/api-reference/status/st.snow
    isVersioned: true
  - category: Develop / API reference / Third-party components
    url: https://streamlit.io/components
  - category: Develop / API reference / APPLICATION LOGIC
  - category: Develop / API reference / Navigation and pages
    url: /develop/api-reference/navigation
  - category: Develop / API reference / Navigation and pages / st.navigation
    url: /develop/api-reference/navigation/st.navigation
    isVersioned: true
  - category: Develop / API reference / Navigation and pages / st.Page
    url: /develop/api-reference/navigation/st.page
    isVersioned: true
  - category: Develop / API reference / Navigation and pages / st.page_link
    url: https://docs.streamlit.io/develop/api-reference/widgets/st.page_link
    isVersioned: true
  - category: Develop / API reference / Navigation and pages / st.switch_page
    url: /develop/api-reference/navigation/st.switch_page
    isVersioned: true
  - category: Develop / API reference / Execution flow
    url: /develop/api-reference/execution-flow
  - category: Develop / API reference / Execution flow / st.dialog
    url: /develop/api-reference/execution-flow/st.dialog
    isVersioned: true
  - category: Develop / API reference / Execution flow / st.form
    url: /develop/api-reference/execution-flow/st.form
    isVersioned: true
  - category: Develop / API reference / Execution flow / st.form_submit_button
    url: /develop/api-reference/execution-flow/st.form_submit_button
    isVersioned: true
  - category: Develop / API reference / Execution flow / st.fragment
    url: /develop/api-reference/execution-flow/st.fragment
    isVersioned: true
  - category: Develop / API reference / Execution flow / st.rerun
    url: /develop/api-reference/execution-flow/st.rerun
    isVersioned: true
  - category: Develop / API reference / Execution flow / st.stop
    url: /develop/api-reference/execution-flow/st.stop
    isVersioned: true
  - category: Develop / API reference / Execution flow / st.experimental_rerun
    url: /develop/api-reference/execution-flow/st.experimental_rerun
    isVersioned: true
    isDeprecated: true
    visible: false
  - category: Develop / API reference / Caching and state
    url: /develop/api-reference/caching-and-state
  - category: Develop / API reference / Caching and state / st.cache_data
    url: /develop/api-reference/caching-and-state/st.cache_data
    isVersioned: true
  - category: Develop / API reference / Caching and state / st.cache_resource
    url: /develop/api-reference/caching-and-state/st.cache_resource
    isVersioned: true
  - category: Develop / API reference / Caching and state / st.experimental_memo
    url: /develop/api-reference/caching-and-state/st.experimental_memo
    isVersioned: true
    isDeprecated: true
    visible: false
  - category: Develop / API reference / Caching and state / st.experimental_singleton
    url: /develop/api-reference/caching-and-state/st.experimental_singleton
    isVersioned: true
    isDeprecated: true
    visible: false
  - category: Develop / API reference / Caching and state / st.session_state
    url: /develop/api-reference/caching-and-state/st.session_state
  - category: Develop / API reference / Caching and state / st.query_params
    url: /develop/api-reference/caching-and-state/st.query_params
    isVersioned: true
  - category: Develop / API reference / Caching and state / st.experimental_get_query_params
    url: /develop/api-reference/caching-and-state/st.experimental_get_query_params
    isVersioned: true
    isDeprecated: true
  - category: Develop / API reference / Caching and state / st.experimental_set_query_params
    url: /develop/api-reference/caching-and-state/st.experimental_set_query_params
    isVersioned: true
    isDeprecated: true
  - category: Develop / API reference / Connections and secrets
    url: /develop/api-reference/connections
  - category: Develop / API reference / Connections and secrets / SECRETS
  - category: Develop / API reference / Connections and secrets / st.secrets
    url: /develop/api-reference/connections/st.secrets
  - category: Develop / API reference / Connections and secrets / secrets.toml
    url: /develop/api-reference/connections/secrets.toml
  - category: Develop / API reference / Connections and secrets / CONNECTIONS
  - category: Develop / API reference / Connections and secrets / st.connection
    url: /develop/api-reference/connections/st.connection
    isVersioned: true
  - category: Develop / API reference / Connections and secrets / SnowflakeConnection
    url: /develop/api-reference/connections/st.connections.snowflakeconnection
    isVersioned: true
  - category: Develop / API reference / Connections and secrets / SQLConnection
    url: /develop/api-reference/connections/st.connections.sqlconnection
    isVersioned: true
  - category: Develop / API reference / Connections and secrets / BaseConnection
    url: /develop/api-reference/connections/st.connections.baseconnection
    isVersioned: true
  - category: Develop / API reference / Connections and secrets / st.experimental_connection
    url: /develop/api-reference/connections/st.experimental_connection
    isVersioned: true
    isDeprecated: true
    visible: false
  - category: Develop / API reference / Connections and secrets / SnowparkConnection
    url: /develop/api-reference/connections/st.connections.snowparkconnection
    isVersioned: true
    isDeprecated: true
  - category: Develop / API reference / Connections and secrets / ExperimentalBaseConnection
    url: /develop/api-reference/connections/st.connections.experimentalbaseconnection
    isVersioned: true
    isDeprecated: true
    visible: false
  - category: Develop / API reference / Custom components
    url: /develop/api-reference/custom-components
    isVersioned: false
  - category: Develop / API reference / Custom components / st.components.v1​.declare_component
    url: /develop/api-reference/custom-components/st.components.v1.declare_component
    isVersioned: true
  - category: Develop / API reference / Custom components / st.components.v1.html
    url: /develop/api-reference/custom-components/st.components.v1.html
    isVersioned: true
  - category: Develop / API reference / Custom components / st.components.v1.iframe
    url: /develop/api-reference/custom-components/st.components.v1.iframe
    isVersioned: true
  - category: Develop / API reference / Utilities
    url: /develop/api-reference/utilities
  - category: Develop / API reference / Utilities / st.context
    url: /develop/api-reference/utilities/st.context
    isVersioned: true
  - category: Develop / API reference / Utilities / st.experimental_user
    url: /develop/api-reference/utilities/st.experimental_user
    isVersioned: true
  - category: Develop / API reference / Utilities / st.help
    url: /develop/api-reference/utilities/st.help
    isVersioned: true
  - category: Develop / API reference / Utilities / st.html
    url: /develop/api-reference/utilities/st.html
    isVersioned: true
  - category: Develop / API reference / Configuration
    url: /develop/api-reference/configuration
    isVersioned: false
  - category: Develop / API reference / Configuration / config.toml
    url: /develop/api-reference/configuration/config.toml
  - category: Develop / API reference / Configuration / st.get_option
    url: /develop/api-reference/configuration/st.get_option
    isVersioned: true
  - category: Develop / API reference / Configuration / st.set_option
    url: /develop/api-reference/configuration/st.set_option
    isVersioned: true
  - category: Develop / API reference / Configuration / st.set_page_config
    url: /develop/api-reference/configuration/st.set_page_config
    isVersioned: true
  - category: Develop / API reference / TOOLS
  - category: Develop / API reference / App testing
    url: /develop/api-reference/app-testing
  - category: Develop / API reference / App testing / st.testing.v1.AppTest
    url: /develop/api-reference/app-testing/st.testing.v1.apptest
    isVersioned: true
  - category: Develop / API reference / App testing / Testing element classes
    url: /develop/api-reference/app-testing/testing-element-classes
    isVersioned: true
  - category: Develop / API reference / Command line
    url: /develop/api-reference/cli
  - category: Develop / API reference / Command line / streamlit run
    url: /develop/api-reference/cli/run

  - category: Develop / Tutorials
    url: /develop/tutorials
  - category: Develop / Tutorials / Elements
    url: /develop/tutorials/elements
  - category: Develop / Tutorials / Elements / CHARTS
  - category: Develop / Tutorials / Elements / Annotate an Altair chart
    url: /develop/tutorials/elements/annotate-an-altair-chart
  - category: Develop / Tutorials / Elements / DATAFRAMES
  - category: Develop / Tutorials / Elements / Get dataframe row-selections
    url: /develop/tutorials/elements/dataframe-row-selections
  - category: Develop / Tutorials / Elements / Get dataframe row-selections (streamlit<1.35.0)
    url: /develop/tutorials/elements/dataframe-row-selections-old
    visible: false
  - category: Develop / Tutorials / Execution flow
    url: /develop/tutorials/execution-flow
  - category: Develop / Tutorials / Execution flow / FRAGMENTS
  - category: Develop / Tutorials / Execution flow / Rerun your app from a fragment
    url: /develop/tutorials/execution-flow/trigger-a-full-script-rerun-from-a-fragment
  - category: Develop / Tutorials / Execution flow / Create a multiple-container fragment
    url: /develop/tutorials/execution-flow/create-a-multiple-container-fragment
  - category: Develop / Tutorials / Execution flow / Start and stop a streaming fragment
    url: /develop/tutorials/execution-flow/start-and-stop-fragment-auto-reruns
  - category: Develop / Tutorials / Connect to data sources
    url: /develop/tutorials/databases
  - category: Develop / Tutorials / Connect to data sources / AWS S3
    url: /develop/tutorials/databases/aws-s3
  - category: Develop / Tutorials / Connect to data sources / BigQuery
    url: /develop/tutorials/databases/bigquery
  - category: Develop / Tutorials / Connect to data sources / Firestore
    url: https://blog.streamlit.io/streamlit-firestore/
  - category: Develop / Tutorials / Connect to data sources / Google Cloud Storage
    url: /develop/tutorials/databases/gcs
  - category: Develop / Tutorials / Connect to data sources / Microsoft SQL Server
    url: /develop/tutorials/databases/mssql
  - category: Develop / Tutorials / Connect to data sources / MongoDB
    url: /develop/tutorials/databases/mongodb
  - category: Develop / Tutorials / Connect to data sources / MySQL
    url: /develop/tutorials/databases/mysql
  - category: Develop / Tutorials / Connect to data sources / Neon
    url: /develop/tutorials/databases/neon
  - category: Develop / Tutorials / Connect to data sources / PostgreSQL
    url: /develop/tutorials/databases/postgresql
  - category: Develop / Tutorials / Connect to data sources / Private Google Sheet
    url: /develop/tutorials/databases/private-gsheet
  - category: Develop / Tutorials / Connect to data sources / Public Google Sheet
    url: /develop/tutorials/databases/public-gsheet
  - category: Develop / Tutorials / Connect to data sources / Snowflake
    url: /develop/tutorials/databases/snowflake
  - category: Develop / Tutorials / Connect to data sources / Supabase
    url: /develop/tutorials/databases/supabase
  - category: Develop / Tutorials / Connect to data sources / Tableau
    url: /develop/tutorials/databases/tableau
  - category: Develop / Tutorials / Connect to data sources / TiDB
    url: /develop/tutorials/databases/tidb
  - category: Develop / Tutorials / Connect to data sources / TigerGraph
    url: /develop/tutorials/databases/tigergraph
  - category: Develop / Tutorials / Multipage apps
    url: /develop/tutorials/multipage
  - category: Develop / Tutorials / Multipage apps / Dynamic navigation
    url: /develop/tutorials/multipage/dynamic-navigation
  - category: Develop / Tutorials / Multipage apps / Build navigation with st.page_link
    url: /develop/tutorials/multipage/st.page_link-nav
    visible: false
  - category: Develop / Tutorials / Work with LLMs
    url: /develop/tutorials/llms
  - category: Develop / Tutorials / Work with LLMs / Build a basic LLM chat app
    url: /develop/tutorials/llms/build-conversational-apps
  - category: Develop / Tutorials / Work with LLMs / Build an LLM app using LangChain
    url: /develop/tutorials/llms/llm-quickstart
  - category: Develop / Quick reference
    url: /develop/quick-reference
  - category: Develop / Quick reference / Cheat sheet
    url: /develop/quick-reference/cheat-sheet
  - category: Develop / Quick reference / Release notes
    url: /develop/quick-reference/release-notes
  - category: Develop / Quick reference / Release notes / 2024
    url: /develop/quick-reference/release-notes/2024
  - category: Develop / Quick reference / Release notes / 2023
    url: /develop/quick-reference/release-notes/2023
  - category: Develop / Quick reference / Release notes / 2022
    url: /develop/quick-reference/release-notes/2022
  - category: Develop / Quick reference / Release notes / 2021
    url: /develop/quick-reference/release-notes/2021
  - category: Develop / Quick reference / Release notes / 2020
    url: /develop/quick-reference/release-notes/2020
  - category: Develop / Quick reference / Release notes / 2019
    url: /develop/quick-reference/release-notes/2019
  - category: Develop / Quick reference / Pre-release features
    url: /develop/quick-reference/prerelease
  - category: Develop / Quick reference/ Roadmap
    url: https://roadmap.streamlit.app

  - category: Deploy
    url: /deploy
    color: lightBlue-70
    icon: web_asset
  - category: Deploy / Concepts
    url: /deploy/concepts
  - category: Deploy / Concepts / Dependencies
    url: /deploy/concepts/dependencies
  - category: Deploy / Concepts / Secrets
    url: /deploy/concepts/secrets
  - category: Deploy / Streamlit Community Cloud
    url: /deploy/streamlit-community-cloud
  - category: Deploy / Streamlit Community Cloud / Get started
    url: /deploy/streamlit-community-cloud/get-started
  - category: Deploy / Streamlit Community Cloud / Get started / Quickstart
    url: /deploy/streamlit-community-cloud/get-started/quickstart
  - category: Deploy / Streamlit Community Cloud / Get started / Create your account
    url: /deploy/streamlit-community-cloud/get-started/create-your-account
  - category: Deploy / Streamlit Community Cloud / Get started / Connect your GitHub account
    url: /deploy/streamlit-community-cloud/get-started/connect-your-github-account
  - category: Deploy / Streamlit Community Cloud / Get started / Explore your workspace
    url: /deploy/streamlit-community-cloud/get-started/explore-your-workspace
  - category: Deploy / Streamlit Community Cloud / Get started / Deploy from a template
    url: /deploy/streamlit-community-cloud/get-started/deploy-from-a-template
  - category: Deploy / Streamlit Community Cloud / Get started / Fork and edit a public app
    url: /deploy/streamlit-community-cloud/get-started/fork-and-edit-a-public-app
  - category: Deploy / Streamlit Community Cloud / Get started / Trust and security
    url: /deploy/streamlit-community-cloud/get-started/trust-and-security
  - category: Deploy / Streamlit Community Cloud / Deploy your app
    url: /deploy/streamlit-community-cloud/deploy-your-app
  - category: Deploy / Streamlit Community Cloud / Deploy your app / File organization
    url: /deploy/streamlit-community-cloud/deploy-your-app/file-organization
  - category: Deploy / Streamlit Community Cloud / Deploy your app / App dependencies
    url: /deploy/streamlit-community-cloud/deploy-your-app/app-dependencies
  - category: Deploy / Streamlit Community Cloud / Deploy your app / Secrets management
    url: /deploy/streamlit-community-cloud/deploy-your-app/secrets-management
  - category: Deploy / Streamlit Community Cloud / Deploy your app / Deploy!
    url: /deploy/streamlit-community-cloud/deploy-your-app/deploy
  - category: Deploy / Streamlit Community Cloud / Manage your app
    url: /deploy/streamlit-community-cloud/manage-your-app
  - category: Deploy / Streamlit Community Cloud / Manage your app / App analytics
    url: /deploy/streamlit-community-cloud/manage-your-app/app-analytics
  - category: Deploy / Streamlit Community Cloud / Manage your app / App settings
    url: /deploy/streamlit-community-cloud/manage-your-app/app-settings
  - category: Deploy / Streamlit Community Cloud / Manage your app / Delete your app
    url: /deploy/streamlit-community-cloud/manage-your-app/delete-your-app
  - category: Deploy / Streamlit Community Cloud / Manage your app / Edit your app
    url: /deploy/streamlit-community-cloud/manage-your-app/edit-your-app
  - category: Deploy / Streamlit Community Cloud / Manage your app / Favorite your app
    url: /deploy/streamlit-community-cloud/manage-your-app/favorite-your-app
  - category: Deploy / Streamlit Community Cloud / Manage your app / Reboot your app
    url: /deploy/streamlit-community-cloud/manage-your-app/reboot-your-app
  - category: Deploy / Streamlit Community Cloud / Manage your app / Rename your app in GitHub
    url: /deploy/streamlit-community-cloud/manage-your-app/rename-your-app
  - category: Deploy / Streamlit Community Cloud / Manage your app / Upgrade Python
    url: /deploy/streamlit-community-cloud/manage-your-app/upgrade-python
  - category: Deploy / Streamlit Community Cloud / Manage your app / Upgrade Streamlit
    url: /deploy/streamlit-community-cloud/manage-your-app/upgrade-streamlit
  - category: Deploy / Streamlit Community Cloud / Share your app
    url: /deploy/streamlit-community-cloud/share-your-app
  - category: Deploy / Streamlit Community Cloud / Share your app / Embed your app
    url: /deploy/streamlit-community-cloud/share-your-app/embed-your-app
  - category: Deploy / Streamlit Community Cloud / Share your app / Search indexability
    url: /deploy/streamlit-community-cloud/share-your-app/indexability
  - category: Deploy / Streamlit Community Cloud / Share your app / Share previews
    url: /deploy/streamlit-community-cloud/share-your-app/share-previews
  - category: Deploy / Streamlit Community Cloud / Manage your account
    url: /deploy/streamlit-community-cloud/manage-your-account
  - category: Deploy / Streamlit Community Cloud / Manage your account / Sign in & sign out
    url: /deploy/streamlit-community-cloud/manage-your-account/sign-in-sign-out
  - category: Deploy / Streamlit Community Cloud / Manage your account / Workspace settings
    url: /deploy/streamlit-community-cloud/manage-your-account/workspace-settings
  - category: Deploy / Streamlit Community Cloud / Manage your account / Manage your GitHub connection
    url: /deploy/streamlit-community-cloud/manage-your-account/manage-your-github-connection
  - category: Deploy / Streamlit Community Cloud / Manage your account / Update your email
    url: /deploy/streamlit-community-cloud/manage-your-account/update-your-email
  - category: Deploy / Streamlit Community Cloud / Manage your account / Delete your account
    url: /deploy/streamlit-community-cloud/manage-your-account/delete-your-account
  - category: Deploy / Streamlit Community Cloud / Status and limitations
    url: /deploy/streamlit-community-cloud/status
  - category: Deploy / Snowflake
    url: /deploy/snowflake
  - category: Deploy / Other platforms
    url: /deploy/tutorials
  - category: Deploy / Other platforms / Docker
    url: /deploy/tutorials/docker
  - category: Deploy / Other platforms / Kubernetes
    url: /deploy/tutorials/kubernetes

  - category: Knowledge base
    url: /knowledge-base
    color: darkBlue-70
    icon: school
  - category: Knowledge base / FAQ
    url: /knowledge-base/using-streamlit
  - category: Knowledge base / FAQ / How do I create an anchor link?
    url: /knowledge-base/using-streamlit/create-anchor-link
    visible: false
  - category: Knowledge base / FAQ / Enabling camera access in your browser
    url: /knowledge-base/using-streamlit/enable-camera
    visible: false
  - category: Knowledge base / FAQ / How to download a file in Streamlit?
    url: /knowledge-base/using-streamlit/how-download-file-streamlit
    visible: false
  - category: Knowledge base / FAQ / How to download a Pandas DataFrame as a CSV?
    url: /knowledge-base/using-streamlit/how-download-pandas-dataframe-csv
    visible: false
  - category: Knowledge base / FAQ / How do I upgrade to the latest version of Streamlit?
    url: /knowledge-base/using-streamlit/how-upgrade-latest-version-streamlit
    visible: false
  - category: Knowledge base / FAQ / How to insert elements out of order?
    url: /knowledge-base/using-streamlit/insert-elements-out-of-order
    visible: false
  - category: Knowledge base / FAQ / How can I make st.pydeck_chart use custom Mapbox styles?
    url: /knowledge-base/using-streamlit/pydeck-chart-custom-mapbox-styles
    visible: false
  - category: Knowledge base / FAQ / How to remove "· Streamlit" from the app title?
    url: /knowledge-base/using-streamlit/remove-streamlit-app-title
    visible: false
  - category: Knowledge base / FAQ / How do you retrieve the filename of a file uploaded with st.file_uploader?
    url: /knowledge-base/using-streamlit/retrieve-filename-uploaded
    visible: false
  - category: Knowledge base / FAQ / Sanity checks
    url: /knowledge-base/using-streamlit/sanity-checks
    visible: false
  - category: Knowledge base / FAQ / How can I make Streamlit watch for changes in other modules I'm importing in my app?
    url: /knowledge-base/using-streamlit/streamlit-watch-changes-other-modules-importing-app
    visible: false
  - category: Knowledge base / FAQ / What browsers does Streamlit support?
    url: /knowledge-base/using-streamlit/supported-browsers
    visible: false
  - category: Knowledge base / FAQ / Where does st.file_uploader store uploaded files and when do they get deleted?
    url: /knowledge-base/using-streamlit/where-file-uploader-store-when-deleted
    visible: false
  - category: Knowledge base / FAQ / Widget updating for every second input when using session state
    url: /knowledge-base/using-streamlit/widget-updating-session-state
    visible: false
  - category: Knowledge base / FAQ / Why does Streamlit restrict nested st.columns?
    url: /knowledge-base/using-streamlit/why-streamlit-restrict-nested-columns
    visible: false
  - category: Knowledge base / FAQ / What is serializable session state?
    url: /knowledge-base/using-streamlit/serializable-session-state
    visible: false
  - category: Knowledge base / Installing dependencies
    url: /knowledge-base/dependencies
  - category: Knowledge base / Installing dependencies / How to install a package not on PyPI or Conda but available on GitHub
    url: /knowledge-base/dependencies/install-package-not-pypi-conda-available-github
    visible: false
  - category: Knowledge base / Installing dependencies / ImportError libGL.so.1 cannot open shared object file No such file or directory
    url: /knowledge-base/dependencies/libgl
    visible: false
  - category: Knowledge base / Installing dependencies / ModuleNotFoundError No module named
    url: /knowledge-base/dependencies/module-not-found-error
    visible: false
  - category: Knowledge base / Installing dependencies / ERROR No matching distribution found for
    url: /knowledge-base/dependencies/no-matching-distribution
    visible: false
  - category: Knowledge base / Deployment issues
    url: /knowledge-base/deploy
  - category: Knowledge base / Deployment issues / Authentication without SSO
    url: /knowledge-base/deploy/authentication-without-sso
    visible: false
  - category: Knowledge base / Deployment issues / How can I deploy multiple Streamlit apps on different subdomains?
    url: /knowledge-base/deploy/deploy-multiple-streamlit-apps-different-subdomains
    visible: false
  - category: Knowledge base / Deployment issues / How do I deploy Streamlit on a domain so it appears to run on a regular port (i.e. port 80)?
    url: /knowledge-base/deploy/deploy-streamlit-domain-port-80
    visible: false
  - category: Knowledge base / Deployment issues / Does Streamlit support the WSGI Protocol? (aka Can I deploy Streamlit with gunicorn?)
    url: /knowledge-base/deploy/does-streamlit-support-wsgi-protocol
    visible: false
  - category: Knowledge base / Deployment issues / How do I increase the upload limit of st.file_uploader on Streamlit Community Cloud?
    url: /knowledge-base/deploy/increase-file-uploader-limit-streamlit-cloud
    visible: false
  - category: Knowledge base / Deployment issues / Invoking a Python subprocess in a deployed Streamlit app
    url: /knowledge-base/deploy/invoking-python-subprocess-deployed-streamlit-app
    visible: false
  - category: Knowledge base / Deployment issues / App is not loading when running remotely
    url: /knowledge-base/deploy/remote-start
    visible: false
  - category: Knowledge base / Deployment issues / Argh. This app has gone over its resource limits
    url: /knowledge-base/deploy/resource-limits
    visible: false
  - category: Knowledge base / Deployment issues / How do I share apps with viewers outside my organization?
    url: /knowledge-base/deploy/share-apps-with-viewers-outside-organization
    visible: false
  - category: Knowledge base / Deployment issues / Upgrade the Streamlit version of your app on Streamlit Community Cloud
    url: /knowledge-base/deploy/upgrade-streamlit-version-on-streamlit-cloud
    visible: false
  - category: Knowledge base / Deployment issues / Huh. This is isn't supposed to happen message after trying to log in
    url: /knowledge-base/deploy/huh-this-isnt-supposed-to-happen-message-after-trying-to-log-in
    visible: false
  - category: Knowledge base / Deployment issues / Login attempt to Streamlit Community Cloud fails with error 403
    url: /knowledge-base/deploy/login-attempt-to-streamlit-community-cloud-fails-with-error-403
    visible: false
  - category: Knowledge base / Deployment issues / How to submit a support case for Streamlit Community Cloud
    url: /knowledge-base/deploy/how-to-submit-a-support-case-for-streamlit-community-cloud
    visible: false
---


================================================
File: /content/deploy/_index.md
================================================
---
title: Deploy
slug: /deploy
---

# Deploy

Get all the information you need to deploy your app and share it with your users.

<InlineCalloutContainer>
    <InlineCallout
        color="lightBlue-70"
        icon="book"
        bold="Concepts."
        href="/deploy/concepts"
    >Understand the basics of app deployment.</InlineCallout>
    <InlineCallout
        color="lightBlue-70"
        icon="cloud"
        bold="Streamlit Community Cloud."
        href="/deploy/streamlit-community-cloud"
    >Deploy your app on our free platform and join a community of developers who share their apps around the world. This is a great place for your non-commerical, personal, and educational apps.</InlineCallout>
    <InlineCallout
        color="lightBlue-70"
        icon="ac_unit"
        bold="Snowflake."
        href="/deploy/snowflake"
    >Deploy your app in Snowflake for a secure, enterprise-grade environment. This is a great place for your business apps.</InlineCallout>
    <InlineCallout
        color="lightBlue-70"
        icon="bolt"
        bold="Other platforms."
        href="/deploy/tutorials"
    >Learn how to deploy your app on a variety of platforms with our convenient collection of tutorials.</InlineCallout>
</InlineCalloutContainer>


================================================
File: /content/deploy/community-cloud/_index.md
================================================
---
title: Streamlit Community Cloud
slug: /deploy/streamlit-community-cloud
---

# Welcome to Streamlit Community Cloud

With Streamlit Community Cloud, you can create, deploy, and manage your Streamlit apps &mdash; all for free. Share your apps with the world and build a customized profile page to display your work. Your Community Cloud account connects directly to your GitHub repositories (public or private). Most apps will launch in only a few minutes. Community Cloud handles all of the containerization, so deploying is easy. Bring your own code, or start from one of our popular templates. Rapidly prototype, explore, and update apps by simply changing your code in GitHub. Most changes appear immediately!

Want to avoid the work of setting up a local development environment? Community Cloud can help you quickly configure a codespace to develop in the cloud. Start coding or editing a Streamlit app with just a few clicks. See [Edit your app](/deploy/streamlit-community-cloud/manage-your-app/edit-your-app).

Go to our [Community Cloud quickstart](/deploy/streamlit-community-cloud/get-started/quickstart) to speed-run through creating your account, deploying an example app, and editing it using GitHub Codespaces. If you haven't built your first Streamlit app yet, see [Get started with Streamlit](/get-started).

<InlineCalloutContainer>
    <InlineCallout
        color="lightBlue-70"
        icon="arrow_forward"
        bold="Get started."
        href="/deploy/streamlit-community-cloud/get-started"
    >Learn about Streamlit Community Cloud accounts and how to create one.</InlineCallout>
    <InlineCallout
        color="lightBlue-70"
        icon="flight_takeoff"
        bold="Deploy your app."
        href="/deploy/streamlit-community-cloud/deploy-your-app"
    >A step-by-step guide on how to get your app deployed.</InlineCallout>
    <InlineCallout
        color="lightBlue-70"
        icon="settings"
        bold="Manage your app."
        href="/deploy/streamlit-community-cloud/manage-your-app"
    >Access logs, reboot apps, set favorites, and more. Jump into a GitHub codespace to edit your app in the cloud.</InlineCallout>
    <InlineCallout
        color="lightBlue-70"
        icon="share"
        bold="Share your app."
        href="/deploy/streamlit-community-cloud/share-your-app"
    >Share or embed your app.</InlineCallout>
    <InlineCallout
        color="lightBlue-70"
        icon="manage_accounts"
        bold="Manage your account."
        href="/deploy/streamlit-community-cloud/manage-your-account"
    >Update your email, manage connections, or delete your account.</InlineCallout>
</InlineCalloutContainer>


================================================
File: /content/deploy/community-cloud/status-and-limitations.md
================================================
---
title: Status and limitations
slug: /deploy/streamlit-community-cloud/status
---

# Status and limitations of Community Cloud

## Community Cloud Status

You can view the current status of Community Cloud at [streamlitstatus.com](https://www.streamlitstatus.com/).

## GitHub OAuth scope

To deploy your app, Streamlit requires access to your app's source code in GitHub and the ability to manage the public keys associated with your repositories. The default GitHub OAuth scopes are sufficient to work with apps in public GitHub repositories. However, to access your private repositories, we create a read-only [GitHub Deploy Key](https://docs.github.com/en/free-pro-team@latest/developers/overview/managing-deploy-keys#deploy-keys) and then access your repo using an SSH key. When we create this key, GitHub notifies repo admins of the creation as a security measure.

Streamlit requires the additional `repo` OAuth scope from GitHub to work with your private repos and manage deploy keys. We recognize that the `repo` scope provides Streamlit with extra permissions that we do not really need and which, as people who prize security, we'd rather not even be granted. This was the permission model available from GitHub when Community Cloud was created. However, we are working on adopting the new GitHub permission model to reduce uneeded permissions.

### Developer permissions

Because of the OAuth limitations noted above, a developer must have administrative permissions to a repository to deploy apps from it.

## Repository file structure

You can deploy multiple apps from your repository, and your entrypoint file(s) may be anywhere in your directory structure. However, Community Cloud initializes all apps from the root of your repository, even if the entrypoint file is in a subdirectory. This has the following consequences:

- Community Cloud only recognizes one `.streamlit/configuration.toml` file at the root (of each branch) of your repository.
- You must declare image, video, and audio file paths for Streamlit commands relative to the root of your repository. For example, `st.image`, `st.logo`, and the `page_icon` parameter in `st.set_page_config` expect file locations relative to your working directory (i.e. where you execute `streamlit run`).

## Linux environments

Community Cloud is built on Debian Linux.

- Community Cloud uses Debian 11 ("bullseye"). To browse available packages that can be installed, see the [package list](https://packages.debian.org/bullseye/).
- All file paths must use forward-slash path separators.

## Python environments

- You cannot mix and match Python package managers for a single app. Community Cloud configures your app's Python environment based on the first environment configuration file it finds. For more information, see [Other Python package managers](/deploy/streamlit-community-cloud/deploy-your-app/app-dependencies#other-python-package-managers).
- We recommend that you use the latest version of Streamlit to ensure full Community Cloud functionality. Be sure to take note of Streamlit's [current requirements](https://github.com/streamlit/streamlit/blob/develop/lib/setup.py) for package compatibility when planning your environment, especially `protobuf>=3.20,<6`.
- If you pin `streamlit< 1.20.0`, you must also pin `altair<5`. Earlier versions of Streamlit did not correctly restrict Altair's version. A workaround script running on Community Cloud will forcibly install `altair<5` if a newer version is detected. This could unintentionally upgrade Altair's dependencies in violation of your environment configuration. Newer versions of Streamlit support Altair version 5.
- Community Cloud only supports released versions of Python that are still receiving security updates. You may not use end-of-life, prerelease, or feature versions of Python. For more information, see [Status of Python versions](https://devguide.python.org/versions/).

## Configuration

The following configuration options are set within Community Cloud and will override any contrary setting in your `config.toml` file:

```toml
[client]
showErrorDetails = false

[runner]
fastReruns = true

[server]
runOnSave = true
enableXsrfProtection = true

[browser]
gatherUsageStats = true
```

## IP addresses

If you need to whitelist IP addresses for a connection, Community Cloud is currently served from the following IP addresses:

<Warning>

    These IP addresses may change at any time without notice.

</Warning>

<Flex wrap >
    <div style={{ width: "150px" }}>35.230.127.150</div>
    <div style={{ width: "150px" }}>35.203.151.101</div>
    <div style={{ width: "150px" }}>34.19.100.134</div>
    <div style={{ width: "150px" }}>34.83.176.217</div>
    <div style={{ width: "150px" }}>35.230.58.211</div>
    <div style={{ width: "150px" }}>35.203.187.165</div>
    <div style={{ width: "150px" }}>35.185.209.55</div>
    <div style={{ width: "150px" }}>34.127.88.74</div>
    <div style={{ width: "150px" }}>34.127.0.121</div>
    <div style={{ width: "150px" }}>35.230.78.192</div>
    <div style={{ width: "150px" }}>35.247.110.67</div>
    <div style={{ width: "150px" }}>35.197.92.111</div>
    <div style={{ width: "150px" }}>34.168.247.159</div>
    <div style={{ width: "150px" }}>35.230.56.30</div>
    <div style={{ width: "150px" }}>34.127.33.101</div>
    <div style={{ width: "150px" }}>35.227.190.87</div>
    <div style={{ width: "150px" }}>35.199.156.97</div>
    <div style={{ width: "150px" }}>34.82.135.155</div>
</Flex>

## Other limitations

- When you print something to the Cloud logs, you may need to do a `sys.stdout.flush()` before it shows up.
- Community Cloud hosts all apps in the United States. This is currently not configurable.
- Community Cloud rate limits app updates from GitHub to no more than five per minute.


================================================
File: /content/deploy/community-cloud/deploy-your-app/_index.md
================================================
---
title: Prep and deploy your app on Community Cloud
slug: /deploy/streamlit-community-cloud/deploy-your-app
---

# Prep and deploy your app on Community Cloud

Streamlit Community Cloud lets you deploy your apps in just one click, and most apps will be deployed in only a few minutes. If you don't have an app ready to deploy, you can fork or clone one from our <a href="https://streamlit.io/gallery" target="_blank">App gallery</a>&mdash;you can find apps for machine learning, data visualization, data exploration, A/B testing, and more. You can also [Deploy an app from a template](/deploy/streamlit-community-cloud/get-started/deploy-from-a-template). After you've deployed your app, check out how you can [Edit your app with GitHub Codespaces](/deploy/streamlit-community-cloud/manage-your-app/edit-your-app#edit-your-app-with-github-codespaces).

<Note>

If you want to deploy your app on a different cloud service, see our [Deployment tutorials](/deploy/tutorials).

</Note>

## Summary

The pages that follow explain how to organize your app and provide complete information for Community Cloud to run it correctly.

When your app has everything it needs, deploying is easy. Just go to your workspace and click "**Create app**" in the upper-right corner. Follow the prompts to fill in your app's information, and then click "**Deploy**."

![Deploy a new app from your workspace](/images/streamlit-community-cloud/deploy-empty-new-app.png)

## Ready, set, go!

<InlineCalloutContainer>
    <InlineCallout
        color="lightBlue-70"
        icon="description"
        bold="File organization."
        href="/deploy/streamlit-community-cloud/deploy-your-app/file-organization"
    >Learn how Community Cloud initializes your app and interprets paths. Learn where to put your configuration files.</InlineCallout>
    <InlineCallout
        color="lightBlue-70"
        icon="build_circle"
        bold="App dependencies."
        href="/deploy/streamlit-community-cloud/deploy-your-app/app-dependencies"
    >Learn how to install dependencies and other Python libraries into your deployment environment.</InlineCallout>
    <InlineCallout
        color="lightBlue-70"
        icon="password"
        bold="Secrets management."
        href="/deploy/streamlit-community-cloud/deploy-your-app/secrets-management"
    >Learn about the interface Community Cloud provides to securely upload your <code>secrets.toml</code> data.</InlineCallout>
    <InlineCallout
        color="lightBlue-70"
        icon="flight_takeoff"
        bold="Deploy your app"
        href="/deploy/streamlit-community-cloud/deploy-your-app/deploy"
    >Put it all together to deploy your app for the whole world to see.</InlineCallout>
</InlineCalloutContainer>


================================================
File: /content/deploy/community-cloud/deploy-your-app/app-dependencies.md
================================================
---
title: App dependencies for your Community Cloud app
slug: /deploy/streamlit-community-cloud/deploy-your-app/app-dependencies
---

# App dependencies for your Community Cloud app

The main reason that apps fail to build properly is because Streamlit Community Cloud can't find your dependencies! There are two kinds of dependencies your app might have: Python dependencies and external dependencies. Python dependencies are other Python packages (just like Streamlit!) that you `import` into your script. External dependencies are less common, but they include any other software your script needs to function properly. Because Community Cloud runs on Linux, these will be Linux dependencies installed with `apt-get` outside the Python environment.

For your dependencies to be installed correctly, make sure you:

1. Add a [requirements file](#add-python-dependencies) for Python dependencies.
2. Optional: To manage any external dependencies, add a `packages.txt` file.

<Note>

Python requirements files should be placed either in the root of your repository or in the same
directory as your app's entrypoint file.

</Note>

## Add Python dependencies

With each `import` statement in your script, you are bringing in a Python dependency. You need to tell Community Cloud how to install those dependencies through a Python package manager. We recommend using a `requirements.txt` file, which is based on `pip`.

You should _not_ include <a href="https://docs.python.org/3/py-modindex.html" target="_blank">built-in Python libraries</a> like `math`, `random`, or `distutils` in your `requirements.txt` file. These are a part of Python and aren't installed separately. Also, Community Cloud has `streamlit` installed by default. You don't strictly need to include `streamlit` unless you want to pin or restrict the version. If you deploy an app without a `requirements.txt` file, your app will run in an environment with just `streamlit` (and its dependencies) installed.

<Important>

The version of Python you use is important! Built-in libraries change between versions of Python and other libraries may have specific version requirements, too. Whenever Streamlit supports a new version of Python, Community Cloud quickly follows to default to that new version of Python. Always develop your app in the same version of Python you will use to deploy it. For more information about setting the version of Python when you deploy your app, see [Optional: Configure secrets and Python version](/deploy/streamlit-community-cloud/deploy-your-app/deploy#optional-configure-secrets-and-python-version).

</Important>

If you have a script like the following, no extra dependencies would be needed since `pandas` and `numpy` are installed as direct dependencies of `streamlit`. Similarly, `math` and `random` are built into Python.

```python
import streamlit as st
import pandas as pd
import numpy as np
import math
import random

st.write("Hi!")
```

However, a valid `requirements.txt` file would be:

```none
streamlit
pandas
numpy
```

Alternatively, if you needed to specify certain versions, another valid example would be:

```none
streamlit==1.24.1
pandas>2.0
numpy<=1.25.1
```

In the above example, `streamlit` is pinned to version `1.24.1`, `pandas` must be strictly greater than version 2.0, and `numpy` must be at-or-below version 1.25.1. Each line in your `requirements.txt` file is effectively what you would like to `pip install` into your cloud environment.

<Tip>
    To learn about limitations of Community Cloud's Python environments, see [Community Cloud status and limitations](/deploy/streamlit-community-cloud/status#python-environments).
</Tip>

### Other Python package managers

There are other Python package managers in addition to `pip`. If you want to consider alternatives to using a `requirements.txt` file, Community Cloud will use the first dependency file it finds. Community Cloud will search the directory where your entrypoint file is, then it will search the root of your repository. In each location, dependency files are prioritized in the following order:

<table style={{ textAlign: 'center' }}>
    <tr>
        <th style={{ fontSize: '1.2em' }}> Recognized Filename</th>
        <th style={{ fontSize: '1.2em' }}>Python Package Manager</th>
    </tr>
    <tr>
        <td style={{ fontSize: '1em' }}><code>uv.lock</code></td>
        <td style={{ fontSize: '1em' }}><a href="https://docs.astral.sh/uv/concepts/projects/sync/" target="_blank">uv</a></td>
    </tr>
    <tr>
        <td style={{ fontSize: '1em' }}><code>Pipfile</code></td>
        <td style={{ fontSize: '1em' }}><a href="https://pipenv-fork.readthedocs.io/en/latest/basics.html" target="_blank">pipenv</a></td>
    </tr>
    <tr>
        <td style={{ fontSize: '1em' }}><code>environment.yml</code></td>
        <td style={{ fontSize: '1em' }}><a href="https://conda.io/projects/conda/en/latest/user-guide/tasks/manage-environments.html#creating-an-environment-file-manually" target="_blank">conda</a></td>
    </tr>
    <tr>
        <td style={{ fontSize: '1em' }}><code>requirements.txt</code></td>
        <td style={{ fontSize: '1em' }}><a href="https://pip.pypa.io/en/stable/user_guide/#requirements-files" target="_blank">pip</a><sup>&dagger;</sup></td>
    </tr>
    <tr>
        <td style={{ fontSize: '1em' }}><code>pyproject.toml</code></td>
        <td style={{ fontSize: '1em' }}><a href="https://python-poetry.org/docs/basic-usage/" target="_blank">poetry</a></td>
    </tr>
</table>

&dagger; For efficiency, Community Cloud will attempt to process `requirements.txt` with `uv`, but will fall back to `pip` if needed. `uv` is generally faster and more efficient than `pip`.

<Warning>

You should only use one dependency file for your app. If you include more than one (e.g. `requirements.txt` and `environment.yaml`), only the first file encountered will be used as described above, with any dependency file in your entrypoint file's directory taking precedence over any dependency file in the root of your repository.

</Warning>

## apt-get dependencies

For many apps, a `packages.txt` file is not required. However, if your script requires any software to be installed that is not a Python package, you need a `packages.txt` file. Community Cloud is built on Debian Linux. Anything you want to `apt-get install` must go in your `packages.txt` file. To browse available packages that can be installed, see the Debian 11 ("bullseye") [package list](https://packages.debian.org/bullseye/).

If `packages.txt` exists in the root directory of your repository we automatically detect it, parse it, and install the listed packages. You can read more about apt-get in <a href="https://linux.die.net/man/8/apt-get" target="_blank">Linux documentation</a>.

Add **apt-get** dependencies to `packages.txt` &mdash; one package name per line. For example, <a href="https://github.com/PyMySQL/mysqlclient" target="_blank"><code>mysqlclient</code></a> is a Python package which requires additional software be installed to function. A valid `packages.txt` file to enable `mysqlclient` would be:

```bash
    build-essential
    pkg-config
    default-libmysqlclient-dev
```


================================================
File: /content/deploy/community-cloud/deploy-your-app/deploy.md
================================================
---
title: Deploy your app on Community Cloud
slug: /deploy/streamlit-community-cloud/deploy-your-app/deploy
---

# Deploy your app on Community Cloud

After you've [organized your files](/deploy/streamlit-community-cloud/deploy-your-app/file-organization) and [added your dependencies](/deploy/streamlit-community-cloud/deploy-your-app/app-dependencies) as described on the previous pages, you're ready to deploy your app to Community Cloud!

## Select your repository and entrypoint file

1. From your workspace at <a href="https://share.streamlit.io" target="_blank">share.streamlit.io</a>, in the upper-right corner, click "**Create app**."

   ![Deploy a new app from your workspace](/images/streamlit-community-cloud/deploy-empty-new-app.png)

1. When asked "Do you already have an app?" click "**Yup, I have an app**."
1. Fill in your repository, branch, and file path. Alternatively, to paste a link directly to `your_app.py` on GitHub, click "**Paste GitHub URL**."
1. Optional: In the "App URL" field, choose a subdomain for your new app.

   Every Community Cloud app is deployed to a subdomain on `streamlit.app`, but you can change your app's subdomain at any time. For more information, see [App settings](/deploy/streamlit-community-cloud/manage-your-app/app-settings). In the following example, Community Cloud will deploy an app to `https://red-balloon.streamlit.app/`.

   ![Fill in your app's information to deploy your app](/images/streamlit-community-cloud/deploy-an-app.png)

   Although Community Cloud attempts to suggest available repositories and files, these suggestions are not always complete. If the desired information is not listed for any field, enter it manually.

## Optional: Configure secrets and Python version

<Note>

Streamlit Community Cloud supports all released [versions of Python that are still receiving security updates](https://devguide.python.org/versions/). Streamlit Community Cloud defaults to version 3.12. You can select a version of your choice from the "Python version" dropdown in the "Advanced settings" modal. If an app is running a version of Python that becomes unsupported, it will be forcibly upgraded to the oldest supported version of Python and may break.

</Note>

1. Click "**Advanced settings**."
1. Select your desired version of Python.
1. To define environment variables and secrets, in the "Secrets" field, paste the contents of your `secrets.toml` file.

   For more information, see [Community Cloud secrets management](/deploy/streamlit-community-cloud/deploy-your-app/secrets-management).

1. Click "**Save**."

<div style={{ maxWidth: '70%', margin: 'auto' }}>
<Image alt="Advanced settings for deploying your app" src="/images/streamlit-community-cloud/deploy-an-app-advanced.png" />
</div>

## Watch your app launch

Your app is now being deployed, and you can watch while it launches. Most apps are deployed within a few minutes, but if your app has a lot of dependencies, it may take longer. After the initial deployment, changes to your code should be reflected immediately in your app. Changes to your dependencies will be processed immediately, but may take a few minutes to install.

![Watch your app launch](/images/streamlit-community-cloud/deploy-an-app-provisioning.png)

<Note>

The Streamlit Community Cloud logs on the right-hand side of your app are only viewable to users with write access to your repository. These logs help you debug any issues with the app. Learn more about [Streamlit Community Cloud logs](/deploy/streamlit-community-cloud/manage-your-app#cloud-logs).

</Note>

<a name="your-app-url"></a>

## View your app

That's it&mdash;you're done! Your app now has a unique URL that you can share with others. Read more about how to [Share your app](/deploy/streamlit-community-cloud/share-your-app) with viewers.

### Unique subdomains

If the "**Custom subdomain (optional)**" field is blank when you deploy your app, a URL is assigned following a structure based on your GitHub repo. The subdomain of the URL is a dash-separated list of the following:

- Repository owner (GitHub user or organization)
- Repository name
- Entrypoint file path
- Branch name, if other than `main` or `master`
- A random hash

```bash
https://[GitHub username or organization]-[repo name]-[app path]-[branch name]-[short hash].streamlit.app
```

For example, the following app is deployed from the `streamlit` organization. The repo is `demo-self-driving` and the app name is `streamlit_app.py` in the root directory. The branch name is `master` and therefore not included.

```bash
https://streamlit-demo-self-driving-streamlit-app-8jya0g.streamlit.app
```

### Custom subdomains

Setting a custom subdomain makes it much easier to share your app because you can choose something memorable. To learn how to change the subdomain of a deployed app, see [View or change your app's URL](/deploy/streamlit-community-cloud/manage-your-app/app-settings#view-or-change-your-apps-url).


================================================
File: /content/deploy/community-cloud/deploy-your-app/file-organization.md
================================================
---
title: File organization for your Community Cloud app
slug: /deploy/streamlit-community-cloud/deploy-your-app/file-organization
---

# File organization for your Community Cloud app

Streamlit Community Cloud copies all the files in your repository and executes `streamlit run` from its root directory. Because Community Cloud is creating a new Python environment to run your app, you need to include a declaration of any [App dependencies](/deploy/streamlit-community-cloud/deploy-your-app/app-dependencies) in addition to any [Configuration](/develop/concepts/configuration) options.

You can have multiple apps in your repository, and their entrypoint files can be anywhere in your repository. However, you can only have one configuration file. This page explains how to correctly organize your app, configuration, and dependency files. The following examples assume you are using `requirements.txt` to declare your dependencies because it is the most common. As explained on the next page, Community Cloud supports other formats for configuring your Python environment.

## Basic example

In the following example, the entrypoint file (`your_app.py`) is in the root of the project directory alongside a `requirements.txt` file to declare the app's dependencies.

```
your_repository/
├── requirements.txt
└── your_app.py
```

If you are including custom configuration, your config file must be located at `.streamlit/config.toml` within your repository.

```
your_repository/
├── .streamlit/
│   └── config.toml
├── requirements.txt
└── your_app.py
```

Additionally, any files that need to be locally available to your app should be included in your repository.

<Tip>

If you have really big or binary data that you change frequently, and git is running slowly, you might want to check out [Git Large File Store (LFS)](https://git-lfs.github.com/) as a better way to store large files in GitHub. You don't need to make any changes to your app to start using it. If your GitHub repository uses LFS, it will _just work_ with Streamlit Community Cloud.

</Tip>

## Use an entrypoint file in a subdirectory

When your entrypoint file is in a subdirectory, the configuration file must stay at the root. However, your dependency file may be either at the root or next to your entrypoint file.

Your dependency file can be at the root of your repository while your entrypoint file is in a subdirectory.

```
your_repository/
├── .streamlit/
│   └── config.toml
├── requirements.txt
└── subdirectory
    └── your_app.py
```

Alternatively, your dependency file can be in the same subdirectory as your entrypoint file.

```
your_repository/
├── .streamlit/
│   └── config.toml
└── subdirectory
    ├── requirements.txt
    └── your_app.py
```

Although most Streamlit commands interpret paths relative to the entrypoint file, some commands interpret paths relative to the working directory. On Community Cloud, the working directory is always the root of your repository. Therefore, when developing and testing your app locally, execute `streamlit run` from the root of your repository. This ensures that paths are interpreted consistently between your local environment and Community Cloud.

In the previous example, this would look something like this:

```bash
cd your_repository
streamlit run subdirectory/your_app.py
```

<Tip>
    Remember to always use forward-slash path separators in your paths. Community Cloud can't work with backslash-separated paths.
</Tip>

## Multiple apps in one repository

When you have multiple apps in one repository, they share the same configuration file (`.streamlit/config.toml`) at the root of your repository. A dependency file may be shared or configured separately for these multiple apps. To define separate dependency files for your apps, place each entrypoint file in its own subdirectory along with its own dependency file. To learn more about how Community Cloud prioritizes and parses dependency files, see [App dependencies](/deploy/streamlit-community-cloud/deploy-your-app/app-dependencies).


================================================
File: /content/deploy/community-cloud/deploy-your-app/secrets-management.md
================================================
---
title: Secrets management for your Community Cloud app
slug: /deploy/streamlit-community-cloud/deploy-your-app/secrets-management
---

# Secrets management for your Community Cloud app

## Introduction

If you are [connecting to data sources](/develop/tutorials/databases), you will likely need to handle credentials or secrets. Storing unencrypted secrets in a git repository is a bad practice. If your application needs access to sensitive credentials, the recommended solution is to store those credentials in a file that is not committed to the repository and to pass them as environment variables.

## How to use secrets management

Community Cloud lets you save your secrets within your app's settings. When developing locally, you can use `st.secrets` in your code to read secrets from a `.streamlit/secrets.toml` file. However, this `secrets.toml` file should never be committed to your repository. Instead, when you deploy your app, you can paste the contents of your `secrets.toml` file into the "**Advanced settings**" dialog. You can update your secrets at any time through your app's settings in your workspace.

### Prerequisites

- You should understand how to use `st.secrets` and `secrets.toml`. See [Secrets management](/develop/concepts/connections/secrets-management).

### Advanced settings

While deploying your app, you can access "**Advanced settings**" to set your secrets. After your app is deployed, you can view or update your secrets through the app's settings. The deployment workflow is fully described on the next page, but the "**Advanced settings**" dialog looks like this:

<div style={{ maxWidth: '70%', margin: 'auto' }}>
<Image alt="Advanced settings for deploying your app" src="/images/streamlit-community-cloud/deploy-an-app-advanced.png" />
</div>

Simply copy and paste the contents of your local `secrets.toml` file into the "Secrets" field within the dialog. After you click "**Save**" to commit the changes, that's it!

### Edit your app's secrets

If you need to add or edit your secrets for an app that is already deployed, you can access secrets through your [App settings](/deploy/streamlit-community-cloud/manage-your-app/app-settings). See [View or update your secrets](/deploy/streamlit-community-cloud/manage-your-app/app-settings#view-or-update-your-secrets).


================================================
File: /content/deploy/community-cloud/get-started/_index.md
================================================
---
title: Get started with Streamlit Community Cloud
slug: /deploy/streamlit-community-cloud/get-started
---

# Get started with Streamlit Community Cloud

Welcome to Streamlit Community Cloud, where you can share your Streamlit apps with the world! Whether you've already created your first Streamlit app or you're just getting started, you're in the right place.

First things first, you need to create your Streamlit Community Cloud account to start deploying apps.

<TileContainer>
    <Tile
        icon="rocket_launch"
        title="Quickstart"
        text="Create your account and deploy an example app as fast as possible. Jump right into coding with GitHub Codespaces."
        link="/deploy/streamlit-community-cloud/get-started/quickstart"
        background="lightBlue-70"
    />
    <Tile
        icon="security"
        title="Trust and Security"
        text="Security first! If you want to read up on how we handle your data before you get started, we've got you covered."
        link="/deploy/streamlit-community-cloud/get-started/trust-and-security"
        background="lightBlue-70"
    />
</TileContainer>

If you're looking for help to build your first Streamlit app, read our [Get started](/get-started) docs for the Streamlit library. If you want to fork an app and start with an example, check out our <a href="https://streamlit.io/gallery" target="_blank">App gallery</a>. Either way, it only takes a few minutes to create your first app.

If you're looking for more detailed instructions than the quickstart, try the following:

<InlineCalloutContainer>
    <InlineCallout
        color="lightBlue-70"
        icon="person"
        bold="Create your account."
        href="/deploy/streamlit-community-cloud/get-started/create-your-account"
    >See all the options and get complete explanations as you create your Streamlit Community Cloud account.</InlineCallout>
    <InlineCallout
        color="lightBlue-70"
        icon="code"
        bold="Connect your GitHub account."
        href="/deploy/streamlit-community-cloud/get-started/connect-your-github-account"
    >After your create your Community Cloud account, connect GitHub for source control.</InlineCallout>
    <InlineCallout
        color="lightBlue-70"
        icon="computer"
        bold="Explore your workspace."
        href="/deploy/streamlit-community-cloud/get-started/explore-your-workspace"
    >Take a quick tour of your Community Cloud workspace. See where all the magic happens.</InlineCallout>
    <InlineCallout
        color="lightBlue-70"
        icon="auto_fix_high"
        bold="Deploy an app from a template."
        href="/deploy/streamlit-community-cloud/get-started/deploy-from-a-template"
    >Use a template to get your own app up and running in minutes.</InlineCallout>
    <InlineCallout
        color="lightBlue-70"
        icon="fork_right"
        bold="Fork and edit a public app."
        href="/deploy/streamlit-community-cloud/get-started/fork-and-edit-a-public-app"
    >Start with a bang! Fork a public app and jump right into the code.</InlineCallout>
</InlineCalloutContainer>


================================================
File: /content/deploy/community-cloud/get-started/connect-github.md
================================================
---
title: Connect your GitHub account
slug: /deploy/streamlit-community-cloud/get-started/connect-your-github-account
---

# Connect your GitHub account

Connecting GitHub to your Streamlit Community Cloud account allows you to deploy apps directly from the files you store in your repositories. It also lets the system check for updates to those files and automatically update your apps. When you first connect your GitHub account to your Community Cloud account, you'll be able to deploy apps from your public repositories to Community Cloud. If you want to deploy from private repositories, you can give Community Cloud additional permissions to do so. For more information about these permissions, see [GitHub OAuth scope](/deploy/streamlit-community-cloud/status#github-oauth-scope).

<Important>
    In order to deploy an app, you must have **admin** permissions to its repository. If you don't have admin access, contact the repository's owner or fork the repository to create your own copy. For more help, see our <a href="https://discuss.streamlit.io/" target="_blank">community forum</a>.
</Important>

If you are a member of a GitHub organization, that organization is displayed at the bottom of each GitHub OAuth prompt. In this case, we recommend reading about [Organization access](#organization-access) at the end of this page before performing the steps to connect your GitHub account. You must be an organization's owner in GitHub to grant access to that organization.

## Prerequisites

- You must have a Community Cloud account. See [Create your account](/deploy/streamlit-community-cloud/get-started/create-your-account).
- You must have a GitHub account.

## Add access to public repositories

1. In the upper-left corner, click "**Workspaces <i style={{ verticalAlign: "-.25em", color: "#ff8700" }} className={{ class: "material-icons-sharp" }}>warning</i>**."

<div style={{ maxWidth: '90%', margin: 'auto' }}>
<Image alt="Connect your GitHub account to a new Community Cloud account" src="/images/streamlit-community-cloud/workspace-unconnected-setup.png" />
</div>

1. From the drop down, click "**Connect GitHub account**."
1. Enter your GitHub credentials and follow GitHub's authentication prompts.
1. Click "**Authorize streamlit**."

   <div style={{ maxWidth: '40%', margin: 'auto' }}>
   <Image alt="Authorize Community Cloud to connect to your GitHub account" src="/images/streamlit-community-cloud/GitHub-auth1-none.png" />
   </div>

   This adds the "Streamlit" OAuth application to your GitHub account. This allows Community Cloud to work with your public repositories and create codespaces for you. In the next section, you can allow Community Cloud to access your private repositories, too. For more information about using and reviewing the OAuth applications on your account, see [Using OAuth apps](https://docs.github.com/en/apps/oauth-apps/using-oauth-apps) in GitHub's docs.

## Optional: Add access to private repositories

After your Community Cloud account has access to deploy from your public repositories, you can follow these additional steps to grant access to your private repositories.

1. In the upper-left corner, click on your GitHub username.

<div style={{ maxWidth: '90%', margin: 'auto' }}>
<Image alt="Access your workspace settings" src="/images/streamlit-community-cloud/workspace-empty-menu.png" />
</div>

1. From the drop down, click "**Settings**."
1. On the left side of the dialog, select "**Linked accounts**."
1. Under "Source control," click "**Connect here <i style={{ verticalAlign: "-.25em" }} className={{ class: "material-icons-sharp" }}>arrow_forward</i>**."
1. Click "**Authorize streamlit**."

<div style={{ maxWidth: '40%', margin: 'auto' }}>
<Image alt="Authorize Community Cloud to connect to your private GitHub repositories" src="/images/streamlit-community-cloud/GitHub-auth2-none.png" />
</div>

## Organization access

To deploy apps from repositories owned by a GitHub organization, Community Cloud must have permission to access the organization's repositories. If you are a member of a GitHub organization when you connect your GitHub account, your OAuth prompts will include a section labeled "Organization access."

<div style={{ maxWidth: '40%', margin: 'auto' }}>
<Image alt="GitHub Oauth prompt including organization access" src="/images/streamlit-community-cloud/GitHub-auth1-organizations.png" />
</div>

If you have already connected your GitHub account and need to add access to an organization, follow the steps in [Manage your GitHub connection](/deploy/streamlit-community-cloud/manage-your-account/manage-your-github-connection) to disconnect your GitHub account and start over. Alternatively, if you are not the owner of an organization, you can ask the owner to create a Community Cloud account for themselves and add permission directly.

### Organizations you own

For any organization you own, if authorization has not been previously granted or denied, you can click "**Grant**" before you click "**Authorize streamlit**."

<div style={{ maxWidth: '80%', margin: 'auto' }}>
<Image alt="Authorize your Streamlit on a GitHub organization you own" src="/images/streamlit-community-cloud/GitHub-auth-grant-XL.png" />
</div>

### Organizations owned by others

For an organization you don't own, if authorization has not been previously granted or denied, you can click "**Request**" before you click "**Authorize streamlit**."

<div style={{ maxWidth: '80%', margin: 'auto' }}>
<Image alt="Authorize your Streamlit on a GitHub organization owned by others" src="/images/streamlit-community-cloud/GitHub-auth-request-XL.png" />
</div>

### Previous or pending authorization

If someone has already started the process of authorizing Streamlit for your organization, the OAuth prompt will show the current status.

#### Approved access

If an organization has already granted Streamlit access, the OAuth prompt shows a green check (<i style={{ verticalAlign: "-.25em", color: "#1a7f37" }} className={{ class: "material-icons-sharp" }}>check</i>).

<div style={{ maxWidth: '60%', margin: 'auto' }}>
<Image alt="Approved authorization for Streamlit on an organization" src="/images/streamlit-community-cloud/GitHub-auth-granted-XL.png" />
</div>

#### Pending access

If a request has been previously sent but not yet approved, the OAuth prompt show "Access request pending." Follow up with the organization's owner to accept the request in GitHub.

<div style={{ maxWidth: '60%', margin: 'auto' }}>
<Image alt="Pending authorization for Streamlit on an organization" src="/images/streamlit-community-cloud/GitHub-auth-pending-XL.png" />
</div>

#### Denied access

If a request has been previously sent and denied, the OAuth prompt shows a red X (<i style={{ verticalAlign: "-.25em", color: "#d1242f" }} className={{ class: "material-icons-sharp" }}>close</i>). In this case, the organization owner will need to authorize Streamlit from GitHub. See GitHub's documentation on <a href="https://docs.github.com/en/apps/oauth-apps/using-oauth-apps/authorizing-oauth-apps#oauth-apps-and-organizations" target="_blank">OAuth apps and organizations</a>.

<div style={{ maxWidth: '60%', margin: 'auto' }}>
<Image alt="Denied authorization for Streamlit on an organization" src="/images/streamlit-community-cloud/GitHub-auth-denied-XL.png" />
</div>

## What's next?

Now that you have your account you can [Explore your workspace](/deploy/streamlit-community-cloud/get-started/explore-your-workspace). Or if you're ready to go, jump right in and [Deploy your app](/deploy/streamlit-community-cloud/deploy-your-app).


================================================
File: /content/deploy/community-cloud/get-started/create-your-account.md
================================================
---
title: Create your account
slug: /deploy/streamlit-community-cloud/get-started/create-your-account
---

# Create your account

Before you can start deploying apps for the world to see, you need to sign up for your Streamlit Community Cloud account.

Each Community Cloud account is associated with an email. Two accounts can't have the same email. When sharing a private app, you will assign viewing privileges by email. Additionally, two accounts can't have the same source control (GitHub account). If you try to create a second Community Cloud account with the same source control, Community Cloud will merge the accounts.

## Sign up

Community Cloud allows you to sign in using one of the three following methods:

- Emailed, one-use codes
- Google
- GitHub

<Important>
    Even when you sign in through GitHub, the authentication flow returns your email address to Community Cloud. Changing the email on your GitHub account can affect your Community Cloud account if you sign in through GitHub.
</Important>

1. Go to <a href="https://share.streamlit.io" target="_blank">share.streamlit.io</a>.
1. Click "**Continue to sign-in**."
1. Continue with one of the three options listed below.

   ### Option 1: Sign in using emailed codes

   1. In the "Email" field, enter your email address.
   1. Click "**Continue**." (If prompted, verify you are human.)
   1. Go to your email inbox, and copy your one-time, six-digit code. The code is valid for ten minutes.
   1. Return to the authentication page, and enter your code. (If prompted, verify you are human.)

   ### Option 2: Sign in using Google

   1. Click "**Continue with Google**."
   1. Enter your Google credentials, and follow Google's authentication prompts.

   ### Option 3: Sign in using GitHub

   1. Click "**Continue with GitHub**."
   1. Enter your GitHub credentials, and follow GitHub's authentication prompts.

      This adds the "Streamlit Community Cloud" OAuth application to your GitHub account. This application is only used to pass your email when you sign in to Community Cloud. On the next page, you'll perform additional steps to allow Community Cloud to access your repositories. For more information about using and reviewing the OAuth applications on your account, see [Using OAuth apps](https://docs.github.com/en/apps/oauth-apps/using-oauth-apps) in GitHub's docs.

1. Fill in your information, and click "**Continue**" at the bottom.

   The "Primary email" field is prefilled with the email you used to sign in. If you change this email in the account setup form, it will only impact marketing emails; it will not reflect on your new account. To change the email associated with your account after it's created, see [Update your email address](/deploy/streamlit-community-cloud/manage-your-account/update-your-email).

## Finish up

Congratulations on creating your Streamlit Community Cloud account! A warning icon (<i style={{ verticalAlign: "-.25em", color: "#ff8700" }} className={{ class: "material-icons-sharp" }}>warning</i>) next to "**Workspaces**" in the upper-left corner is expected; this indicates that your account is not yet connected to GitHub. Even if you created your account by signing in through GitHub, your account does not yet have permission to access your repositories. Continue to the next page to connect your GitHub account.


================================================
File: /content/deploy/community-cloud/get-started/deploy-from-a-template.md
================================================
---
title: Deploy an app from a template
slug: /deploy/streamlit-community-cloud/get-started/deploy-from-a-template
---

# Deploy an app from a template

Streamlit Community Cloud makes it easy to get started with several convenient templates. Just pick a template, and Community Cloud will fork it to your account and deploy it. Any edits you push to your new fork will immediately show up in your deployed app. Additionally, if you don't want to use a local development environment, Community Cloud makes it easy to create a GitHub codespace that's fully configured for Streamlit app development.

## Access the template picker

There are two ways to begin deploying a template: the "**Create app**" button and the template gallery at the bottom of your workspace.

- If you click the "**Create app**" button, Community Cloud will ask you "Do you already have an app?" Select "**Nope, create one from a template**."
- If you scroll to the bottom of your workspace in the "**My apps**" section, you can see the most popular templates. Click on one directly, or select "**View all templates**."

The template picker shows a list of available templates on the left. A preview for the current, selected template shows on the right.

!["Deploy from a template" page on Community Cloud](/images/streamlit-community-cloud/deploy-template-picker.png)

## Select a template

1. From the list of templates on the left, select "**GDP dashboard**."
1. Optional: For "Name of new GitHub repository," enter a name for your new, forked repository.

   When you deploy a template, Community Cloud forks the template repository into your GitHub account. Community Cloud chooses a default name for this repository based on the selected template. If you have previously deployed the same template with its default name, Community Cloud will append an auto-incrementing number to the name.

   <Note>
       Even if you have another user's or organization's workspace selected, Community Cloud will always deploy a template app from your personal workspace. That is, Community Cloud will always fork a template into your GitHub user account. If you want to deploy a template app from an organization, manually fork the template in GitHub, and deploy it from your fork in the associated workspace.
   </Note>

1. Optional: In the "App URL" field, choose a subdomain for your new app.

   Every Community Cloud app is deployed to a subdomain on `streamlit.app`, but you can change your app's subdomain at any time. For more information, see [App settings](/deploy/streamlit-community-cloud/manage-your-app/app-settings).

1. Optional: To edit the template in a GitHub codespace immediately, select the option to "**Open GitHub Codespaces...**"

   You can create a codespace for your app at any time. To learn how to create a codespace after you've deployed an app, see [Edit your app](/deploy/streamlit-community-cloud/manage-your-app/edit-your-app).

1. Optional: To change the version of Python, at the bottom of the screen, click "**Advanced settings**," select a Python version, and then click "**Save**."

   <Important>
       After an app is deployed, you can't change the version of Python without deleting and redeploying the app. 
   </Important>

1. At the bottom, click "**Deploy**."

## View your app

- If you didn't select the option to open GitHub Codespaces, you are redirected to your new app.

  ![GDP dashboard template app](/images/streamlit-community-cloud/deploy-template-GDP.png)

- If you selected the option to open GitHub Codespaces, you are redirected to your new codespace, which can take several minutes to be fully initialized. After the Visual Studio Code editor appears in your codespace, it can take several minutes to install Python and start the Streamlit server. When complete, a split screen view displays a code editor on the left and a running app on the right. The code editor opens two tabs by default: the repository's readme file and the app's entrypoint file.

  ![GDP dashboard template app in a codespace](/images/streamlit-community-cloud/deploy-template-GDP-codespace.png)

<Important>
    The app displayed in your codespace is not the same instance you deployed on Community Cloud. Your codespace is a self-contained development environment. When you make edits inside a codespace, those edits don't leave the codespace until you commit them to your repository. When you commit your changes to your repository, Community Cloud detects the changes and updates your deployed app. To learn more, see [Edit your app](/deploy/streamlit-community-cloud/manage-your-app/edit-your-app).
</Important>


================================================
File: /content/deploy/community-cloud/get-started/explore-your-workspace.md
================================================
---
title: Explore your workspace
slug: /deploy/streamlit-community-cloud/get-started/explore-your-workspace
---

# Explore your workspace

If you just [created your account](/deploy/streamlit-community-cloud/get-started/create-your-account) and [connected your GitHub account](/deploy/streamlit-community-cloud/get-started/connect-your-github-account), congrats! You are now signed in and ready to go. If you are joining someone else's workspace you may already see some apps.

## Workspaces

Each GitHub account and organization is associated with a workspace in Community Cloud. When you sign in to Community Cloud for the first time, you will land in your personal workspace associated with your GitHub user account. The upper-left corner of Community Cloud shows your current workspace.

![A new, empty workspace in Streamlit Community Cloud. The workspace owner is displayed in the upper-left corner.](/images/streamlit-community-cloud/workspace-empty-SM.png)

### Switching workspaces

To switch between workspaces, click the workspace name in the upper-left corner and select a new workspace.

Other workspaces are available to you as follows:

- When you have write permissions to a repository and the repository owner has joined Community Cloud, you can select the associated workspace. An owner can be a GitHub user or organization.
- If someone has shared an app with you through Community Cloud, you will see the app's associated workspace. This is view-only access.

![This workspace is for the user `sammy-streamlit`, who has access to their personal workspace and another workspace for the organization `we-love-streamlit`.](/images/streamlit-community-cloud/workspace-empty-switch.png)

### Invite other developers to your workspace

Inviting other developers is simple: Just give them write access to your GitHub repository so that you can code together. When they sign in to <a href="https://share.streamlit.io" target="_blank">share.streamlit.io</a>, they'll have access to your workspace.

Streamlit Community Cloud inherits developer permissions from GitHub. When others sign in to Community Cloud, they will automatically see the workspaces they share with you. From there you can all deploy, manage, and share apps together.

<Note>

When a user is added to a repository on GitHub, it will take at most 15 minutes before they can deploy or manage the app on Community Cloud. If a user is removed from a repository on GitHub, it will take at most 15 minutes before their permission to manage the app from that repository is revoked.

</Note>

And remember, whenever anyone on the team updates the code on GitHub, the app will automatically update for you!

## My apps

The "**My apps**" section of your workspace is your base of operations to deploy and manage your apps. When you deploy an app, it is added to this section of your workspace.

### Deploying apps

If you already have an app saved to a GitHub repo, you can deploy it directly. Otherwise, Community Cloud provides templates you can use. When you deploy from a template, Community Cloud will fork a project into your GitHub account and deploy from the new fork. This is a convenient way to get started if you haven't already created a Streamlit app.

To get started, just click "**Create app**" in the upper-right corner. To learn more, see [Deploy your app](/deploy/streamlit-community-cloud/deploy-your-app) and [Deploy from a template](/deploy/streamlit-community-cloud/get-started/deploy-from-a-template).

## My profile

The "**My profile**" section of your workspace lets you customize a personal portfolio of Streamlit apps to share with the world. Curate and feature your Streamlit apps to show off your work.

## Explore

For inspiration, check out the "**Explore**" section. This is a gallery of Streamlit apps created by the Streamlit community. Check out popular and trending apps, or search for apps in an area that interests you.


================================================
File: /content/deploy/community-cloud/get-started/fork-and-edit.md
================================================
---
title: Fork and edit a public app
slug: /deploy/streamlit-community-cloud/get-started/fork-and-edit-a-public-app
---

# Fork and edit a public app

Community Cloud is all about learning, sharing, and exploring the world of Streamlit. For apps with public repositories, you can quickly fork copies to your GitHub account, deploy your own version, and jump into a codespace on GitHub to start editing and exploring Streamlit code.

1. From a forkable app, in the upper-right corner, click "**Fork**."

   ![Click Fork in the upper-right corner of a public app](/images/streamlit-community-cloud/fork-public-hello.png)

1. Optional: In the "App URL" field, choose a custom subdomain for your app.

   Every Community Cloud app is deployed to a subdomain on `streamlit.app`, but you can change your app's subdomain at any time. For more information, see [App settings](/deploy/streamlit-community-cloud/manage-your-app/app-settings).

1. Click "**Fork!**"

   The repository will be forked to your GitHub account. If you have already forked the repository, Community Cloud will use the existing fork. If your existing fork already has an associated codespace, the codespace will be reused.

   <Warning>
      Do not use this method in the following situations:
      - You have an existing repository that matches the fork name (but isn't a fork of this app).
      - You have an existing fork of this app, but you've changed the name of the repository.

   If you have an existing fork of this app and kept the original repository name, Community Cloud will use your existing fork. If you've previously deployed the app and opened a codespace, Community Cloud will open your existing codespace.
   </Warning>

   ![Click Fork to confirm and deploy your app](/images/streamlit-community-cloud/fork-public-hello-deploy.png)

1. Wait for GitHub to set up your codespace.

   It can take several minutes to fully initialize your codespace. After the Visual Studio Code editor appears in your codespace, it can take several minutes to install Python and start the Streamlit server. When complete, a split screen view displays a code editor on the left and a running app on the right. The code editor opens two tabs by default: the repository's readme file and the app's entrypoint file.

   ![Click Fork to confirm and deploy your app](/images/streamlit-community-cloud/fork-public-hello-codespace.png)

   <Important>
      The app displayed in your codespace is not the same instance you deployed on Community Cloud. Your codespace is a self-contained development environment. When you make edits inside a codespace, those edits don't leave the codespace until you commit them to your repository. When you commit your changes to your repository, Community Cloud detects the changes and updates your deployed app. To learn more, see [Edit your app](/deploy/streamlit-community-cloud/manage-your-app/edit-your-app).
   </Important>

1. Edit your newly forked app as desired. For more instructions on working with GitHub Codespaces, see [Edit your app](/deploy/streamlit-community-cloud/manage-your-app/edit-your-app).


================================================
File: /content/deploy/community-cloud/get-started/quickstart.md
================================================
---
title: Quickstart
slug: /deploy/streamlit-community-cloud/get-started/quickstart
---

# Quickstart

This is a concise set of steps to create your Streamlit Community Cloud account, deploy a sample app, and start editing it with GitHub Codespaces. For other options and complete explanations, start with [Create your account](/deploy/streamlit-community-cloud/get-started/create-your-account).

You will sign in to your GitHub account during this process. Community Cloud will use the email from your GitHub account to create your Community Cloud account. For other sign-in options, see [Create your account](/deploy/streamlit-community-cloud/get-started/create-your-account).

## Prerequisites

- You must have a GitHub account.

## Sign up for Streamlit Community Cloud

1. Go to <a href="https://share.streamlit.io" target="_blank">share.streamlit.io</a>.
1. Click "**Continue to sign-in**."
1. Click "**Continue with GitHub**."
1. Enter your GitHub credentials and follow GitHub's authentication prompts.
1. Fill in your account information, and click "**I accept**" at the bottom.

## Add access to your public repositories

1. In the upper-left corner, click "**Workspaces <i style={{ verticalAlign: "-.25em", color: "#ff8700" }} className={{ class: "material-icons-sharp" }}>warning</i>**."

<div style={{ maxWidth: '90%', margin: 'auto' }}>
<Image alt="Connect your GitHub account to a new Community Cloud account" src="/images/streamlit-community-cloud/workspace-unconnected-setup.png" />
</div>

1. From the drop down, click "**Connect GitHub account**."
1. Enter your GitHub credentials and follow GitHub's authentication prompts.
1. Click "**Authorize streamlit**."

<div style={{ maxWidth: '40%', margin: 'auto' }}>
<Image alt="Authorize Community Cloud to connect to your GitHub account" src="/images/streamlit-community-cloud/GitHub-auth1-none.png" />
</div>

## Optional: Add access to private repositories

1. In the upper-left corner, click on your GitHub username.

<div style={{ maxWidth: '90%', margin: 'auto' }}>
<Image alt="Access your workspace settings" src="/images/streamlit-community-cloud/workspace-empty-menu.png" />
</div>

1. From the drop down, click "**Settings**."
1. On the left side of the dialog, select "**Linked accounts**."
1. Under "Source control," click "**Connect here <i style={{ verticalAlign: "-.25em" }} className={{ class: "material-icons-sharp" }}>arrow_forward</i>**."
1. Click "**Authorize streamlit**."

<div style={{ maxWidth: '40%', margin: 'auto' }}>
<Image alt="Authorize Community Cloud to connect to your private GitHub repositories" src="/images/streamlit-community-cloud/GitHub-auth2-none.png" />
</div>

## Create a new app from a template

1. In the upper-right corner, click "**Create app**."

<div style={{ maxWidth: '90%', margin: 'auto' }}>
<Image alt="Create a new app from your workspace in Streamlit Community Cloud" src="/images/streamlit-community-cloud/deploy-empty-new-app.png" />
</div>

1. When asked "Do you already have an app?" click "**Nope, create one from a template**."
1. From the list of templates on the left, select "**Blank app**."
1. At the bottom, select the option to "**Open GitHub Codespaces...**"
1. At the bottom, click "**Deploy**."

## Edit your app in GitHub Codespaces

1. Wait for GitHub to set up your codespace.

   It can take several minutes to fully initialize your codespace. After the Visual Studio Code editor appears in your codespace, it can take several minutes to install Python and start the Streamlit server. When complete, a split screen view displays a code editor on the left and a running app on the right. The code editor opens two tabs by default: the repository's readme file and the app's entrypoint file.

   <div style={{ maxWidth: '90%', margin: 'auto' }}>
   <Image alt="Your new GitHub Codespace" src="/images/streamlit-community-cloud/deploy-template-blank-codespace.png" />
   </div>

1. Go to the app's entrypoint file (`streamlit_app.py`) in the left pane, and change line 3 by adding "Streamlit" inside `st.title`.

   ```diff
   -st.title("🎈 My new app")
   +st.title("🎈 My new Streamlit app")
   ```

   Files are automatically saved in your codespace with each edit.

1. A moment after typing a change, your app on the right side will display a rerun prompt. Click "**Always rerun**."

   <div style={{ maxWidth: '90%', margin: 'auto' }}>
   <Image alt="Edit the title of your sample Streamlit app" src="/images/streamlit-community-cloud/deploy-template-blank-codespace-edit.png" />
   </div>

   If the rerun prompt disappears before you click it, you can hover over the overflow menu icon (<i style={{ verticalAlign: "-.25em" }} className={{ class: "material-icons-sharp" }}>more_vert</i>) to bring it back.

1. Optional: Continue to make edits and observe the changes within seconds.

## Publish your changes

1. In the left navigation bar, click the source control icon.

<div style={{ maxWidth: '90%', margin: 'auto' }}>
<Image alt="See your deployed Streamlit app" src="/images/streamlit-community-cloud/deploy-template-blank-codespace-edit-source-control.png" />
</div>

1. In the source control sidebar on the left, enter a name for your commit.
1. Click "**<i style={{ verticalAlign: "-.25em" }} className={{ class: "material-icons-sharp" }}>check</i> Commit**."

<div style={{ maxWidth: '90%', margin: 'auto' }}>
<Image alt="See your deployed Streamlit app" src="/images/streamlit-community-cloud/deploy-template-blank-codespace-edit-commit.png" />
</div>

1. To stage and commit all your changes, in the confirmation dialog, click "**Yes**."  Your changes are committed locally in your codespace.
1. To push your commit to GitHub, in the source control sidebar on the left, click "**<i style={{ verticalAlign: "-.25em" }} className={{ class: "material-icons-sharp" }}>cached</i> 1 <i style={{ verticalAlign: "-.25em" }} className={{ class: "material-icons-sharp" }}>arrow_upward</i>**."
1. To push commits to "origin/main," in the confirmation dialog, click "**OK**." 

   Your changes are now saved to your GitHub repository. Community Cloud will immediately reflect the changes in your deployed app.

1. Optional: To see your updated, published app, return to the "**My apps**" section of your workspace at <a href="https://share.streamlit.io" target="_blank">share.streamlit.io</a>, and click on your app.

## Stop or delete your codespace

When you stop interacting with your codespace, GitHub will generally stop your codespace for you. However, the surest way to avoid undesired use of your capacity is to stop or delete your codespace when you are done.

1. Go to <a href="https://github.com/codespaces" target="_blank">github.com/codespaces</a>. At the bottom of the page, all your codespaces are listed. Click the overflow menu icon (<i style={{ verticalAlign: "-.25em" }} className={{ class: "material-icons-sharp" }}>more_horiz</i>) for your codespace.

<div style={{ maxWidth: '90%', margin: 'auto' }}>
<Image alt="Stop or delete your GitHub Codespace" src="/images/streamlit-community-cloud/deploy-hello-codespace-manage.png" />
</div>

2. If you want to return to your work later, click "**Stop codespace**." Otherwise, click "**Delete**."

   <div style={{ maxWidth: '40%', margin: 'auto' }}>
   <Image alt="Stop your GitHub codespace" src="/images/streamlit-community-cloud/codespace-menu.png" />
   </div>

3. Congratulations! You just deployed an app to Streamlit Community Cloud. 🎉 Return to your workspace at <a href="https://share.streamlit.io/" target="_blank">share.streamlit.io/</a> and [deploy another Streamlit app](/deploy/streamlit-community-cloud/deploy-your-app).

   <div style={{ maxWidth: '90%', margin: 'auto' }}>
   <Image alt="See your deployed Streamlit app" src="/images/streamlit-community-cloud/deploy-template-blank-edited.png" />
   </div>


================================================
File: /content/deploy/community-cloud/get-started/security-model.md
================================================
---
title: Streamlit Trust and Security
slug: /deploy/streamlit-community-cloud/get-started/trust-and-security
---

# Streamlit trust and security

Streamlit is a framework that turns Python scripts into interactive apps, giving data scientists the ability to quickly create data and model-based apps for the entire company.

A simple Streamlit app is:

```python
import streamlit as st
number = st.slider("Pick a number: ", min_value=1, max_value=10)
st.text("Your number is " + str(number))
```

When you `streamlit run my_app.py`, you start a web server that runs the interactive application on your local computer at `http://localhost:8501`. This is great for local development. When you want to share with your colleagues, Streamlit Community Cloud enables you to deploy and run these applications in the cloud. Streamlit Community Cloud handles the details of containerization and provides you an interface for easily managing your deployed apps.

This document provides an overview of the security safeguards we've implemented to protect you and your data. Security, however, is a shared responsibility and you are ultimately responsible for making appropriate use of Streamlit and the Streamlit Community Cloud, including implementation of appropriate user-configurable security safeguards and best practices.

## Product security

### Authentication

You must authenticate through GitHub to deploy or administer an app. Authentication through Google or single-use emailed links are required to view a private app when you don't have push or admin permissions on the associated GitHub repository. The single-use emailed links are valid for 15 minutes once requested.

### Permissions

Streamlit Community Cloud inherits the permissions you have assigned in GitHub. Users with write access to a GitHub repository for a given app will be able to make changes in the Streamlit administrative console. However, only users with _admin access_ to a repository are able to **deploy and delete apps**.

## Network and application security

### Data hosting

Our physical infrastructure is hosted and managed within secure data centers maintained by infrastructure-as-a-service cloud providers. Streamlit leverages many of these platforms' built-in security, privacy, and redundancy features. Our cloud providers continually monitor their data centers for risk and undergo assessments to ensure compliance with industry standards.

### Data deletion

Community Cloud users have the option to delete any apps they’ve deployed as well as their entire account.

When a user deletes their application from the admin console, we delete their source code, including any files copied from their GitHub repository or created within our system from the running app. However, we keep a record representing the application in our database. This record contains the coordinates of the application: the GitHub organization or user, the GitHub repository, the branch, and the path of the main module file.

When a user deletes their account, we perform a hard deletion of their data and a hard deletion of all the apps that belong to the GitHub identity associated with their account. In this case, we do not maintain the records of application coordinates described above. When an account is deleted, we also delete any HubSpot contact associated with the Community Cloud account.

### Virtual private cloud

All of our servers are within a virtual private cloud (VPC) with firewalls and network access control lists (ACLs) to allow external access to a select few API endpoints; all other internal services are only accessible within the VPC.

### Encryption

Streamlit apps are served entirely over HTTPS. We use only strong cipher suites and HTTP Strict Transport Security (HSTS) to ensure browsers interact with Streamlit apps over HTTPS.

All data sent to or from Streamlit over the public internet is encrypted in transit using 256-bit encryption. Our API and application endpoints use Transport Layer Security (TLS) 1.2 (or better). We also encrypt data at rest on disk using AES-256.

### Permissions and authentication

Access to Community Cloud user account data is limited to authorized personnel. We run a zero-trust corporate network, utilize single sign-on and multi-factor authentication (MFA), and enforce strong password policies to ensure access to cloud-related services is protected.

### Incident response

Our internal protocol for handling security events includes detection, analysis, response, escalation, and mitigation. Security advisories are made available at [https://streamlit.io/advisories](https://streamlit.io/advisories).

### Penetration testing

Streamlit uses third-party security tools to scan for vulnerabilities on a regular basis. Our security teams conduct periodic, intensive penetration tests on the Streamlit platform. Our product development team responds to any identified issues or potential vulnerabilities to ensure the quality, security, and availability of Streamlit applications.

### Vulnerability management

We keep our systems up-to-date with the latest security patches and continuously monitor for new vulnerabilities. This includes automated scanning of our code repositories for vulnerable dependencies.

If you discover a vulnerability in one of our products or websites, please report the issue to [HackerOne](https://hackerone.com/snowflake?type=team).


================================================
File: /content/deploy/community-cloud/manage-your-account/_index.md
================================================
---
title: Manage your account
slug: /deploy/streamlit-community-cloud/manage-your-account
---

# Manage your account

You can [Update your email](/deploy/streamlit-community-cloud/manage-your-account/update-your-email) or completely [Delete your account](/deploy/streamlit-community-cloud/manage-your-account/delete-your-account) through [Workspace settings](/deploy/streamlit-community-cloud/manage-your-account/workspace-settings).

Your Streamlit Community Cloud account is identified by your email. When you sign in to Community Cloud, regardless of which method you use, you are providing Community Cloud with your email address. In particular, when you sign in to Community Cloud using GitHub, you are using the primary email on your GitHub account. You can view your email identity and source-control identity from your workspace settings, under "[**Linked accounts**](/deploy/streamlit-community-cloud/manage-your-account/workspace-settings#linked-accounts)."

## Access your workspace settings

1. Sign in to <a href="https://share.streamlit.io" target="_blank">share.streamlit.io</a>.
1. In the upper-left corner, click on your workspace name.
1. In the drop-down menu, click "**Settings**."

<div style={{ maxWidth: '75%', marginLeft: '3em' }}>
    <Image src="/images/streamlit-community-cloud/account-settings-header.png" alt="Access your workspace settings from your workspace" />
</div>


================================================
File: /content/deploy/community-cloud/manage-your-account/delete-your-account.md
================================================
---
title: Delete your account
slug: /deploy/streamlit-community-cloud/manage-your-account/delete-your-account
---

# Delete your account

Deleting your Streamlit Community Cloud account is just as easy as creating it. When you delete your account, your information, account, and all your hosted apps are deleted as well. Read more about data deletion in [Streamlit trust and security](/deploy/streamlit-community-cloud/get-started/trust-and-security#data-deletion).

<Warning>

Deleting your account is permanent and cannot be undone. Make sure you really want to delete your account and all hosted apps before proceeding. Any app you've deployed will be deleted, regardless of the workspace it was deployed from.

</Warning>

## How to delete your account

Follow these steps to delete your account:

1. Sign in to Streamlit Community Cloud at <a href="https://share.streamlit.io" target="_blank">share.streamlit.io</a> and access your [Workspace settings](/deploy/streamlit-community-cloud/manage-your-account/workspace-settings).

   ![Delete your Streamlit Community Cloud account from your workspace settings](/images/streamlit-community-cloud/workspace-settings-linked-accounts.png)

1. From the "**Linked accounts**" section, click "**Delete account**."
1. In the confirmation dialog, follow the prompt and click "**Delete account forever**."

   All your information and apps will be permanently deleted.

   ![Your Streamlit Community Cloud account has been deleted.](/images/streamlit-community-cloud/account-deleted.png)

It's that simple! If you have any questions or run into issues deleting your account, please reach out to us on <a href="https://discuss.streamlit.io/c/community-cloud/13" target="_blank">our forum</a>. We're happy to help! 🎈


================================================
File: /content/deploy/community-cloud/manage-your-account/manage-your-github-connection.md
================================================
---
title: Manage your GitHub connection
slug: /deploy/streamlit-community-cloud/manage-your-account/manage-your-github-connection
---

# Manage your GitHub connection

If you have created an account but not yet connected GitHub, see [Connect your GitHub account](/deploy/streamlit-community-cloud/get-started/connect-your-github-account).

If you have already connected your GitHub account but still need to allow Streamlit Community Cloud to access private repositories, see [Optional: Add access to private repositories](/deploy/streamlit-community-cloud/get-started/connect-your-github-account#optional-add-access-to-private-repositories).

## Add access to an organization

If you are in an organization, you can grant or request access to that organization when you connect your GitHub account. For more information, see [Organization access](/deploy/streamlit-community-cloud/get-started/connect-your-github-account#organization-access).

If your GitHub account is already connected, you can remove permissions in your GitHub settings and force Streamlit to reprompt for GitHub authorization the next time you sign in to Community Cloud.

### Revoke and reauthorize

1. From your workspace, click on your workspace name in the upper-right corner. To sign out of Community Cloud, click "**Sign out**." 

   ![Sign out of Streamlit Community Cloud](/images/streamlit-community-cloud/account-sign-out.png)

1. Go to your GitHub application settings at <a href="https://github.com/settings/applications" target="_blank">github.com/settings/applications</a>.
1. Find the "Streamlit" application, and click on the three dots (<i style={{ verticalAlign: "-.25em" }} className={{ class: "material-icons-sharp" }}>more_horiz</i>) to open the overflow menu.

   If you have ever signed in to Community Cloud using GitHub, you will also see the "Streamlit Community Cloud" application in your GitHub account. The "Streamlit" application manages repository access. The "Streamlit Community Cloud" application is only for managing your identity (email) on Community Cloud. You only need to revoke access to the "Streamlit" application.

1. Click "**Revoke**."

   <div style={{ maxWidth: '75%', margin: 'auto' }}>
   <Image alt="Revoke access for Streamlit to access your GitHub account" src="/images/streamlit-community-cloud/GitHub-revoke.png" />
   </div>

1. Click "**I understand, revoke access**."

  <div style={{ maxWidth: '50%', margin: 'auto' }}>
  <Image alt="Confirm to revoke access for Streamlit to your GitHub account" src="/images/streamlit-community-cloud/GitHub-revoke-confirm.png" />
  </div>

1. Return to <a href="https://share.streamlit.io" target="_blank">share.streamlit.io</a> and sign in. You will be prompted to authorize GitHub as explained in [Connect GitHub](/deploy/streamlit-community-cloud/get-started/connect-your-github-account#organization-access).

### Granting previously denied access

If an organization owner has restricted Streamlit's access or restricted all OAuth applications, they may need to directly modify their permissions in GitHub. If an organization has restricted Streamlit's access, a red X (<i style={{ verticalAlign: "-.25em", color: "#d1242f" }} className={{ class: "material-icons-sharp" }}>close</i>) will appear next to the organization when you are prompted to authorize with your GitHub account.

<div style={{ maxWidth: '60%', margin: 'auto' }}>
<Image alt="Denied authorization for Streamlit to access your GitHub account" src="/images/streamlit-community-cloud/GitHub-auth-denied-XL.png" />
</div>

See GitHub's documentation on <a href="https://docs.github.com/en/apps/oauth-apps/using-oauth-apps/authorizing-oauth-apps#oauth-apps-and-organizations" target="_blank">OAuth apps and organizations</a>.

## Rename your GitHub account or repositories

Community Cloud identifies apps by their GitHub coordinates (owner, repository, branch, entrypoint file path). If you rename your account or repository from which you've deployed an app, you will lose access to administer the app. To learn more, see [Rename your app in GitHub](/deploy/streamlit-community-cloud/manage-your-app/rename-your-app).


================================================
File: /content/deploy/community-cloud/manage-your-account/sign-in-sign-out.md
================================================
---
title: Sign in & sign out
slug: /deploy/streamlit-community-cloud/manage-your-account/sign-in-sign-out
---

# Sign in & sign out

After you've created your account, you can sign in to <a href="https://share.streamlit.io" target="_blank">share.streamlit.io</a> as described by the following options.

![Sign in to Streamlit Community Cloud](/images/streamlit-community-cloud/account-sign-in.png)

## Sign in with Google

1. Click "**Continue to sign-in**."
1. Click "**Continue with Google**."
1. Enter your Google account credentials and follow the prompts.

If your account is already linked to GitHub, you may be immediately prompted to sign in with GitHub.

## Sign in with GitHub

1. Click "**Continue to sign-in**."
1. Click "**Continue with GitHub**."
1. Enter your GitHub credentials and follow the prompts.

<Important>
    When you sign in with GitHub, Community Cloud will look for an account that uses the same email you have on your GitHub account. If such an account doesn't exist, Community Cloud will look for an account that uses your GitHub account for source control. In this latter instance, Community Cloud will update the email on your Community Cloud account to match the email on your GitHub account.
</Important>

## Sign in with Email

1. Click "**Continue to sign-in**."
1. In the "Email" field, enter your email address.
1. Click "**Continue**." (If prompted, verify you are human.)
1. Go to your email inbox, and copy your one-time, six-digit code. The code is valid for ten minutes.
1. Return to the authentication page, and enter your code. (If prompted, verify you are human.)

If your account is already linked to GitHub, you may be immediately prompted to sign in with GitHub.

## Sign out of your account

From your workspace, click on your workspace name in the upper-left corner. Click "**Sign out**."

<div style={{ maxWidth: '80%', margin: 'auto' }}>
<Image alt="Sign out of Streamlit Community Cloud" src="/images/streamlit-community-cloud/account-sign-out.png" />
</div>


================================================
File: /content/deploy/community-cloud/manage-your-account/update-your-email.md
================================================
---
title: Update your email
slug: /deploy/streamlit-community-cloud/manage-your-account/update-your-email
---

# Update your email

To update your email on Streamlit Community Cloud, you have two options: You can create a new account and merge your existing account into it, or you can use your GitHub account to update your email.

## Option 1: Create a new account and merge it

Two Community Cloud accounts can't have the same GitHub account for source control. When you connect a GitHub account to a new Community Cloud account for source control, Community Cloud will automatically merge any existing account with the same source control.

Therefore, you can create a new account with the desired email and connect the same GitHub account to merge them together.

1. Create a new account with your new email.
1. Connect your GitHub account.

Your old and new accounts are now merged, and you have effectively changed your email address.

## Option 2: Use your GitHub account

Alternatively, you can change the email on your GitHub account and then sign in to Community Cloud with GitHub.

1. Go to GitHub, and set your primary email address to your new email.
1. If you are currently signed in to Community Cloud, sign out.
1. Sign in to Community Cloud _using GitHub_.

   If you are redirected to your workspace and you see your existing apps, you're done! Your email has been changed. To confirm your current email and GitHub account, click on your workspace name in the upper-left corner, and look at the bottom of the drop-down menu.

   If you are redirected to an empty workspace and you see "**Workspaces <i style={{ verticalAlign: "-.25em", color: "#ff8700" }} className={{ class: "material-icons-sharp" }}>warning</i>**" in the upper-left corner, proceed to [Connect your GitHub account](/deploy/streamlit-community-cloud/get-started/connect-your-github-account). This can happen if you previously created an account with your new email but didn't connect a GitHub account to it.

<Important>
   If you have multiple GitHub accounts, be careful. To avoid unexpected behavior, either use unique emails on each GitHub account or avoid signing in to Community Cloud using GitHub.
</Important>


================================================
File: /content/deploy/community-cloud/manage-your-account/workspace-settings.md
================================================
---
title: Workspace settings
slug: /deploy/streamlit-community-cloud/manage-your-account/workspace-settings
---

# Workspace settings

From your workspace settings you can [Manage your account](/deploy/streamlit-community-cloud/manage-your-account), see your [App resources and limits](/deploy/streamlit-community-cloud/manage-your-app#app-resources-and-limits) and access support resources.

## Access your workspace settings

1. Sign in to <a href="https://share.streamlit.io" target="_blank">share.streamlit.io</a>.
1. In the upper-left corner, click on your workspace name.
1. In the drop-down menu, click "**Settings**."

   ![Access your workspace settings from your workspace](/images/streamlit-community-cloud/account-settings-header.png)

## Linked accounts

The "**Linked accounts**" section shows your current email identity and source control account. To learn more, see [Manage your account](/deploy/streamlit-community-cloud/manage-your-account).

![Manage your linked accounts in workspace settings](/images/streamlit-community-cloud/workspace-settings-linked-accounts.png)

## Limits

The "**Limits**" section shows your current resources and limits. To learn more, see [App resources and limits](/deploy/streamlit-community-cloud/manage-your-app#app-resources-and-limits).

![Resource limits displayed in workspace settings](/images/streamlit-community-cloud/workspace-settings-limits.png)

## Support

The "**Support**" section provides a convenient list of useful resources so you know where to go for help.

![Support options available through workspace settings](/images/streamlit-community-cloud/workspace-settings-support.png)


================================================
File: /content/deploy/community-cloud/manage-your-app/_index.md
================================================
---
title: Manage your app
slug: /deploy/streamlit-community-cloud/manage-your-app
---

# Manage your app

You can manage your deployed app from your workspace at <a href="https://share.streamlit.io" target="_blank">share.streamlit.io</a> or directly from `<your-custom-subdomain>.streamlit.app`. You can view, deploy, delete, reboot, or favorite an app.

## Manage your app from your workspace

Streamlit Community Cloud is organized into workspaces, which automatically group your apps according to their repository's owner in GitHub. Your workspace is indicated in the upper-left corner. For more information, see [Switching workspaces](/deploy/streamlit-community-cloud/get-started/explore-your-workspace#switching-workspaces).

To deploy or manage any app, always switch to the workspace matching the repository's owner first.

### Sort your apps

If you have many apps in your workspace, you can pin apps to the top by marking them as favorite (<i style={{ verticalAlign: "-.25em", color: "#faca2b" }} className={{ class: "material-icons-sharp" }}>star</i>). For more information, see [Favorite your app](/deploy/streamlit-community-cloud/manage-your-app/favorite-your-app).

### App overflow menus

Each app has a menu accessible from the overflow icon (<i style={{ verticalAlign: "-.25em" }} className={{ class: "material-icons-sharp" }}>more_vert</i>) to the right.

- **Edit with Codespaces** &mdash; See [Edit your app with GitHub Codespaces](/deploy/streamlit-community-cloud/manage-your-app/edit-your-app#edit-your-app-with-github-codespaces)
- **Reboot** &mdash; See [Reboot your app](/deploy/streamlit-community-cloud/manage-your-app/reboot-your-app)
- **Delete** &mdash; See [Delete your app](/deploy/streamlit-community-cloud/manage-your-app/delete-your-app)
- **Analytics** &mdash; See [App analytics](/deploy/streamlit-community-cloud/manage-your-app/app-analytics)
- **Settings** &mdash; See [App settings](/deploy/streamlit-community-cloud/manage-your-app/app-settings)

![App overflow menu in your workspace](/images/streamlit-community-cloud/workspace-app-overflow.png)

If you have view-only access to an app, all options in the app's menu will be disabled except analytics.

![View-only app overflow menu in your workspace](/images/streamlit-community-cloud/workspace-view-only.png)

## Manage your app directly from your app

You can manage your deployed app directly from the app itself! Just make sure you are signed in to Community Cloud, and then visit your app.

### Cloud logs

1. From your app at `<your-custom-subdomain>.streamlit.app`, click "**Manage app**" in the lower-right corner.

   ![Access Cloud logs from Manage app in the lower-right corner of your app](/images/streamlit-community-cloud/cloud-logs-open.png)

2. Once you've clicked on "**Manage app**", you will be able to view your app's logs. This is your primary place to troubleshoot any issues with your app.

   ![Streamlit Community Cloud logs](/images/streamlit-community-cloud/cloud-logs.png)

3. You can access more developer options by clicking the overflow icon (<i style={{ verticalAlign: "-.25em" }} className={{ class: "material-icons-sharp" }}>more_vert</i>) at the bottom of your Cloud logs. To conveniently download your logs, click "**Download log**."

   ![Download your Streamlit Community Cloud logs](/images/streamlit-community-cloud/cloud-logs-menu-download.png)

<Flex>

<div>

Other options accessible from Cloud logs are:

- **Analytics** &mdash; See [App analytics](/deploy/streamlit-community-cloud/manage-your-app/app-analytics).
- **Reboot app** &mdash; See [Reboot your app](/deploy/streamlit-community-cloud/manage-your-app/reboot-your-app).
- **Delete app** &mdash; See [Delete your app](/deploy/streamlit-community-cloud/manage-your-app/delete-your-app).
- **Settings** &mdash; See [App settings](/deploy/streamlit-community-cloud/manage-your-app/app-settings).
- **Your apps** &mdash; Takes you to your [app workspace](#manage-your-app-from-your-workspace).
- **Documentation** &mdash; Takes you to our documentation.
- **Support** &mdash; Takes you to <a href="https://discuss.streamlit.io/" target="_blank">our forums</a>!

</div>

<div style={{ maxWidth: '30%', margin: "auto" }}>
    <Image src="/images/streamlit-community-cloud/cloud-logs-menu-XL.png" clean />
</div>

</Flex>

### App chrome

From your app at `<your-custom-subdomain>.streamlit.app`, you can always access the [app chrome](/develop/concepts/architecture/app-chrome) just like you can when developing locally. The option to deploy your app is removed, but you can still clear your cache from here.

![App menus in Streamlit Community Cloud](/images/streamlit-community-cloud/app-menu.png)

## Manage your app in GitHub

### Update your app

Your GitHub repository is the source for your app, so that means that any time you push an update to your repository you'll see it reflected in the app in almost real time. Try it out!

Streamlit also smartly detects whether you touched your dependencies, in which case it will automatically do a full redeploy for you—which will take a little more time. But since most updates don't involve dependency changes, you should usually see your app update in real time.

### Add or remove dependencies

To add or remove dependencies at any point, just update `requirements.txt` (Python dependenciess) or `packages.txt` (Linux dependencies), and commit the changes to your repository on GitHub. Community Cloud detects the change in your dependencies and automatically triggers (re)installation.

It is best practice to pin your Streamlit version in `requirements.txt`. Otherwise, the version may be auto-upgraded at any point without your knowledge, which could lead to undesired results (e.g. when we deprecate a feature in Streamlit).

## App resources and limits

### Resource limits

All Community Cloud users have access to the same resources and are subject to the same limits. These limits may change at any time without notice. If your app meets or exceeds its limits, it may slow down from throttling or become nonfunctional. The limits as of February 2024 are approximately as follows:

- CPU: 0.078 cores minimum, 2 cores maximum
- Memory: 690MB minimum, 2.7GBs maximum
- Storage: No minimum, 50GB maximum

Symptoms that your app is running out of resources include the following:

- Your app is running slowly.
- Your app displays "🤯 This app has gone over its resource limits."
- Your app displays "😦 Oh no."

### Good for the world

Streamlit offers increased resources for apps with good-for-the-world use cases. Generally, these apps are used by an educational institution or nonprofit organization, are part of an open-source project, or benefit the world in some way. If your app is **not** primarily used by a for-profit company you can [apply for increased resources](https://info.snowflake.com/streamlit-resource-increase-request.html).

### Optimizing your app

If your app is running slow or showing the error pages mentioned above, we first highly recommend going through and implementing the suggestions in the following blog posts to prevent your app from hitting the resource limits and to detect if your Streamlit app leaks memory:

- <a href="https://blog.streamlit.io/common-app-problems-resource-limits/" target="_blank">Common app problems: Resource limits</a>
- <a href="https://blog.streamlit.io/3-steps-to-fix-app-memory-leaks/" target="_blank">3 steps to fix app memory leaks</a>

If your app exceeds its resource limits, developers and viewers alike will see "😦 Oh no."

<div style={{ maxWidth: '70%', margin: 'auto' }}>
<Image alt="App state: Oh no. Error running your app." src="/images/streamlit-community-cloud/app-state-oh-no.png" />
</div>

If see "😦 Oh no." when viewing your app, first check your Cloud logs for any specific errors. If there are no errors in your Cloud logs you are likely dealing with a resource issue.

#### Developer view

If you are signed in to a developer account for an app over its limits, you can access "**Manage app**" from the lower-right corner of the app to reboot it and clear its memory. "**Manage app**" will be red and have a warning icon (<i style={{ verticalAlign: "-.25em" }} className={{ class: "material-icons-sharp" }}>error</i>).

![Developer view: Oh no. Error running your app.](/images/streamlit-community-cloud/app-state-oh-no-developer.png)

### App hibernation

All apps without traffic for one weekday will go to sleep. The system checks apps for inactivity throughout each day as follows:

- Tuesday through Friday: All apps without traffic for 24 hours (one day) will go to sleep.
- Saturday through Monday: All apps without traffic for 72 hours (three days) will go to sleep.

Community Cloud hibernates apps to conserve resources and allow the best communal use of the platform. To keep your app awake, simply visit the app or commit to your app's repository, even if it's an empty commit!

When someone visits a sleeping app, they will see the sleeping page:

<div style={{ maxWidth: '80%', margin: 'auto' }}>
<Image alt="App state: Zzzz. This app has gone to sleep due to inactivity." src="/images/streamlit-community-cloud/app-state-zzzz.png" />
</div>

To wake the app up, click "**Yes, get this app back up!**" This can be done by *anyone* who has access to view the app, not just the app developer!

You can see which of your apps are asleep from your workspace. Sleeping apps have a moon icon (<i style={{ verticalAlign: "-.25em" }} className={{ class: "material-icons-sharp" }}>bedtime</i>) to the right.

![App state: Zzzz. This app has gone to sleep due to inactivity](/images/streamlit-community-cloud/workspace-sleeping-app.png)


================================================
File: /content/deploy/community-cloud/manage-your-app/app-analytics.md
================================================
---
title: App analytics
slug: /deploy/streamlit-community-cloud/manage-your-app/app-analytics
---

# App analytics

Streamlit Community Cloud allows you to see the viewership of each of your apps. Specifically, you can see:

- The total viewers count of your app (counted from April 2022).
- The most recent unique viewers (capped at the last 20 viewers).
- A relative timestamp of each unique viewer's last visit.

![App analytics on Streamlit Community Cloud](/images/streamlit-community-cloud/workspace-app-analytics-viewers.png)

## Access your app analytics

You can get to your app's analytics:

- [From your workspace](#access-app-analytics-from-your-workspace).
- [From your Cloud logs](#access-app-analytics-from-your-cloud-logs).

### Access app analytics from your workspace

From your workspace at <a href="https://share.streamlit.io" target="_blank">share.streamlit.io</a>, click the overflow icon (<i style={{ verticalAlign: "-.25em" }} className={{ class: "material-icons-sharp" }}>more_vert</i>) next to your app. Click "**Analytics**."

![Access app analytics from your workspace through your app overflow menu](/images/streamlit-community-cloud/workspace-app-analytics.png)

### Access app analytics from your Cloud logs

From your app at `<your-custom-subdomain>.streamlit.app`, click "**Manage app**" in the lower-right corner.

![Access Streamlit Community Cloud logs from your app](/images/streamlit-community-cloud/cloud-logs-open.png)

Click the overflow menu icon (<i style={{ verticalAlign: "-.25em" }} className={{ class: "material-icons-sharp" }}>more_vert</i>) and click "**Analytics**."

![Access app analytics from your Cloud logs](/images/streamlit-community-cloud/cloud-logs-menu-analytics.png)

## App viewers

For public apps, we anonymize all viewers outside your workspace to protect their privacy and display anonymous viewers as random pseudonyms. You'll still be able to see the identities of fellow members in your workspace, including any viewers you've invited (once they've accepted).

<Important>

When you invite a viewer to an app, they gain access to analytics as well. Additionally, if someone is invited as a viewer to _any_ app in your workspace, they can see analytics for all public apps in your workspace and invite additional viewers themselves. A viewer in your workspace may see the emails of developers and other viewers in your workspace through analytics.

</Important>

Meanwhile, for private apps where you control who has access, you will be able to see the specific users who recently viewed your apps.

Additionally, you may occasionally see anonymous users in a private app. Rest assured, these anonymous users _do_ have authorized view access granted by you or your workspace members.

Common reasons why users show up anonymously are:

- The app was previously public.
- The given viewer viewed the app in April 2022, when the Streamlit team was honing user identification for this feature.

See Streamlit's general <a href="https://streamlit.io/privacy-policy" target="_blank">Privacy Notice</a>.


================================================
File: /content/deploy/community-cloud/manage-your-app/app-settings.md
================================================
---
title: App settings
slug: /deploy/streamlit-community-cloud/manage-your-app/app-settings
---

# App settings

This page is about your app settings on Streamlit Community Cloud. From your app settings you can [view or change your app's URL](/deploy/streamlit-community-cloud/manage-your-app/app-settings#view-or-change-your-apps-url), manage [public or private access to your app](/deploy/streamlit-community-cloud/share-your-app), and update your saved [secrets for your apps](/deploy/streamlit-community-cloud/deploy-your-app/secrets-management).

If you access "**Settings**" from your [app chrome](/develop/concepts/architecture/app-chrome) in the upper-right corner of your running app, you can access features to control the appearance of your app while it's running.

## Access your app settings

You can get to your app's settings:

- [From your workspace](#access-app-settings-from-your-workspace).
- [From your Cloud logs](#access-app-settings-from-your-cloud-logs).

### Access app settings from your workspace

From your workspace at <a href="https://share.streamlit.io" target="_blank">share.streamlit.io</a>, click the overflow icon (<i style={{ verticalAlign: "-.25em" }} className={{ class: "material-icons-sharp" }}>more_vert</i>) next to your app. Click "**Settings**."

![Access app settings from your workspace](/images/streamlit-community-cloud/workspace-app-settings.png)

### Access app settings from your Cloud logs

From your app at `<your-custom-subdomain>.streamlit.app`, click "**Manage app**" in the lower-right corner.

![Access Streamlit Community Cloud logs from your app](/images/streamlit-community-cloud/cloud-logs-open.png)

Click the overflow menu icon (<i style={{ verticalAlign: "-.25em" }} className={{ class: "material-icons-sharp" }}>more_vert</i>) and click "**Settings**."

![Access app settings from your Cloud logs](/images/streamlit-community-cloud/cloud-logs-menu-settings.png)

## Change your app settings

### View or change your app's URL

To view or customize your app subdomain from the dashboard:

1. Access your app's settings as described above.
1. On the "**General**" tab in the "App settings" dialog, see your app's unique subdomain in the "App URL" field.

   ![General app settings on Streamlit Community Cloud: Custom subdomain](/images/streamlit-community-cloud/workspace-app-settings-general.png)

1. Optional: Enter a new, custom subdomain between 6 and 63 characters in length, and then click "**Save**."

   ![New custom subdomain for your app](/images/streamlit-community-cloud/workspace-app-settings-general-valid-domain.png)

   If a custom subdomain is not available (e.g. because it's already taken or contains restricted words), you'll see an error message. Change your subdomain as indicated.

   ![Invalid custom subdomain for your app](/images/streamlit-community-cloud/workspace-app-settings-general-invalid-domain.png)

### Update your app's share settings

Learn how to [Share your app](/deploy/streamlit-community-cloud/share-your-app).

![Share settings on Streamlit Community Cloud](/images/streamlit-community-cloud/workspace-app-settings-sharing.png)

### View or update your secrets

1. Access your app's settings as described above.
1. On the "**Secrets**" tab in the "App settings" dialog, see your app's secrets in the "Secrets" field.

   ![Secrets app settings on Streamlit Community Cloud](/images/streamlit-community-cloud/workspace-app-settings-secrets.png)

1. Optional: Add, edit, or delete your secrets, and then click "**Save**."

Learn more about [Secrets management for your Community Cloud app](/deploy/streamlit-community-cloud/deploy-your-app/secrets-management).


================================================
File: /content/deploy/community-cloud/manage-your-app/delete-your-app.md
================================================
---
title: Delete your app
slug: /deploy/streamlit-community-cloud/manage-your-app/delete-your-app
---

# Delete your app

If you need to delete your app, it's simple and easy. There are several cases where you may need to delete your app:

- You have finished playing around with an example app.
- You want to deploy from a private repository but already have a private app.
- You want to [change the Python version](/deploy/streamlit-community-cloud/manage-your-app/upgrade-python) for your app.
- You want to [rename your repository](/deploy/streamlit-community-cloud/manage-your-app/rename-your-app) or move your entrypoint file.

If you delete your app and intend to immediately redploy it, your custom subdomain should be immediately available for reuse. Read more about data deletion in [Streamlit trust and security](/deploy/streamlit-community-cloud/get-started/trust-and-security#data-deletion).

You can delete your app:

- [From your workspace](#delete-your-app-from-your-workspace).
- [From your Cloud logs](#delete-your-app-from-your-cloud-logs).

### Delete your app from your workspace

1. From your workspace at <a href="https://share.streamlit.io" target="_blank">share.streamlit.io</a>, click the overflow icon (<i style={{ verticalAlign: "-.25em" }} className={{ class: "material-icons-sharp" }}>more_vert</i>) next to your app. Click "**Delete**."

   ![Delete your app from your workspace](/images/streamlit-community-cloud/workspace-app-delete.png)

2. A confirmation will display. Enter the required confirmation string and click "**Delete**."

   <div style={{ maxWidth: '50%', margin: 'auto' }}>
   <Image alt="Confirm deleting your app from Streamlit Community Cloud" src="/images/streamlit-community-cloud/workspace-app-delete-confirm.png" clean />
   </div>

### Delete your app from your Cloud logs

1. From your app at `<your-custom-subdomain>.streamlit.app`, click "**Manage app**" in the lower-right corner.

   ![Access Streamlit Community Cloud logs from your app](/images/streamlit-community-cloud/cloud-logs-open.png)

2. Click the overflow menu icon (<i style={{ verticalAlign: "-.25em" }} className={{ class: "material-icons-sharp" }}>more_vert</i>) and click "**Delete app**."

   ![Delete your app from your Cloud logs](/images/streamlit-community-cloud/cloud-logs-menu-delete.png)

3. A confirmation will display. Enter the required confirmation string and click "**Delete**."

<div style={{ maxWidth: '50%', margin: 'auto' }}>
<Image alt="Confirm deleting your app from Streamlit Community Cloud" src="/images/streamlit-community-cloud/workspace-app-delete-confirm.png" clean />
</div>


================================================
File: /content/deploy/community-cloud/manage-your-app/edit-your-app.md
================================================
---
title: Edit your app
slug: /deploy/streamlit-community-cloud/manage-your-app/edit-your-app
---

# Edit your app

You can edit your app from any development environment of your choice. Streamlit Community Cloud will monitor your repository and automatically copy any file changes you commit. You will immediately see commits reflected in your deployed app for most changes (such as edits to your app's Python files).

Community Cloud also makes it easy to skip the work of setting up a development environment. With a few simple clicks, you can configure a development environment using GitHub Codespaces.

## Edit your app with GitHub Codespaces

Spin up a cloud-based development environment for your deployed app in minutes. You can run your app within your codespace to enjoy experimenting in a safe, sandboxed environment. When you are done editing your code, you can commit your changes to your repo or just leave them in your codespace to return to later.

### Create a codespace for your deployed app

1. From your workspace at <a href="https://share.streamlit.io" target="_blank">share.streamlit.io</a>, click the overflow icon (<i style={{ verticalAlign: "-.25em" }} className={{ class: "material-icons-sharp" }}>more_vert</i>) next to your app. Click "**Edit with Codespaces**."

   ![Edit your app with GitHub Codespaces](/images/streamlit-community-cloud/workspace-app-edit.png)

   Community Cloud will add a `.devcontainer/devcontainer.json` file to your repository. If you already have a file of the same name in your repository, it will not be changed. If you want your repository to receive the instance created by Community Cloud, delete or rename your existing devcontainer configuration.

1. Wait for GitHub to set up your codespace.

   It can take several minutes to fully initialize your codespace. After the Visual Studio Code editor appears in your codespace, it can take several minutes to install Python and start the Streamlit server. When complete, a split screen view displays a code editor on the left and a running app on the right. The code editor opens two tabs by default: the repository's readme file and the app's entrypoint file.

   ![Your new GitHub Codespace](/images/streamlit-community-cloud/deploy-template-blank-codespace.png)

1. Optional: For more room to work, open the app preview in another tab.

   If you have multiple monitors and want a little more room to work, open your app preview in another tab instead of using the Simple Browser within Visual Studio Code. Just copy the URL from the Simple Browser into another tab, and then close the Simple Browser. Now you have more room to edit your code. The remaining steps on this page will continue to display the split-screen view in Visual Studio Code.

1. Make a change to your app.

   When you make changes to your app, the file is automatically saved within your codespace. Your edits do not affect your repository or deployed app until you commit those changes, which is explained in a later step. The app preview shown on the right is local to your codespace.

1. In order to see updates automatically reflected on the right, click "**Always rerun**" when prompted after your first edit.

   ![Select "Always rerun" to automatically see edits in your running app](/images/streamlit-community-cloud/deploy-template-blank-codespace-edit.png)

   Alternatively, you can click "**Rerun**" to avoid unnecessary reruns while writing code. Because your code is continually saved, automatically rerunning the app will raises errors when you pause partway through a line of code. Regardless of which you choose, you can change the setting through the app chrome. Just click the overflow icon (<i style={{ verticalAlign: "-.25em" }} className={{ class: "material-icons-sharp" }}>more_vert</i>) in the upper-right corner of your preview app, click "**Settings**," and then toggle "**Run on save**."

1. Continue to edit your app. Your codespace will continue to automatically save your files as you work with them, and the preview will continue to update as the app reruns.

### Optional: Publish your changes

After making edits to your app, you can choose to commit your edits to your repository to update your deployed app instantly. If you just want to keep your edits in your codespace to return to later, skip to [Stop or delete your codespace](#stop-or-delete-your-codespace).

1. In the left navigation bar, click the source control icon.

   ![Click on the source control icon](/images/streamlit-community-cloud/deploy-template-blank-codespace-edit-source-control.png)

1. In the source control sidebar on the left, enter a name for your commit.
1. Click "**<i style={{ verticalAlign: "-.25em" }} className={{ class: "material-icons-sharp" }}>check</i> Commit**."

   ![See your deployed Streamlit app](/images/streamlit-community-cloud/deploy-template-blank-codespace-edit-commit.png)

1. To stage and commit all your changes, in the confirmation dialog, click "**Yes**." Your changes are committed locally in your codespace.
1. To push your commit to GitHub, in the source control sidebar on the left, click "**<i style={{ verticalAlign: "-.25em" }} className={{ class: "material-icons-sharp" }}>cached</i> 1 <i style={{ verticalAlign: "-.25em" }} className={{ class: "material-icons-sharp" }}>arrow_upward</i>**."
1. To push commits to "origin/main," in the confirmation dialog, click "**OK**."

   Your changes are now saved to your GitHub repository. Community Cloud will immediately reflect the changes in your deployed app.

1. Optional: To see your updated, published app, return to the "**My apps**" section of your workspace at <a href="https://share.streamlit.io" target="_blank">share.streamlit.io</a>, and click on your app.

### Stop or delete your codespace

When you stop interacting with your codespace, GitHub will generally stop your codespace for you. However, the surest way to avoid undesired use of your capacity is to stop or delete your codespace when you are done.

1. Go to <a href="https://github.com/codespaces" target="_blank">github.com/codespaces</a>. At the bottom of the page, all your codespaces are listed. Click the overflow menu icon (<i style={{ verticalAlign: "-.25em" }} className={{ class: "material-icons-sharp" }}>more_horiz</i>) for your codespace.

   ![Stop or delete your GitHub Codespace](/images/streamlit-community-cloud/deploy-hello-codespace-manage.png)

2. Click "**Stop codespace**" if you'd like to return to your work later. Otherwise, click "**Delete**."

   <div style={{ maxWidth: '40%', margin: 'auto' }}>
   <Image alt="Stop your GitHub codespace" src="/images/streamlit-community-cloud/codespace-menu.png" />
   </div>

3. Congratulations! You just deployed an app to Community Cloud. 🎉 Head back to your workspace at <a href="https://share.streamlit.io/" target="_blank">share.streamlit.io/</a> and [deploy another Streamlit app](/deploy/streamlit-community-cloud/deploy-your-app).

   ![See your deployed Streamlit app](/images/streamlit-community-cloud/deploy-template-blank-edited.png)


================================================
File: /content/deploy/community-cloud/manage-your-app/favorite-your-app.md
================================================
---
title: Favorite your app
slug: /deploy/streamlit-community-cloud/manage-your-app/favorite-your-app
---

# Favorite your app

Streamlit Community Cloud supports a "favorite" feature that lets you quickly access your apps from your workspace. Favorited apps appear at the top of their workspace with a yellow star (<i style={{ verticalAlign: "-.25em", color: "#faca2b" }} className={{ class: "material-icons-sharp" }}>star</i>) beside them. You can favorite and unfavorite apps in any workspace to which you have access as a developer or invited viewer.

![Favorite apps appear on top in Streamlit Community Cloud](/images/streamlit-community-cloud/workspace-two-apps.png)

<Note>

Favorites are specific to your account. Other members of your workspace cannot see which apps you have favorited.

</Note>

## Favoriting and unfavoriting your app

You can favorite your app:

- [From your workspace](#favorite-your-app-from-your-workspace).
- [From your app](#favorite-your-app-from-your-app-toolbar)!

### Favorite your app from your workspace

1. From your workspace at <a href="https://share.streamlit.io" target="_blank">share.streamlit.io</a>, hover over your app.

   If your app is not yet favorited, a star outline (<i style={{ verticalAlign: "-.25em" }} className={{ class: "material-icons-sharp" }}>star_border</i>) will appear on hover.

1. Click on the star (<i style={{ verticalAlign: "-.25em" }} className={{ class: "material-icons-sharp" }}>star_border</i>/<i style={{ verticalAlign: "-.25em", color: "#faca2b" }} className={{ class: "material-icons-sharp" }}>star</i>) next to your app name to toggle its favorited status.

### Favorite your app from your app toolbar

From your app at `<your-custom-subdomain>.streamlit.app`, click the star (<i style={{ verticalAlign: "-.25em" }} className={{ class: "material-icons-sharp" }}>star_border</i>/<i style={{ verticalAlign: "-.25em", color: "#faca2b" }} className={{ class: "material-icons-sharp" }}>star</i>) in the upper-right corner to toggle your app's favorited status.

![Favorite your app directly from your live app](/images/streamlit-community-cloud/favorite-select.png)


================================================
File: /content/deploy/community-cloud/manage-your-app/reboot-your-app.md
================================================
---
title: Reboot your app
slug: /deploy/streamlit-community-cloud/manage-your-app/reboot-your-app
---

# Reboot your app

If you need to clear your app's memory or force a fresh build after modifying a file that Streamlit Community Cloud doesn't monitor, you may need to reboot your app. This will interrupt any user who may currently be using your app and may take a few minutes for your app to redeploy. Anyone visiting your app will see "Your app is in the oven" during a reboot.

Rebooting your app on Community Cloud is easy! You can reboot your app:

- [From your workspace](#reboot-your-app-from-your-workspace).
- [From your Cloud logs](#reboot-your-app-from-your-cloud-logs).

### Reboot your app from your workspace

1. From your workspace at <a href="https://share.streamlit.io" target="_blank">share.streamlit.io</a>, click the overflow icon (<i style={{ verticalAlign: "-.25em" }} className={{ class: "material-icons-sharp" }}>more_vert</i>) next to your app. Click "**Reboot**."

   ![Reboot your app from your workspace](/images/streamlit-community-cloud/workspace-app-reboot.png)

2. A confirmation will display. Click "**Reboot**."

<div style={{ maxWidth: '50%', margin: 'auto' }}>
<Image alt="Confirm rebooting your app in Streamlit Community Cloud" src="/images/streamlit-community-cloud/workspace-app-reboot-confirm.png" clean />
</div>

### Reboot your app from your Cloud logs

1. From your app at `<your-custom-subdomain>.streamlit.app`, click "**Manage app**" in the lower-right corner.

   ![Access Streamlit Community Cloud logs from your app](/images/streamlit-community-cloud/cloud-logs-open.png)

2. Click the overflow menu icon (<i style={{ verticalAlign: "-.25em" }} className={{ class: "material-icons-sharp" }}>more_vert</i>) and click "**Reboot app**."

   ![Reboot your app from your Cloud logs](/images/streamlit-community-cloud/cloud-logs-menu-reboot.png)

3. A confirmation will display. Click "**Reboot**."

<div style={{ maxWidth: '50%', margin: 'auto' }}>
<Image alt="Confirm rebooting your app in Streamlit Community Cloud" src="/images/streamlit-community-cloud/workspace-app-reboot-confirm.png" clean />
</div>


================================================
File: /content/deploy/community-cloud/manage-your-app/rename-your-app.md
================================================
---
title: Rename or change your app's GitHub coordinates
slug: /deploy/streamlit-community-cloud/manage-your-app/rename-your-app
description: Prevent view-only access when changing your GitHub username or repository
keywords: View-only access, Can't edit app, Can't delete app, Can't reboot app
---

# Rename or change your app's GitHub coordinates

Streamlit Community Cloud identifies apps by their GitHub coordinates (owner, repository, branch, entrypoint file path). If you move or rename one of these coordinates without preparation, you will lose access to administer any associated app.

## Delete, rename, redeploy

If you need to rename your repository, move your entrypoint file, or otherwise change a deployed app's GitHub coordinates, do the following:

1. Delete your app.
1. Make your desired changes in GitHub.
1. Redeploy your app.

## Regain access when you've already made changes to your app's GitHub coordinates

If you have changed a repository so that Community Cloud can no longer find your app on GitHub, your app will be missing or shown as view-only. View-only means that you can't edit, reboot, delete, or view settings for your app. You can only access analytics.

You may be able to regain control as follows:

1. Revert the change you made to your app so that Community Cloud can see the owner, repository, branch, and entrypoint file it expects.
1. Sign out of Community Cloud and GitHub.
1. Sign back in to Community Cloud and GitHub.
1. If you have regained access, delete your app. Proceed with your original change, and redeploy your app.

   If this does not restore access to your app, please [contact Snowflake support](/knowledge-base/deploy/how-to-submit-a-support-case-for-streamlit-community-cloud) for assistance. They can delete your disconnected apps so you can redeploy them. For the quickest help, please provide a complete list of your affected apps by URL.


================================================
File: /content/deploy/community-cloud/manage-your-app/upgrade-python.md
================================================
---
title: Upgrade your app's Python version on Community Cloud
slug: /deploy/streamlit-community-cloud/manage-your-app/upgrade-python
---

# Upgrade your app's Python version on Community Cloud

Dependencies within Python can be upgraded in place by simply changing your environment configuration file (typically `requirements.txt`). However, Python itself can't be changed after deployment.

When you deploy an app, you can select the version of Python through the "**Advanced settings**" dialog. After you have deployed an app, you must delete it and redeploy it to change the version of Python it uses.

1. Take note of your app's settings:

   - Current, custom subdomain.
   - GitHub coordinates (repository, branch, and entrypoint file path).
   - Secrets.

   When you delete an app, its custom subdomain is immediately available for reuse.

1. [Delete your app](/deploy/streamlit-community-cloud/manage-your-app/delete-your-app).
1. [Deploy your app](/deploy/streamlit-community-cloud/deploy-your-app).
   1. On the deployment page, select your app's GitHub coordinates.
   1. Set your custom domain to match your deleted instance.
   1. Click "**Advanced settings**."
   1. Choose your desired version of Python.
   1. Optional: If your app had secrets, re-enter them.
   1. Click "**Save**."
   1. Click "**Deploy**."

In a few minutes, Community Cloud will redirect you to your redployed app.


================================================
File: /content/deploy/community-cloud/manage-your-app/upgrade-streamlit.md
================================================
---
title: Upgrade your app's Streamlit version on Streamlit Community Cloud
slug: /deploy/streamlit-community-cloud/manage-your-app/upgrade-streamlit
---

# Upgrade your app's Streamlit version on Streamlit Community Cloud

Want to use a cool new Streamlit feature but your app on Streamlit Community Cloud is running an old version of the Streamlit library? If that's you, don't worry! Here's how to upgrade your app's Streamlit version, based on how you manage your [app dependencies](/deploy/streamlit-community-cloud/deploy-your-app/app-dependencies):

## No dependency file

When there is no dependencies file in your repository, your app will use the lastest Streamlit version that existed when it was last rebooted. In this case, simply [reboot your app](/deploy/streamlit-community-cloud/manage-your-app/reboot-your-app) and Community Cloud will install the latest version.

You may want to avoid getting into this situation if your app depends on a specific version of Streamlit. That is why we encourage you to use a dependency file and pin your desired version of Streamlit.

## With a dependency file

When your app includes a dependency file, reboot your app or change your dependency file as follows:

- If Streamlit is not included in your dependency file, reboot the app as described above.

  Note that we don't recommend having an incomplete dependency file since `pip` won't be able to include `streamlit` when resolving compatible versions of your dependencies.

- If Streamlit is included in your dependency file, but the version is not pinned or capped, reboot the app as described above.

  When Community Cloud reboots your app, it will re-resolve your dependency file. Your app will then have the latest version of all dependencies that are consistent with your dependency file.

- If Streamlit is included in your dependency file, and the version is pinned (e.g., `streamlit==1.37.0`), update your dependency file.

  When you commit a change to your dependency file in your repository, Community Cloud will detect the change and automatically resolve the new dependencies. This is how you add, remove, or change all Python dependencies in general. You don't need to manually reboot your app, but you can if you want to.


================================================
File: /content/deploy/community-cloud/share-your-app/_index.md
================================================
---
title: Share your app
slug: /deploy/streamlit-community-cloud/share-your-app
---

# Share your app

Now that your app is deployed you can easily share it and collaborate on it. But first, let's take a moment and do a little joy dance for getting that app deployed! 🕺💃

Your app is now live at a fixed URL, so go wild and share it with whomever you want. Your app will inherit permissions from your GitHub repo, meaning that if your repo is private your app will be private and if your repo is public your app will be public. If you want to change that you can simply do so from the app settings menu.

You are only allowed one private app at a time. If you've deployed from a private repository, you will have to make that app public or delete it before you can deploy another app from a private repository. Only developers can change your app between public and private.

- [Make your app public or private](#make-your-app-public-or-private)
- [Share your public app](#share-your-public-app)
- [Share your private app](#share-your-private-app)

## Make your app public or private

If you deployed your app from a public repository, your app will be public by default. If you deployed your app from a private repository, you will need to make the app public if you want to freely share it with the community at large.

### Set privacy from your app settings

1. Access your [App settings](/deploy/streamlit-community-cloud/manage-your-app/app-settings) and go to the "**Sharing**" section.

   ![Share settings on Streamlit Community Cloud](/images/streamlit-community-cloud/workspace-app-settings-sharing.png)

2. Set your app's privacy under "Who can view this app." Select "**This app is public and searchable**" to make your app public. Select "**Only specific people can view this app**" to make your app private.

   ![Set your app's privacy in share settings](/images/streamlit-community-cloud/workspace-app-settings-sharing-change.png)

### Set privacy from the share button

1. From your app at `<your-custom-subdomain>.streamlit.app`, click "**Share**" in the upper-right corner.

   ![Access the share button from your app](/images/streamlit-community-cloud/share-open.png)

2. Toggle your app between public and private by clicking "**Make this app public**."

   ![Toggle your app between public and private from the share button](/images/streamlit-community-cloud/share-menu-public-toggle.png)

## Share your public app

Once your app is public, just give anyone your app's URL and they view it! Streamlit Community Cloud has several convenient shortcuts for sharing your app.

### Share your app on social media

1. From your app at `<your-custom-subdomain>.streamlit.app`, click "**Share**" in the upper-right corner.
2. Click "**Social**" to access convenient social media share buttons.

   ![Social media sharing links from the share button](/images/streamlit-community-cloud/share-menu-social.png)

<Tip>

Use the social media sharing buttons to post your app on our forum! We'd love to see what you make and perhaps feature your app as our app of the month. 💖

</Tip>

### Invite viewers by email

Whether your app is public or private, you can send an email invite to your app directly from Streamlit Community Cloud. This grants the viewer access to analytics for all your public apps and the ability to invite other viewers to your workspace. Developers and invited viewers are identified by their email in analytics instead of appearing anonymously (if they view any of your apps while signed in). Read more about viewers in [App analytics](/deploy/streamlit-community-cloud/manage-your-app/app-analytics).

1. From your app at `<your-custom-subdomain>.streamlit.app`, click "**Share**" in the upper-right corner.
2. Enter an email address and click "**Invite**."

   ![Invite viewers from the share button](/images/streamlit-community-cloud/share-invite-public.png)

3. Invited users will get a direct link to your app in their inbox.

   ![Invitation email sent to viewers](/images/streamlit-community-cloud/share-invite-email.png)

### Copy your app's URL

From your app click "**Share**" in the upper-right corner then click "**Copy link**."

![Copy your app's URL from the share button](/images/streamlit-community-cloud/share-copy.png)

### Add a badge to your GitHub repository

To help others find and play with your Streamlit app, you can add Streamlit's GitHub badge to your repo. Below is an enlarged example of what the badge looks like. Clicking on the badge takes you to&mdash;in this case&mdash;Streamlit's Roadmap.

<div style={{ marginBottom: '2em' }}>
<div style={{ width: 'fit-content', margin: 'auto' }}>
    <a href="https://roadmap.streamlit.app/" target="_blank">
    <Image alt="Open in Streamlit badge for GitHub" src="/images/streamlit-community-cloud/github-badge.svg" pure />
    </a>
</div>
</div>

Once you deploy your app, you can embed this badge right into your GitHub README.md by adding the following Markdown:

```markdown
[![Streamlit App](https://static.streamlit.io/badges/streamlit_badge_black_white.svg)](https://<your-custom-subdomain>.streamlit.app)
```

<Note>

Be sure to replace `https://<your-custom-subdomain>.streamlit.app` with the URL of your deployed app!

</Note>

## Share your private app

By default an app deployed from a private repository will be private to the developers in the workspace. A private app will not be visible to anyone else unless you grant them explicit permission. You can grant permission by adding them as a developer on GitHub or by adding them as a viewer on Streamlit Community Cloud.

Once you have added someone's email address to your app's viewer list, that person will be able to sign in and view your private app. If their email is associated with a Google account, they will be able to sign in with Google OAuth. Otherwise, they will be able to sign in with single-use, emailed links. Streamlit sends an email invitation with a link to your app every time you invite someone.

<Important>

When you add a viewer to any app in your workspace, they are granted access to analytics for that app as well as analytics for all your public apps. They can also pass these permissions to others by inviting more viewers. All viewers and developers in your workspace are identified by their email in analytics. Furthermore, their emails show in analytics for every app in your workspace and not just apps they are explicitly invited to. Read more about viewers in [App analytics](/deploy/streamlit-community-cloud/manage-your-app/app-analytics)

</Important>

### Invite viewers from the share button

1. From your app at `<your-custom-subdomain>.streamlit.app`, click "**Share**" in the upper-right corner.

   ![Access the share button from your app](/images/streamlit-community-cloud/share-open.png)

2. Enter the email to send an invitation to and click "**Invite**."

   ![Invite viewers from the share button](/images/streamlit-community-cloud/share-invite.png)

3. Invited users appear in the list below.

   ![View invited users from the share button](/images/streamlit-community-cloud/share-invited.png)

4. Invited users will get a direct link to your app in their inbox.

   ![Invitation email sent to viewers](/images/streamlit-community-cloud/share-invite-email.png)

- To remove a viewer, simply access the share menu as above and click the <i style={{ verticalAlign: "-.25em" }} className={{ class: "material-icons-sharp" }}>close</i> next to their name.

  ![Remove viewers from the share button](/images/streamlit-community-cloud/share-remove.png)

### Invite viewers from your app settings

1. Access your [App settings](/deploy/streamlit-community-cloud/manage-your-app/app-settings) and go to the "**Sharing**" section.

   ![Access sharing settings from your app settings](/images/streamlit-community-cloud/workspace-app-settings-sharing.png)

2. Add or remove users from the list of viewers. Click "**Save**."

   ![Invite and remove viewers from your app settings](/images/streamlit-community-cloud/workspace-app-settings-sharing-invite.png)


================================================
File: /content/deploy/community-cloud/share-your-app/embed-your-app.md
================================================
---
title: Embed your app
slug: /deploy/streamlit-community-cloud/share-your-app/embed-your-app
---

# Embed your app

Embedding Streamlit Community Cloud apps enriches your content by integrating interactive, data-driven applications directly within your pages. Whether you're writing a blog post, a technical document, or sharing resources on platforms like Medium, Notion, or even StackOverflow, embedding Streamlit apps adds a dynamic component to your content. This allows your audience to interact with your ideas, rather than merely reading about them or looking at screenshots.

Streamlit Community Cloud supports both [iframe](#embedding-with-iframes) and [oEmbed](#embedding-with-oembed) methods for embedding **public** apps. This flexibility enables you to share your apps across a wide array of platforms, broadening your app's visibility and impact. In this guide, we'll cover how to use both methods effectively to share your Streamlit apps with the world.

## Embedding with iframes

Streamlit Community Cloud supports embedding **public** apps using the subdomain scheme. To embed a public app, add the query parameter `/?embed=true` to the end of the `*.streamlit.app` URL.

For example, say you want to embed the <a href="https://30days.streamlit.app/" target="_blank">30DaysOfStreamlit app</a>. The URL to include in your iframe is: `https://30days.streamlit.app/?embed=true`:

```javascript
<iframe
  src="https://30days.streamlit.app?embed=true"
  style="height: 450px; width: 100%;"
></iframe>
```

<Cloud name="30days" height="450px" />

<Important>

There will be no official support for embedding private apps.

</Important>

In addition to allowing you to embed apps via iframes, the `?embed=true` query parameter also does the following:

- Removes the toolbar with the app menu icon (<i style={{ verticalAlign: "-.25em" }} className={{ class: "material-icons-sharp" }}>more_vert</i>).
- Removes the padding at the top and bottom of the app.
- Removes the footer.
- Removes the colored line from the top of the app.

For granular control over the embedding behavior, Streamlit allows you to specify one or more instances of the `?embed_options` query parameter (e.g. to show the toolbar, open the app in dark theme, etc). [Click here for a full list of Embed options.](#embed-options)

## Embedding with oEmbed

Streamlit's oEmbed support allows for a simpler embedding experience. You can directly drop a Streamlit app's URL into a Medium, Ghost, or Notion page (or any of more than 700 content providers that supports oEmbed or <a href="https://embed.ly/" target="_blank">embed.ly</a>). The embedded app will automatically appear! This helps Streamlit Community Cloud apps seamlessly integrate into these platforms, improving the visibility and accessibility of your apps.

### Example

When creating content in a Notion page, Medium article, or Ghost blog, you only need to paste the app's URL and hit "**Enter**." The app will then render automatically at that spot in your content. You can use your undecorated app URL without the `?embed=true` query parameter.

```
https://30days.streamlit.app/
```

Here's an example of <a href="https://github.com/chrieke" target="_blank">@chrieke</a>'s <a href="https://chrieke-prettymapp-streamlit-prettymappapp-1k0qxh.streamlit.app/" target="_blank">Prettymapp app</a> embedded in a Medium article:

<Image src="/images/streamlit-community-cloud/oembed.gif" alt="Example: Embed an app in a Medium article with oEmbed" clean />

<Tip>

Ensure the platform hosting the embedded Streamlit app supports oEmbed or <a href="https://embed.ly/" target="_blank">embed.ly</a>.

</Tip>

### Key Sites for oEmbed

oEmbed should work out of the box for several platforms including but not limited to:

- <a target="_blank" href="https://medium.com/">Medium</a>
- <a target="_blank" href="https://notion.so/">Notion</a>
- <a target="_blank" href="https://www.looker.com/">Looker</a>
- <a target="_blank" href="https://www.tableau.com/">Tableau</a>
- <a target="_blank" href="https://ghost.org/">Ghost</a>
- <a target="_blank" href="https://www.discourse.org/">Discourse</a>
- <a target="_blank" href="https://stackoverflow.com/">StackOverflow</a>
- <a target="_blank" href="https://www.w3schools.com/">W3</a>
- <a target="_blank" href="https://www.reddit.com/">Reddit</a>

Please check the specific platform's documentation to verify support for oEmbed.

### iframe versus oEmbed

The only noteworthy differences between the methods is that iframing allows you to customize the app's embedding behavior (e.g. showing the toolbar, opening the app in dark theme, etc) using the various `?embed_options` described in the next section.

## Embed options

When [Embedding with iframes](#embedding-with-iframes), Streamlit allows you to specify one or more instances of the `?embed_options` query parameter for granular control over the embedding behavior.

Both `?embed` and `?embed_options` are invisible to [`st.query_params`](/develop/api-reference/caching-and-state/st.query_params) and its precursors, [`st.experimental_get_query_params`](/develop/api-reference/caching-and-state/st.experimental_get_query_params) and [`st.experimental_set_query_params`](/develop/api-reference/caching-and-state/st.experimental_set_query_params). You can't get or set their values.

The supported values for `?embed_options` are listed below:

1. Show the toolbar at the top right of the app which includes the app menu (<i style={{ verticalAlign: "-.25em" }} className={{ class: "material-icons-sharp" }}>more_vert</i>), running man, and link to GitHub.

   ```javascript
   /?embed=true&embed_options=show_toolbar
   ```

2. Show padding at the top and bottom of the app.

   ```javascript
   /?embed=true&embed_options=show_padding
   ```

3. Show the footer reading "Made with Streamlit." (This doesn't apply to Streamlit versions 1.29.0 and later since the footer was removed from the library.)

   ```javascript
   /?embed=true&embed_options=show_footer
   ```

4. Show the colored line at the top of the app.

   ```javascript
   /?embed=true&embed_options=show_colored_line
   ```

5. Hide the "skeleton" that appears while an app is loading.

   ```javascript
   /?embed=true&embed_options=hide_loading_screen
   ```

6. Disable scrolling for the main body of the app. (The sidebar will still be scrollable.)

   ```javascript
   /?embed=true&embed_options=disable_scrolling
   ```

7. Open the app with light theme.

   ```javascript
   /?embed=true&embed_options=light_theme
   ```

8. Open the app with dark theme.

   ```javascript
   /?embed=true&embed_options=dark_theme
   ```

You can also combine the params:

```javascript
/?embed=true&embed_options=show_toolbar&embed_options=show_padding&embed_options=show_footer&embed_options=show_colored_line&embed_options=disable_scrolling
```

### Build an embed link

You can conveniently build an embed link for your app &mdash; right from your app!

1. From your app at `<your-custom-subdomain>.streamlit.app`, click "**Share**" in the upper-right corner.
2. Click "**Embed**" to access a list of selectable embed options.

   ![Access embed options from the share button](/images/streamlit-community-cloud/share-menu-embed.png)

3. Select your embed options and click "**Get embed link**" to copy the embed link to your clipboard.

   ![Build a customized embed link for your app from the share button](/images/streamlit-community-cloud/share-menu-embed-url.png)


================================================
File: /content/deploy/community-cloud/share-your-app/indexability.md
================================================
---
title: SEO and search indexability
slug: /deploy/streamlit-community-cloud/share-your-app/indexability
---

# SEO and search indexability

When you deploy a public app to Streamlit Community Cloud, it is automatically indexed by search engines like Google and Bing on a weekly basis. 🎈 This means that anyone can find your app by <a href="https://www.google.com/search?q=traingenerator.streamlit.app" target="_blank">searching for its custom subdomain</a> (e.g. "traingenerator.streamlit.app") or by searching for the app's title.

## Get the most out of app indexability

Here are some tips to help you get the most out of app indexability:

1. [Make sure your app is public](#make-sure-your-app-is-public)
2. [Choose a custom subdomain early](#choose-a-custom-subdomain-early)
3. [Choose a descriptive app title](#choose-a-descriptive-app-title)
4. [Customize your app's meta description](#customize-your-apps-meta-description)

### Make sure your app is public

All public apps hosted on Community Cloud are indexed by search engines. If your app is private, it will not be indexed by search engines. To make your private app public, read [Share your app](/deploy/streamlit-community-cloud/share-your-app).

### Choose a custom subdomain early

Community Cloud automatically generates a subdomain for your app if you do not choose one. However, you can change your subdomain at any time! Custom subdomains modify your app URLs to reflect your app content, personal branding, or whatever you’d like. To learn how to change your app's subdomain, see [View or change your app's URL](/deploy/streamlit-community-cloud/manage-your-app/app-settings#view-or-change-your-apps-url).

By choosing a custom subdomain, you can use it to help people find your app. For example, if you're deploying an app that generates training data, you might choose a subdomain like `traingenerator.streamlit.app`. This makes it easy for people to find your app by searching for "training generator" or "train generator streamlit app."

We recommend choosing a custom subdomain when you deploy your app. This ensures that your app is indexed by search engines using your custom subdomain, rather than the automatically generated one. If you choose a custom subdomain later, your app may be indexed multiple times&mdash;once using the default subdomain and once using your custom subdomain. In this case, your old URL will result in a 404 error which can confuse users who are searching for your app.

### Choose a descriptive app title

The meta title of your app is the text that appears in search engine results. It is also the text that appears in the browser tab when your app is open. By default, the meta title of your app is the same as the title of your app. However, you can customize the meta title of your app by setting the [`st.set_page_config`](/develop/api-reference/configuration/st.set_page_config) parameter `page_title` to a custom string. For example:

```python
st.set_page_config(page_title="Traingenerator")
```

This will change the meta title of your app to "Traingenerator." This makes it easier for people to find your app by searching for "Traingenerator" or "train generator streamlit app":

<Image src="/images/streamlit-community-cloud/indexability-app-title.png" caption='Google search results for "train generator streamlit app"' />

### Customize your app's meta description

Meta descriptions are the short descriptions that appear in search engine results. Search engines use the meta description to help users understand what your app is about.

From our observations, search engines seem to favor the content in both `st.header` and `st.text` over `st.title`. If you put a description at the top of your app under `st.header` or `st.text`, there’s a good chance search engines will use this for the meta description.

## What does my indexed app look like?

If you're curious about what your app looks like in search engine results, you can type the following into Google Search:

```
site:<your-custom-subdomain>.streamlit.app
```

Example: `site:traingenerator.streamlit.app`

<Image src="/images/streamlit-community-cloud/indexability-search-result.png" caption='Google search results for "site:traingenerator.streamlit.app"' />

## What if I don't want my app to be indexed?

If you don't want your app to be indexed by search engines, you can make it private. Read [Share your app](/deploy/streamlit-community-cloud/share-your-app) to learn more about making your app private. Note: each workspace can only have one private app. If you want to make your app private, you must first delete any other private app in your workspace or make it public.

That said, Community Cloud is an open and free platform for the community to deploy, discover, and share Streamlit apps and code with each other. As such, we encourage you to make your app public so that it can be indexed by search engines and discovered by other Streamlit users and community members.


================================================
File: /content/deploy/community-cloud/share-your-app/share-previews.md
================================================
---
title: Share previews
slug: /deploy/streamlit-community-cloud/share-your-app/share-previews
---

# Share previews

Social media sites generate a card with a title, preview image, and description when you share a link. This feature is called a "share preview." In the same way, when you share a link to a public Streamlit app on social media, a share preview is also generated. Here's an example of a share preview for a public Streamlit app posted on Twitter:

<div style={{ marginLeft: '3em' }}>
    <Flex>
    <Image caption="Share preview for a public Streamlit app" src="/images/streamlit-community-cloud/share-preview-twitter-annotated.png" />
    </Flex>
</div>

<Note>

Share previews are generated only for public apps deployed on Streamlit Community Cloud.

</Note>

## Titles

The title is the text that appears at the top of the share preview. The text also appears in the browser tab when you visit the app. You should set the title to something that will make sense to your app's audience and describe what the app does. It is best practice to keep the title concise, ideally under 60 characters.

There are two ways to set the title of a share preview:

1. Set the `page_title` parameter in [`st.set_page_config()`](/develop/api-reference/configuration/st.set_page_config) to your desired title. E.g.:

   ```python
   import streamlit as st

   st.set_page_config(page_title="My App")

   # ... rest of your app
   ```

2. If you don't set the `page_title` parameter, the title of the share preview will be the name of your app's GitHub repository. For example, the default title for an app hosted on GitHub at <a href="https://github.com/jrieke/traingenerator" target="_blank">github.com/jrieke/traingenerator</a> will be "traingenerator".

## Descriptions

The description is the text that appears below the title in the share preview. The description should summarize what the app does and ideally should be under 100 characters.

Streamlit pulls the description from the README in the app's GitHub repository. If there is no README, the description will default to:

_This app was built in Streamlit! Check it out and visit https://streamlit.io for more awesome community apps. 🎈_

<div style={{ marginLeft: '6em' }}>
    <Flex>
    <Image caption="Default share preview when a description is missing" src="/images/streamlit-community-cloud/share-preview-private-app.png" />
    </Flex>
</div>

If you want your share previews to look great and want users to share your app and click on your links, you should write a good description in the README of your app’s GitHub repository.

## Preview images

Streamlit Community Cloud takes a screenshot of your app once a day and uses it as the preview image, unlike titles and descriptions which are pulled directly from your app's code or GitHub repository. This screenshot may take up to 24 hours to update.

### Switching your app from public to private

If you initially made your app public and later decided to make it private, we will stop generating share previews for the app. However, it may take up to 24 hours for the share previews to stop appearing.


================================================
File: /content/deploy/concepts/_index.md
================================================
---
title: Deployment concepts
slug: /deploy/concepts
---

# Deployment concepts

Learn the fundamental concepts of app deployment. There are three main processes involved in deploying apps.

- Install Python, Streamlit, and other dependencies in your deployment environment.
- Securely handle your secrets and private information.
- Remote start your app (`streamlit run`).

If you're using Streamlit Community Cloud, we'll do most of the work for you!

<InlineCalloutContainer>
    <InlineCallout
        color="lightBlue-70"
        icon="build_circle"
        bold="Dependencies."
        href="/deploy/concepts/dependencies"
    >Understand the basics of configuring your deployment environment.</InlineCallout>
    <InlineCallout
        color="lightBlue-70"
        icon="password"
        bold="Secrets."
        href="/deploy/concepts/secrets"
    >Understand the basics of secret management.</InlineCallout>
</InlineCalloutContainer>


================================================
File: /content/deploy/concepts/dependencies.md
================================================
---
title: Managing dependencies when deploying your app
slug: /deploy/concepts/dependencies
---

# Managing dependencies when deploying your app

Before you began developing your app, you set up and configured your development environment by installing Python and Streamlit. When you deploy your app, you need to set up and configure your deployment environment in the same way. When you deploy your app to a cloud service, your app's [Python server](/develop/concepts/architecture/architecture#python-backend-server) will be running on a remote machine. This remote machine will not have access all the files and programs on your personal computer.

All Streamlit apps have at least two dependencies: Python and Streamlit. Your app may have additional dependencies in the form of Python packages or software that must be installed to properly execute your script. If you are using a service like Streamlit Community Cloud which is designed for Streamlit apps, we'll take care of Python and Streamlit for you!

## Install Python and other software

If you are using Streamlit Community Cloud, Python is already installed. You can just pick the version in the deployment dialog. If you need to install Python yourself or you have other non-Python software to install, follow your platform's instructions to install additional software. You will commonly use a package management tool to do this.
For example, Streamlit Community Cloud uses Advanced Package Tool (`apt`) for Debian-based Linux systems. For more information about installing non-Python depencies on Streamlit Community Cloud, see [`apt-get` dependencies](/deploy/streamlit-community-cloud/deploy-your-app/app-dependencies#apt-get-dependencies).

## Install Python packages

Once you have Python installed in your deployment environment, you'll need to install all the necessary Python packages, including Streamlit! With each `import` of an installed package, you add a Python dependency to your script. You need to install those dependencies in your deployment environment through a Python package manager.

If you are using Streamlit Community Cloud, you'll have the latest version of Streamlit and all of its dependencies installed by default. So, if you're making a simple app and don't need additional dependencies, you won't have to do anything at all!

### `pip` and `requirements.txt`

Since `pip` comes by default with Python, the most common way to configure your Python environment is with a `requirements.txt` file. Each line of a `requirements.txt` file is a package to `pip install`. You should _not_ include <a href="https://docs.python.org/3/py-modindex.html" target="_blank">built-in Python libraries</a> like `math`, `random`, or `distutils` in your `requirements.txt` file. These are a part of Python and aren't installed separately.

<Tip>

Since dependencies may rely on a specific version of Python, always be aware of the Python version used in your development environment, and select the same version for your deployment environment.

</Tip>

If you have a script like the following, you would only need to install Streamlit. No extra dependencies would be needed since `pandas` and `numpy` are installed as direct dependencies of `streamlit`. Similarly, `math` and `random` are built into Python.

```python
import streamlit as st
import pandas as pd
import numpy as np
import math
import random

st.write('Hi!')
```

However, it's a best practice accurately record packages you use, so the recommended `requirements.txt` file would be:

```none
streamlit
pandas
numpy
```

If you needed to specify certain versions, another valid example would be:

```none
streamlit==1.24.1
pandas>2.0
numpy<=1.25.1
```

A `requirements.txt` file is commonly saved in the root of your repository or file directory. If you are using Streamlit Community Cloud, see [Add Python dependencies](/deploy/streamlit-community-cloud/deploy-your-app/app-dependencies#add-python-dependencies) for more information. Otherwise, check your platform's documentation.


================================================
File: /content/deploy/concepts/secrets.md
================================================
---
title: Managing secrets when deploying your app
slug: /deploy/concepts/secrets
---

# Managing secrets when deploying your app

If you are connecting to data sources or external services, you will likely be handling secret information like credentials or keys. Secret information should be stored and transmitted in a secure manner. When you deploy your app, ensure that you understand your platform's features and mechanisms for handling secrets so you can follow best practice.

Avoid saving secrets directly in your code and keep `.gitignore` updated to prevent accidentally committing a local secret to your repository. For helpful reminders, see [Security reminders](/develop/concepts/connections/security-reminders).

If you are using Streamlit Community Cloud, [Secrets management](/deploy/streamlit-community-cloud/deploy-your-app/secrets-management) allows you save environment variables and store secrets outside of your code. If you are using another platform designed for Streamlit, check if they have a built-in mechanism for working with secrets. In some cases, they may even support `st.secrets` or securely uploading your `secrets.toml` file.

For information about using `st.connection` with environment variables, see [Global secrets, managing multiple apps and multiple data stores](/develop/concepts/connections/connecting-to-data#global-secrets-managing-multiple-apps-and-multiple-data-stores).


================================================
File: /content/deploy/snowflake/_index.md
================================================
---
title: Streamlit in Snowflake
slug: /deploy/snowflake
---

# Deploy Streamlit apps in Snowflake

Host your apps alongside your data in a single, global platform. Snowflake provides industry-leading features that ensure the highest levels of security for your account, users, data, and apps. If you're looking for an enterprise hosting solution, try Snowflake!

<TileContainer>
    <Tile
        icon="rocket_launch"
        title="Streamlit in Snowflake Quickstart"
        text="Create a free trial account and deploy an app with Streamlit in Snowflake."
        link="/get-started/installation/streamlit-in-snowflake"
        background="lightBlue-70"
    />
    <Tile
        icon="code"
        title="Examples"
        text="Explore a wide variety of example apps in Snowflake Labs' snowflake-demo-streamlit repository."
        link="https://github.com/Snowflake-Labs/snowflake-demo-streamlit"
        background="lightBlue-70"
    />
    <Tile
        icon="book"
        title="Get started with Snowflake"
        text="Learn more in Snowflake's documentation."
        link="https://docs.snowflake.com/user-guide-getting-started"
        background="lightBlue-70"
    />
</TileContainer>

There are three ways to host Streamlit apps in Snowflake:

<InlineCalloutContainer>
    <InlineCallout
        color="lightBlue-70"
        icon="bolt"
        bold="Streamlit in Snowflake."
        href="https://docs.snowflake.com/developer-guide/streamlit/about-streamlit"
    >Run your Streamlit app as a native object in Snowflake. Enjoy an in-browser editor and minimal work to configure your environment. Share your app with other users in your Snowflake account through role-based access control (RBAC). This is a great way to deploy apps internally for your business. Check out Snowflake docs!</InlineCallout>
    <InlineCallout
        color="lightBlue-70"
        icon="ac_unit"
        bold="Snowflake Native Apps."
        href="https://docs.snowflake.com/en/developer-guide/native-apps/adding-streamlit"
    >Package your app with data and share it with other Snowflake accounts. This is a great way to share apps and their underlying data with other organizations who use Snowflake. Check out Snowflake docs!</InlineCallout>
    <InlineCallout
        color="lightBlue-70"
        icon="web_asset"
        bold="Snowpark Container Services."
        href="https://docs.snowflake.com/en/developer-guide/snowpark-container-services/overview"
    >Deploy your app in a container that's optimized to run in Snowflake. This is the most flexible option, where you can use any library and assign a public URL to your app. Manage your allowed viewers through your Snowflake account. Check out Snowflake docs!</InlineCallout>
</InlineCalloutContainer>

<Note>

    Using Snowpark Container Services to deploy a Streamlit app requires a compute pool, which is not available in a trial account at this time.

</Note>


================================================
File: /content/deploy/tutorials/_index.md
================================================
---
title: Deployment tutorials
slug: /deploy/tutorials
---

# Deployment tutorials

This sections contains step-by-step guides on how to deploy Streamlit apps to various cloud platforms and services. We have deployment guides for:

<DataSourcesContainer>
<DataSourcesCard href="/deploy/streamlit-community-cloud/get-started">

<Image pure alt="screenshot" src="/images/deploy/streamlit-cloud.png" />

<h5 align="center">Streamlit Community Cloud</h5>

</DataSourcesCard>

<DataSourcesCard href="/deploy/tutorials/docker">

<Image pure alt="screenshot" src="/images/deploy/docker.png" />

<h5 align="center">Docker</h5>

</DataSourcesCard>

<DataSourcesCard href="/deploy/tutorials/kubernetes">

<Image pure alt="screenshot" src="/images/deploy/kubernetes.png" />

<h5 align="center">Kubernetes</h5>

</DataSourcesCard>
</DataSourcesContainer>

While we work on official Streamlit deployment guides for other hosting providers, here are some user-submitted tutorials for different cloud services:

- [How to Deploy Streamlit to a Free **Amazon EC2** instance](https://towardsdatascience.com/how-to-deploy-a-streamlit-app-using-an-amazon-free-ec2-instance-416a41f69dc3), by Rahul Agarwal.
- [Host Streamlit on **Azure**](https://towardsdatascience.com/deploying-a-streamlit-web-app-with-azure-app-service-1f09a2159743), by Richard Peterson.
- [How to deploy Streamlit apps to **Google App Engine**](https://dev.to/whitphx/how-to-deploy-streamlit-apps-to-google-app-engine-407o), by [Yuichiro Tachibana (Tsuchiya)](https://discuss.streamlit.io/u/whitphx/summary).
- [Host Streamlit on **Heroku**](https://towardsdatascience.com/quickly-build-and-deploy-an-application-with-streamlit-988ca08c7e83), by Maarten Grootendorst.
- [Deploy Streamlit on **Ploomber Cloud**](https://docs.cloud.ploomber.io/en/latest/apps/streamlit.html), by Ido Michael.
- [Host Streamlit on **21YunBox**](https://www.21yunbox.com/docs/#/deploy-streamlit), by Toby Lei.
- [Deploy a Streamlit App on **Koyeb**](https://www.koyeb.com/docs/deploy/streamlit), by Justin Ellingwood.
- [Community-supported deployment wiki](https://discuss.streamlit.io/t/streamlit-deployment-guide-wiki/5099).


================================================
File: /content/deploy/tutorials/docker.md
================================================
---
title: Deploy Streamlit using Docker
slug: /deploy/tutorials/docker
---

# Deploy Streamlit using Docker

## Introduction

So you have an amazing app and you want to start sharing it with other people, what do you do? You have a few options. First, where do you want to run your Streamlit app, and how do you want to access it?

- **On your corporate network** - Most corporate networks are closed to the outside world. You typically use a VPN to log onto your corporate network and access resources there. You could run your Streamlit app on a server in your corporate network for security reasons, to ensure that only folks internal to your company can access it.
- **On the cloud** - If you'd like to access your Streamlit app from outside of a corporate network, or share your app with folks outside of your home network or laptop, you might choose this option. In this case, it'll depend on your hosting provider. We have [community-submitted guides](/knowledge-base/deploy/deploy-streamlit-heroku-aws-google-cloud) from Heroku, AWS, and other providers.

Wherever you decide to deploy your app, you will first need to containerize it. This guide walks you through using Docker to deploy your app. If you prefer Kubernetes see [Deploy Streamlit using Kubernetes](/deploy/tutorials/kubernetes).

## Prerequisites

1. [Install Docker Engine](#install-docker-engine)
2. [Check network port accessibility](#check-network-port-accessibility)

### Install Docker Engine

If you haven't already done so, install [Docker](https://docs.docker.com/engine/install/#server) on your server. Docker provides `.deb` and `.rpm` packages from many Linux distributions, including:

- [Debian](https://docs.docker.com/engine/install/debian/)
- [Ubuntu](https://docs.docker.com/engine/install/ubuntu/)

Verify that Docker Engine is installed correctly by running the `hello-world` Docker image:

```bash
sudo docker run hello-world
```

<Tip>

Follow Docker's official [post-installation steps for Linux](https://docs.docker.com/engine/install/linux-postinstall/) to run Docker as a non-root user, so that you don't have to preface the `docker` command with `sudo`.

</Tip>

### Check network port accessibility

As you and your users are behind your corporate VPN, you need to make sure all of you can access a certain network port. Let's say port `8501`, as it is the default port used by Streamlit. Contact your IT team and request access to port `8501` for you and your users.

## Create a Dockerfile

Docker builds images by reading the instructions from a `Dockerfile`. A `Dockerfile` is a text document that contains all the commands a user could call on the command line to assemble an image. Learn more in the [Dockerfile reference](https://docs.docker.com/engine/reference/builder/). The [docker build](https://docs.docker.com/engine/reference/commandline/build/) command builds an image from a `Dockerfile`. The [docker run](https://docs.docker.com/engine/reference/commandline/run/) command first creates a container over the specified image, and then starts it using the specified command.

Here's an example `Dockerfile` that you can add to the root of your directory. i.e. in `/app/`

```docker
# app/Dockerfile

FROM python:3.9-slim

WORKDIR /app

RUN apt-get update && apt-get install -y \
    build-essential \
    curl \
    software-properties-common \
    git \
    && rm -rf /var/lib/apt/lists/*

RUN git clone https://github.com/streamlit/streamlit-example.git .

RUN pip3 install -r requirements.txt

EXPOSE 8501

HEALTHCHECK CMD curl --fail http://localhost:8501/_stcore/health

ENTRYPOINT ["streamlit", "run", "streamlit_app.py", "--server.port=8501", "--server.address=0.0.0.0"]
```

### Dockerfile walkthrough

Let’s walk through each line of the Dockerfile :

1. A `Dockerfile` must start with a [`FROM`](https://docs.docker.com/engine/reference/builder/#from) instruction. It sets the [Base Image](https://docs.docker.com/glossary/#base-image) (think OS) for the container:

   ```docker
   FROM python:3.9-slim
   ```

   Docker has a number of official Docker base images based on various Linux distributions. They also have base images that come with language-specific modules such as [Python](https://hub.docker.com/_/python). The `python` images come in many flavors, each designed for a specific use case. Here, we use the `python:3.9-slim` image which is a lightweight image that comes with the latest version of Python 3.9.

   <Tip>

   You can also use your own base image, provided the image you use contains a [supported version of Python](/knowledge-base/using-streamlit/sanity-checks#check-0-are-you-using-a-streamlit-supported-version-of-python) for Streamlit. There is no one-size-fits-all approach to using any specific base image, nor is there an official Streamlit-specific base image.

   </Tip>

2. The `WORKDIR` instruction sets the working directory for any `RUN`, `CMD`, `ENTRYPOINT`, `COPY` and `ADD` instructions that follow it in the `Dockerfile` . Let’s set it to `app/` :

   ```docker
   WORKDIR /app
   ```

   <Important>

   As mentioned in [Development flow](/get-started/fundamentals/main-concepts#development-flow), for Streamlit version 1.10.0 and higher, Streamlit apps cannot be run from the root directory of Linux distributions. Your main script should live in a directory other than the root directory. If you try to run a Streamlit app from the root directory, Streamlit will throw a `FileNotFoundError: [Errno 2] No such file or directory` error. For more information, see GitHub issue [#5239](https://github.com/streamlit/streamlit/issues/5239).

   If you are using Streamlit version 1.10.0 or higher, you must set the `WORKDIR` to a directory other than the root directory. For example, you can set the `WORKDIR` to `/app` as shown in the example `Dockerfile` above.
   </Important>

3. Install `git` so that we can clone the app code from a remote repo:

   ```docker
   RUN apt-get update && apt-get install -y \
       build-essential \
       curl \
       software-properties-common \
       git \
       && rm -rf /var/lib/apt/lists/*
   ```

4. Clone your code that lives in a remote repo to `WORKDIR`:

   a. If your code is in a public repo:

   ```docker
   RUN git clone https://github.com/streamlit/streamlit-example.git .
   ```

   Once cloned, the directory of `WORKDIR` will look like the following:

   ```bash
   app/
   - requirements.txt
   - streamlit_app.py
   ```

   where `requirements.txt` file contains all your [Python dependencies](/deploy/streamlit-community-cloud/deploy-your-app/app-dependencies#add-python-dependencies). E.g

   ```
   altair
   pandas
   streamlit
   ```

   and `streamlit_app.py` is your main script. E.g.

   ```python
   from collections import namedtuple
   import altair as alt
   import math
   import pandas as pd
   import streamlit as st

   """
   # Welcome to Streamlit!

   Edit `/streamlit_app.py` to customize this app to your heart's desire :heart:

   If you have any questions, checkout our [documentation](https://docs.streamlit.io) and [community
   forums](https://discuss.streamlit.io).

   In the meantime, below is an example of what you can do with just a few lines of code:
   """

   with st.echo(code_location='below'):
      total_points = st.slider("Number of points in spiral", 1, 5000, 2000)
      num_turns = st.slider("Number of turns in spiral", 1, 100, 9)

      Point = namedtuple('Point', 'x y')
      data = []

      points_per_turn = total_points / num_turns

      for curr_point_num in range(total_points):
         curr_turn, i = divmod(curr_point_num, points_per_turn)
         angle = (curr_turn + 1) * 2 * math.pi * i / points_per_turn
         radius = curr_point_num / total_points
         x = radius * math.cos(angle)
         y = radius * math.sin(angle)
         data.append(Point(x, y))

      st.altair_chart(alt.Chart(pd.DataFrame(data), height=500, width=500)
         .mark_circle(color='#0068c9', opacity=0.5)
         .encode(x='x:Q', y='y:Q'))
   ```

   b. If your code is in a private repo, please read [Using SSH to access private data in builds](https://docs.docker.com/develop/develop-images/build_enhancements/#using-ssh-to-access-private-data-in-builds) and modify the Dockerfile accordingly -- to install an SSH client, download the public key for [github.com](https://github.com), and clone your private repo. If you use an alternative VCS such as GitLab or Bitbucket, please consult the documentation for that VCS on how to copy your code to the `WORKDIR` of the Dockerfile.

   c. If your code lives in the same directory as the Dockerfile, copy all your app files from your server into the container, including `streamlit_app.py`, `requirements.txt`, etc, by replacing the `git clone` line with:

   ```docker
   COPY . .
   ```

   More generally, the idea is copy your app code from wherever it may live on your server into the container. If the code is not in the same directory as the Dockerfile, modify the above command to include the path to the code.

5. Install your app’s [Python dependencies](/deploy/streamlit-community-cloud/deploy-your-app/app-dependencies#add-python-dependencies) from the cloned `requirements.txt` in the container:

   ```docker
   RUN pip3 install -r requirements.txt
   ```

6. The [`EXPOSE`](https://docs.docker.com/engine/reference/builder/#expose) instruction informs Docker that the container listens on the specified network ports at runtime. Your container needs to listen to Streamlit’s (default) port 8501:

   ```docker
   EXPOSE 8501
   ```

7. The [`HEALTHCHECK`](https://docs.docker.com/engine/reference/builder/#expose) instruction tells Docker how to test a container to check that it is still working. Your container needs to listen to Streamlit’s (default) port 8501:

   ```docker
   HEALTHCHECK CMD curl --fail http://localhost:8501/_stcore/health
   ```

8. An [`ENTRYPOINT`](https://docs.docker.com/engine/reference/builder/#entrypoint) allows you to configure a container that will run as an executable. Here, it also contains the entire `streamlit run` command for your app, so you don’t have to call it from the command line:

   ```docker
   ENTRYPOINT ["streamlit", "run", "streamlit_app.py", "--server.port=8501", "--server.address=0.0.0.0"]
   ```

## Build a Docker image

The [`docker build`](https://docs.docker.com/engine/reference/commandline/build/) command builds an image from a `Dockerfile` . Run the following command from the `app/` directory on your server to build the image:

```docker
docker build -t streamlit .
```

The `-t` flag is used to tag the image. Here, we have tagged the image `streamlit`. If you run:

```docker
docker images
```

You should see a `streamlit` image under the REPOSITORY column. For example:

```
REPOSITORY   TAG       IMAGE ID       CREATED              SIZE
streamlit    latest    70b0759a094d   About a minute ago   1.02GB
```

## Run the Docker container

Now that you have built the image, you can run the container by executing:

```docker
docker run -p 8501:8501 streamlit
```

The `-p` flag publishes the container’s port 8501 to your server’s 8501 port.

If all went well, you should see an output similar to the following:

```
docker run -p 8501:8501 streamlit

  You can now view your Streamlit app in your browser.

  URL: http://0.0.0.0:8501
```

To view your app, users can browse to `http://0.0.0.0:8501` or `http://localhost:8501`

<Note>

Based on your server's network configuration, you could map to port 80/443 so that users can view your app using the server IP or hostname. For example: `http://your-server-ip:80` or `http://your-hostname:443`.

</Note>


================================================
File: /content/deploy/tutorials/kubernetes.md
================================================
---
title: Deploy Streamlit using Kubernetes
slug: /deploy/tutorials/kubernetes
---

# Deploy Streamlit using Kubernetes

## Introduction

So you have an amazing app and you want to start sharing it with other people, what do you do? You have a few options. First, where do you want to run your Streamlit app, and how do you want to access it?

- **On your corporate network** - Most corporate networks are closed to the outside world. You typically use a VPN to log onto your corporate network and access resources there. You could run your Streamlit app on a server in your corporate network for security reasons, to ensure that only folks internal to your company can access it.
- **On the cloud** - If you'd like to access your Streamlit app from outside of a corporate network, or share your app with folks outside of your home network or laptop, you might choose this option. In this case, it'll depend on your hosting provider. We have [community-submitted guides](/knowledge-base/deploy/deploy-streamlit-heroku-aws-google-cloud) from Heroku, AWS, and other providers.

Wherever you decide to deploy your app, you will first need to containerize it. This guide walks you through using Kubernetes to deploy your app. If you prefer Docker see [Deploy Streamlit using Docker](/deploy/tutorials/docker).

## Prerequisites

1. [Install Docker Engine](#install-docker-engine)
2. [Install the gcloud CLI](#install-the-gcloud-cli)

### Install Docker Engine

If you haven't already done so, install [Docker](https://docs.docker.com/engine/install/#server) on your server. Docker provides `.deb` and `.rpm` packages from many Linux distributions, including:

- [Debian](https://docs.docker.com/engine/install/debian/)
- [Ubuntu](https://docs.docker.com/engine/install/ubuntu/)

Verify that Docker Engine is installed correctly by running the `hello-world` Docker image:

```bash
sudo docker run hello-world
```

<Tip>

Follow Docker's official [post-installation steps for Linux](https://docs.docker.com/engine/install/linux-postinstall/) to run Docker as a non-root user, so that you don't have to preface the `docker` command with `sudo`.

</Tip>

### Install the gcloud CLI

In this guide, we will orchestrate Docker containers with Kubernetes and host docker images on the Google Container Registry (GCR). As GCR is a Google-supported Docker registry, we need to register [`gcloud`](https://cloud.google.com/sdk/gcloud/reference) as the Docker credential helper.

Follow the official documentation to [Install the gcloud CLI](https://cloud.google.com/sdk/docs/install) and initialize it.

## Create a Docker container

We need to create a docker container which contains all the dependencies and the application code. Below you can see the entrypoint, i.e. the command run when the container starts, and the Dockerfile definition.

### Create an entrypoint script

Create a `run.sh` script containing the following:

```bash
#!/bin/bash

APP_PID=
stopRunningProcess() {
    # Based on https://linuxconfig.org/how-to-propagate-a-signal-to-child-processes-from-a-bash-script
    if test ! "${APP_PID}" = '' && ps -p ${APP_PID} > /dev/null ; then
       > /proc/1/fd/1 echo "Stopping ${COMMAND_PATH} which is running with process ID ${APP_PID}"

       kill -TERM ${APP_PID}
       > /proc/1/fd/1 echo "Waiting for ${COMMAND_PATH} to process SIGTERM signal"

        wait ${APP_PID}
        > /proc/1/fd/1 echo "All processes have stopped running"
    else
        > /proc/1/fd/1 echo "${COMMAND_PATH} was not started when the signal was sent or it has already been stopped"
    fi
}

trap stopRunningProcess EXIT TERM

source ${VIRTUAL_ENV}/bin/activate

streamlit run ${HOME}/app/streamlit_app.py &
APP_ID=${!}

wait ${APP_ID}
```

### Create a Dockerfile

Docker builds images by reading the instructions from a `Dockerfile`. A `Dockerfile` is a text document that contains all the commands a user could call on the command line to assemble an image. Learn more in the [Dockerfile reference](https://docs.docker.com/engine/reference/builder/). The [docker build](https://docs.docker.com/engine/reference/commandline/build/) command builds an image from a `Dockerfile`. The [docker run](https://docs.docker.com/engine/reference/commandline/run/) command first creates a container over the specified image, and then starts it using the specified command.

Here's an example `Dockerfile` that you can add to the root of your directory.

```docker
FROM python:3.9-slim

RUN groupadd --gid 1000 appuser \
    && useradd --uid 1000 --gid 1000 -ms /bin/bash appuser

RUN pip3 install --no-cache-dir --upgrade \
    pip \
    virtualenv

RUN apt-get update && apt-get install -y \
    build-essential \
    software-properties-common \
    git

USER appuser
WORKDIR /home/appuser

RUN git clone https://github.com/streamlit/streamlit-example.git app

ENV VIRTUAL_ENV=/home/appuser/venv
RUN virtualenv ${VIRTUAL_ENV}
RUN . ${VIRTUAL_ENV}/bin/activate && pip install -r app/requirements.txt

EXPOSE 8501

COPY run.sh /home/appuser
ENTRYPOINT ["./run.sh"]
```

<Important>

As mentioned in [Development flow](/get-started/fundamentals/main-concepts#development-flow), for Streamlit version 1.10.0 and higher, Streamlit apps cannot be run from the root directory of Linux distributions. Your main script should live in a directory other than the root directory. If you try to run a Streamlit app from the root directory, Streamlit will throw a `FileNotFoundError: [Errno 2] No such file or directory` error. For more information, see GitHub issue [#5239](https://github.com/streamlit/streamlit/issues/5239).

If you are using Streamlit version 1.10.0 or higher, you must set the `WORKDIR` to a directory other than the root directory. For example, you can set the `WORKDIR` to `/home/appuser` as shown in the example `Dockerfile` above.
</Important>

### Build a Docker image

Put the above files (`run.sh` and `Dockerfile`) in the same folder and build the docker image:

```docker
docker build --platform linux/amd64 -t gcr.io/$GCP_PROJECT_ID/k8s-streamlit:test .
```

<Important>

Replace `$GCP_PROJECT_ID` in the above command with the name of your Google Cloud project.

</Important>

### Upload the Docker image to a container registry

The next step is to upload the Docker image to a container registry. In this example, we will use the [Google Container Registry (GCR)](https://cloud.google.com/container-registry). Start by enabling the Container Registry API. Sign in to Google Cloud and navigate to your project’s **Container Registry** and click **Enable**.

We can now build the Docker image from the previous step and push it to our project’s GCR. Be sure to replace `$GCP_PROJECT_ID` in the docker push command with the name of your project:

```bash
gcloud auth configure-docker
docker push gcr.io/$GCP_PROJECT_ID/k8s-streamlit:test
```

## Create a Kubernetes deployment

For this step you will need a:

- Running Kubernetes service
- Custom domain for which you can generate a TLS certificate
- DNS service where you can configure your custom domain to point to the application IP

As the image was uploaded to the container registry in the previous step, we can run it in Kubernetes using the below configurations.

### Install and run Kubernetes

Make sure your [Kubernetes client](https://kubernetes.io/docs/tasks/tools/#kubectl), `kubectl`, is installed and running on your machine.

### Configure a Google OAuth Client and oauth2-proxy

For configuring the Google OAuth Client, please see [Google Auth Provider](https://oauth2-proxy.github.io/oauth2-proxy/docs/configuration/oauth_provider#google-auth-provider). Configure oauth2-proxy to use the desired [OAuth Provider Configuration](https://oauth2-proxy.github.io/oauth2-proxy/docs/configuration/oauth_provider) and update the oath2-proxy config in the config map.

The below configuration contains a ouath2-proxy sidecar container which handles the authentication with Google. You can learn more from the [oauth2-proxy repository](https://github.com/oauth2-proxy/oauth2-proxy).

### Create a Kubernetes configuration file

Create a [YAML](https://yaml.org/) [configuration file](https://kubernetes.io/docs/concepts/cluster-administration/manage-deployment/#organizing-resource-configurations) named `k8s-streamlit.yaml`:

```yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: streamlit-configmap
data:
  oauth2-proxy.cfg: |-
    http_address = "0.0.0.0:4180"
    upstreams = ["http://127.0.0.1:8501/"]
    email_domains = ["*"]
    client_id = "<GOOGLE_CLIENT_ID>"
    client_secret = "<GOOGLE_CLIENT_SECRET>"
    cookie_secret = "<16, 24, or 32 bytes>"
    redirect_url = <REDIRECT_URL>

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: streamlit-deployment
  labels:
    app: streamlit
spec:
  replicas: 1
  selector:
